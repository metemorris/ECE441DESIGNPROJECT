00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/11/2017 4:31:17 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Design Project v1
00000000                             3  * Written by : Mete Morris
00000000                             4  * Date       : 03.11.2017
00000000                             5  * Description: Prints out prompt, does help(not finished) and exit
00000000                             6  * To-Do      : exit prompt when null character read
00000000                             7  *-----------------------------------------------------------
00001000                             8      ORG    $1000
00001000                             9  *COMMAND LINE PROMPT*  
00001000                            10  PROMPT:   
00001000= 4D 4F 4E 49 54 4F ...     11      DC.B 'MONITOR441> '
0000100C= 00                        12      DC.B 0
0000100D                            13  
0000100D                            14  NOPROMPT:
0000100D= 57 52 4F 4E 47 20 ...     15      DC.B 'WRONG ENTRY. TYPE HELP FOR HELP'
0000102C= 00                        16      DC.B 0
0000102D                            17  
0000102D                            18  
0000102D                            19  *MENU OPTIONS LOOKUP*
0000102D                            20  HELPPROMPT:
0000102D= 48 45 4C 50               21      DC.B 'HELP'
00001031= 00                        22      DC.B 0    
00001032                            23  MDSPPROMPT:
00001032= 4D 44 53 50 20            24      DC.B 'MDSP '
00001037                            25  SORTWPROMPT:
00001037= 53 4F 52 54 57            26      DC.B 'SORTW'
0000103C= 00                        27      DC.B 0
0000103D                            28  MMPROMPT:
0000103D= 4D 4D 20                  29      DC.B 'MM '
00001040                            30  MSPROMPT:
00001040= 4D 53 20                  31      DC.B 'MS '
00001043                            32  BFPROMPT:
00001043= 42 46 20                  33      DC.B 'BF '
00001046                            34  BMOVPROMPT:
00001046= 42 4D 4F 56 20            35      DC.B 'BMOV '
0000104B                            36  BTSTPROMPT:
0000104B= 42 54 53 54 20            37      DC.B 'BTST '
00001050                            38  BSCHPROMPT:
00001050= 42 53 43 48 20            39      DC.B 'BSCH '
00001055                            40  GOPROMPT:
00001055= 47 4F 20                  41      DC.B 'GO '
00001058                            42  DFPROMPT:
00001058= 44 46                     43      DC.B 'DF'
0000105A= 00                        44      DC.B 0
0000105B                            45  EXITPROMPT:
0000105B= 45 58 49 54               46      DC.B 'EXIT'
0000105F= 00                        47      DC.B 0
00001060                            48      
00001060                            49      
00001060                            50  *EXTRA COMMAND LINE THINGS*
00001060                            51  SEMICOLONSEP:
00001060= 20 3A 20                  52      DC.B ' : '
00001063= 00                        53      DC.B 0
00001064                            54  SPACE:
00001064= 20                        55      DC.B ' '
00001065= 00                        56      DC.B 0
00001066                            57      
00001066                            58  LINEPROMPT: 
00001066= 20 2D 3E 20               59      DC.B ' -> '
0000106A= 00                        60      DC.B 0
0000106B                            61  DOT:
0000106B= 2E                        62      DC.B '.'
0000106C                            63      
0000106C                            64  SEARCHSUCCESS:
0000106C= 42 53 43 48 20 53 ...     65      DC.B 'BSCH SEARCH WAS SUCCESFUL!'
00001086= 00                        66      DC.B 0
00001087                            67  ADDRESS: 
00001087= 41 44 44 52 45 53 ...     68      DC.B 'ADDRESS-> '
00001091= 00                        69      DC.B 0
00001092                            70      
00001092                            71  DATA:
00001092= 44 41 54 41 2D 3E         72      DC.B 'DATA->'
00001098= 00                        73      DC.B 0
00001099                            74      
00001099                            75  SEARCHFAIL:
00001099= 53 45 41 52 43 48 ...     76      DC.B 'SEARCH FAILED'
000010A6= 00                        77      DC.B 0
000010A7                            78      
000010A7                            79      
000010A7                            80  BTSTSUCCESS
000010A7= 42 54 53 54 20 53 ...     81      DC.B 'BTST SUCCESFUL'
000010B5= 00                        82      DC.B 0 
000010B6                            83  BTSTFAIL
000010B6= 42 54 53 54 20 46 ...     84      DC.B 'BTST FAILED'
000010C1= 00                        85      DC.B 0 
000010C2                            86  DATAREAD
000010C2= 44 41 54 41 20 52 ...     87      DC.B 'DATA READ->'
000010CD= 00                        88      DC.B 0
000010CE                            89  DATASTORED
000010CE= 44 41 54 41 20 53 ...     90      DC.B 'DATA STORED->'
000010DB= 00                        91      DC.B 0
000010DC                            92      
000010DC                            93  
000010DC                            94  
000010DC                            95  *HELP LINE TO BE PRINTED OUT*  
000010DC                            96  HELP:
000010DC= 48 45 4C 50               97      DC.B 'HELP'
000010E0= 0A                        98      DC.B $A  ;NEW LINE
000010E1= 44 49 53 50 4C 41 ...     99      DC.B 'DISPLAYS ALL AVAILABE COMMANDS AND USAGE DESCRIPTION '
00001116= 0D                       100      DC.B $D  ;CARRIAGE RETURN
00001117= 0A                       101      DC.B $A
00001118= 0A                       102      DC.B $A
00001119= 4D 44 53 50              103      DC.B 'MDSP'
0000111D= 0D                       104      DC.B $D  
0000111E= 0A                       105      DC.B $A
0000111F= 09                       106      DC.B $9 ;TAB
00001120= 54 68 65 20 4D 44 ...    107      DC.B 'The MDSP(MemoryDisplay)command outputs the address and memory'
0000115D= 0D                       108      DC.B $D  
0000115E= 0A                       109      DC.B $A
0000115F= 09                       110      DC.B $9
00001160= 63 6F 6E 74 65 6E ...    111      DC.B 'contents from <address1> to <address2>. '
00001188= 0D                       112      DC.B $D  
00001189= 0A                       113      DC.B $A
0000118A= 09                       114      DC.B $9
0000118B= 54 68 65 20 4D 44 ...    115      DC.B 'The MDSP(Memory Display) command ALSO outputs the address and'
000011C8= 0D                       116      DC.B $D  
000011C9= 0A                       117      DC.B $A
000011CA= 09                       118      DC.B $9
000011CB= 6D 65 6D 6F 72 79 ...    119      DC.B 'memory contents from <address1> to <address1+16bytes>.' 
00001201= 0D                       120      DC.B $D  
00001202= 0A                       121      DC.B $A
00001203= 0A                       122      DC.B $A
00001204= 53 4F 52 54 57           123      DC.B 'SORTW'
00001209= 0D                       124      DC.B $D  
0000120A= 0A                       125      DC.B $A
0000120B= 09                       126      DC.B $9 
0000120C= 54 68 65 20 53 4F ...    127      DC.B 'The SORT command sorts a block of memory. The starting address and the'
00001252= 0D                       128      DC.B $D  
00001253= 0A                       129      DC.B $A
00001254= 09                       130      DC.B $9
00001255= 65 6E 64 69 6E 67 ...    131      DC.B 'ending address <address2> of the memory block are specified in the command.'
000012A0= 0D                       132      DC.B $D  
000012A1= 0A                       133      DC.B $A
000012A2= 09                       134      DC.B $9
000012A3= 54 68 65 20 6F 72 ...    135      DC.B 'The order(A or D) specifies whether the list is sorted in Ascending'
000012E6= 0D                       136      DC.B $D  
000012E7= 0A                       137      DC.B $A
000012E8= 09                       138      DC.B $9
000012E9= 6F 72 20 44 65 73 ...    139      DC.B 'or Descending order.(The size of the data to be sorted is a word)'
0000132A                           140      
0000132A                           141      
0000132A= 0D                       142      DC.B $D  
0000132B= 0A                       143      DC.B $A
0000132C= 0A                       144      DC.B $A
0000132D= 4D 4D                    145      DC.B 'MM'
0000132F= 0D                       146      DC.B $D  
00001330= 0A                       147      DC.B $A
00001331= 09                       148      DC.B $9 
00001332= 4D 4D 28 4D 45 4D ...    149      DC.B 'MM(MEMORY MODIFY)is used to display memory and,   as required, modify'
00001375= 0D                       150      DC.B $D  
00001376= 0A                       151      DC.B $A
00001377= 09                       152      DC.B $9
00001378= 64 61 74 61 20 6F ...    153      DC.B 'data or enter new data. The size (byte, word, long word) controls the'
000013BD= 0D                       154      DC.B $D  
000013BE= 0A                       155      DC.B $A
000013BF= 09                       156      DC.B $9
000013C0= 6E 75 6D 62 65 72 ...    157      DC.B 'number of bytes displayed for each address.'    
000013EB                           158      
000013EB= 0D                       159      DC.B $D  
000013EC= 0A                       160      DC.B $A
000013ED= 0A                       161      DC.B $A
000013EE= 4D 53                    162      DC.B 'MS'
000013F0= 0D                       163      DC.B $D  
000013F1= 0A                       164      DC.B $A
000013F2= 09                       165      DC.B $9 
000013F3= 54 68 65 20 4D 53 ...    166      DC.B 'The MS (Memory Set) command alters memmory by setting data into the'
00001436= 0D                       167      DC.B $D  
00001437= 0A                       168      DC.B $A
00001438= 09                       169      DC.B $9
00001439= 61 64 64 72 65 73 ...    170      DC.B 'address specified. The data can take the form of ASCII string or'
00001479= 0D                       171      DC.B $D  
0000147A= 0A                       172      DC.B $A
0000147B= 09                       173      DC.B $9
0000147C= 68 65 78 61 64 65 ...    174      DC.B 'hexadecimal data.'
0000148D                           175  
0000148D= 0D                       176      DC.B $D  
0000148E= 0A                       177      DC.B $A
0000148F= 0A                       178      DC.B $A
00001490= 42 46                    179      DC.B 'BF'
00001492= 0D                       180      DC.B $D  
00001493= 0A                       181      DC.B $A
00001494= 09                       182      DC.B $9 
00001495= 54 68 65 20 42 6C ...    183      DC.B 'The Block Fill (BF) command fills memory starting with the word'
000014D4= 0D                       184      DC.B $D  
000014D5= 0A                       185      DC.B $A
000014D6= 09                       186      DC.B $9
000014D7= 62 6F 75 6E 64 61 ...    187      DC.B 'boundary <address1> through <address2>. Both <address1> and <address2> must'
00001522= 0D                       188      DC.B $D  
00001523= 0A                       189      DC.B $A
00001524= 09                       190      DC.B $9
00001525= 62 65 20 65 76 65 ...    191      DC.B 'be even   addresses. This command only fills with a word-size (2 bytes) data'
0000156F= 0D                       192      DC.B $D  
00001570= 0A                       193      DC.B $A
00001571= 09                       194      DC.B $9
00001572= 70 61 74 74 65 72 ...    195      DC.B 'pattern. If an entire word-size data pattern is not entered, the pattern is '
000015BE= 0D                       196      DC.B $D  
000015BF= 0A                       197      DC.B $A
000015C0= 09                       198      DC.B $9
000015C1= 72 69 67 68 74 20 ...    199      DC.B 'right justified and leading zeros are inserted.'
000015F0                           200  
000015F0= 0D                       201      DC.B $D  
000015F1= 0A                       202      DC.B $A
000015F2= 0A                       203      DC.B $A
000015F3= 42 4D 4F 56              204      DC.B 'BMOV'
000015F7= 0D                       205      DC.B $D  
000015F8= 0A                       206      DC.B $A
000015F9= 09                       207      DC.B $9 
000015FA= 54 68 65 20 42 6C ...    208      DC.B 'The Block Move (BMOV) command is used to move (duplicate) blocks of'
0000163D= 0D                       209      DC.B $D  
0000163E= 0A                       210      DC.B $A
0000163F= 09                       211      DC.B $9
00001640= 6D 65 6D 6F 72 79 ...    212      DC.B 'memory from one area to another.'
00001660                           213  
00001660= 0D                       214      DC.B $D  
00001661= 0A                       215      DC.B $A
00001662= 0A                       216      DC.B $A
00001663= 42 54 53 54              217      DC.B 'BTST'
00001667= 0D                       218      DC.B $D  
00001668= 0A                       219      DC.B $A
00001669= 09                       220      DC.B $9 
0000166A= 54 68 65 20 42 6C ...    221      DC.B 'The Block Test (BT) command is a destructive test of a block of'
000016A9= 0D                       222      DC.B $D  
000016AA= 0A                       223      DC.B $A
000016AB= 09                       224      DC.B $9
000016AC= 6D 65 6D 6F 72 79 ...    225      DC.B 'memory beginning at <address1> through <address2>. If this test'
000016EB= 0D                       226      DC.B $D  
000016EC= 0A                       227      DC.B $A
000016ED= 09                       228      DC.B $9
000016EE= 72 75 6E 73 20 74 ...    229      DC.B 'runs to completion without detecting errors, and display a message'
00001730= 0D                       230      DC.B $D  
00001731= 0A                       231      DC.B $A
00001732= 09                       232      DC.B $9
00001733= 74 68 61 74 20 6E ...    233      DC.B 'that no error was detected. If memory problems are found, a message is'    
00001779= 0D                       234      DC.B $D  
0000177A= 0A                       235      DC.B $A
0000177B= 09                       236      DC.B $9
0000177C= 64 69 73 70 6C 61 ...    237      DC.B 'displayed indicating  the address, the data stored, and the data read'
000017C0= 0D                       238      DC.B $D  
000017C1= 0A                       239      DC.B $A
000017C2= 09                       240      DC.B $9
000017C3= 6F 66 20 74 68 65 ...    241      DC.B 'of the failing memory.'
000017D9                           242  
000017D9                           243   
000017D9                           244   
000017D9= 0D                       245      DC.B $D  
000017DA= 0A                       246      DC.B $A
000017DB= 0A                       247      DC.B $A
000017DC= 42 53 43 48              248      DC.B 'BSCH'
000017E0= 0D                       249      DC.B $D  
000017E1= 0A                       250      DC.B $A
000017E2= 09                       251      DC.B $9 
000017E3= 54 68 65 20 42 53 ...    252      DC.B 'The BSCH (Block   Search) command is used to search a literal string in'
00001828= 0D                       253      DC.B $D  
00001829= 0A                       254      DC.B $A
0000182A= 09                       255      DC.B $9
0000182B= 61 20 6D 65 6D 6F ...    256      DC.B 'a memory block starting at <address1> through <address2> both inclusive.'
00001873= 0D                       257      DC.B $D  
00001874= 0A                       258      DC.B $A
00001875= 09                       259      DC.B $9
00001876= 49 6E 20 42 53 43 ...    260      DC.B 'In BSCH command, if search finds matching data, the data and address(es)'
000018BE= 0D                       261      DC.B $D  
000018BF= 0A                       262      DC.B $A
000018C0= 09                       263      DC.B $9
000018C1= 6D 75 73 74 20 62 ...    264      DC.B 'must be displayed.' 
000018D3                           265  
000018D3                           266  
000018D3= 0D                       267      DC.B $D  
000018D4= 0A                       268      DC.B $A
000018D5= 0A                       269      DC.B $A
000018D6= 47 4F                    270      DC.B 'GO'
000018D8= 0D                       271      DC.B $D  
000018D9= 0A                       272      DC.B $A
000018DA= 09                       273      DC.B $9 
000018DB= 54 68 65 20 47 4F ...    274      DC.B 'The GO command is used to start execution from a given address.'
0000191A                           275  
0000191A= 0D                       276      DC.B $D  
0000191B= 0A                       277      DC.B $A
0000191C= 0A                       278      DC.B $A
0000191D= 44 46                    279      DC.B 'DF'
0000191F= 0D                       280      DC.B $D  
00001920= 0A                       281      DC.B $A
00001921= 09                       282      DC.B $9 
00001922= 54 68 65 20 44 69 ...    283      DC.B 'The Display Formatted Registers(DF) command is used to display'
00001960= 0D                       284      DC.B $D  
00001961= 0A                       285      DC.B $A
00001962= 09                       286      DC.B $9
00001963= 74 68 65 20 4D 43 ...    287      DC.B 'the MC68000 processor registers. This command should display current'
000019A7= 0D                       288      DC.B $D  
000019A8= 0A                       289      DC.B $A
000019A9= 09                       290      DC.B $9
000019AA= 50 43 2C 20 53 52 ...    291      DC.B 'PC, SR,   US, SS and D, A registers.'
000019CC                           292      
000019CC= 0D                       293      DC.B $D  
000019CD= 0A                       294      DC.B $A
000019CE= 0A                       295      DC.B $A
000019CF= 45 58 49 54              296      DC.B 'EXIT'
000019D3= 0D                       297      DC.B $D  
000019D4= 0A                       298      DC.B $A
000019D5= 09                       299      DC.B $9 
000019D6= 54 68 65 20 45 58 ...    300      DC.B 'The EXIT command terminates/exits your MONITOR program'
00001A0C                           301  
00001A0C                           302   
00001A0C= 00                       303      DC.B 0
00001A0D                           304  
00001A0D                           305  
00001A0D                           306      
00002000                           307      ORG    $2000
00002000                           308      
00002000                           309  START:                  ; first instruction of program
00002000                           310  
00002000                           311  
00002000                           312  pSTART   
00002000  227C 00001000            313      MOVEA.L #PROMPT,A1 
00002006  103C 000E                314      MOVE.B #14,D0
0000200A  4E4F                     315      TRAP #15
0000200C  43F8 4000                316      LEA $4000,A1
00002010  103C 0002                317      MOVE.B #2,D0
00002014  4E4F                     318      TRAP #15
00002016                           319      
00002016                           320      
00002016                           321      *COMPARING INPUT TO THE MENU ITEMS*
00002016  207C 0000102D            322      MOVE.L #HELPPROMPT,A0
0000201C  4283                     323      CLR.L D3 ;COUNTER FOR REVERSING A1 TO USER INPUT
0000201E                           324  COMPAREHELP
0000201E  5283                     325      ADD.L #1,D3
00002020  B308                     326      CMPM.B (A0)+,(A1)+
00002022  6600 000E                327      BNE COMPAREMDSP
00002026  0C28 0000 FFFF           328      CMPI.B #00,-1(A0)   ;CHECK IF THE BYTE JUST COMPARED WAS NULL TERMINATOR
0000202C  66F0                     329      BNE COMPAREHELP
0000202E  6100 030C                330      BSR HELPFUNCTION 
00002032                           331  
00002032                           332  COMPAREMDSP
00002032  93C3                     333      SUB.L D3,A1
00002034  4283                     334      CLR.L D3
00002036  207C 00001032            335      MOVE.L #MDSPPROMPT,A0
0000203C                           336  COMPAREMDSP2
0000203C  5283                     337      ADD.L #1,D3
0000203E  B308                     338      CMPM.B (A0)+,(A1)+
00002040  6600 0032                339      BNE COMPARESORTW
00002044  0C28 0020 FFFF           340      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000204A  66F0                     341      BNE COMPAREMDSP2
0000204C                           342      ;CHECK FOR THE ARGUMENTS
0000204C  4284                     343      CLR.L D4 ;FIRST ARG
0000204E  4285                     344      CLR.L D5 ;SECOND ARG
00002050                           345  CMPMDSPL1
00002050  D819                     346      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002052  0C11 0000                347      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002056  6700 02F4                348      BEQ MDSPFUNCTION1 ;FUNCTION FOR 1 ARG
0000205A  0C11 0020                349      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000205E  6700 0006                350      BEQ CMPMDSPL2
00002062  E18C                     351      LSL.L #8,D4
00002064  61EA                     352      BSR CMPMDSPL1
00002066                           353  CMPMDSPL2
00002066  DA19                     354      ADD.B (A1)+,D5   ; MOVE THE SECOND MEMORY LOCATION NUMBER TO D5
00002068  0C11 0000                355      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000206C  6700 034E                356      BEQ MDSPFUNCTION2 ;FUNCTION FOR 2 ARG
00002070  E18D                     357      LSL.L #8,D5
00002072  61F2                     358      BSR CMPMDSPL2
00002074                           359      
00002074                           360     
00002074                           361  COMPARESORTW
00002074  93C3                     362      SUB.L D3,A1
00002076  4283                     363      CLR.L D3
00002078  207C 00001037            364      MOVE.L #SORTWPROMPT,A0
0000207E                           365  COMPARESORTW2
0000207E  5283                     366      ADD.L #1,D3
00002080  B308                     367      CMPM.B (A0)+,(A1)+
00002082  6600 000E                368      BNE COMPAREMM
00002086  0C28 0000 FFFF           369      CMPI.B #0,-1(A0)
0000208C  66F0                     370      BNE COMPARESORTW2
0000208E  6100 039E                371      BSR SORTWFUNCTION ;CHANGE THIS WHEN YOU IMPLEMENT THE FUNCTION
00002092                           372  
00002092                           373  COMPAREMM
00002092  93C3                     374      SUB.L D3,A1
00002094  4283                     375      CLR.L D3
00002096  207C 0000103D            376      MOVE.L #MMPROMPT,A0
0000209C                           377  COMPAREMM2
0000209C  5283                     378      ADD.L #1,D3
0000209E  B308                     379      CMPM.B (A0)+,(A1)+
000020A0  6600 0044                380      BNE COMPAREMS
000020A4  0C28 0020 FFFF           381      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000020AA  66F0                     382      BNE COMPAREMM2
000020AC                           383     ;CHECK FOR THE ARGUMENTS
000020AC  4284                     384      CLR.L D4 ;FIRST ARG
000020AE  4285                     385      CLR.L D5 ;SECOND ARG
000020B0                           386  CMPMML1
000020B0  D819                     387      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
000020B2  0C11 0000                388      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000020B6  6700 0274                389      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000020BA  0C11 0020                390      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000020BE  6700 0006                391      BEQ CMPMML2
000020C2  E18C                     392      LSL.L #8,D4
000020C4  61EA                     393      BSR CMPMML1
000020C6                           394  CMPMML2
000020C6  DA29 0001                395      ADD.B 1(A1),D5   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
000020CA  BA3C 0042                396      CMP.B #'B',D5  ;COMPARING LAST PART TO B,W OR L
000020CE  6700 036E                397      BEQ MMFUNCTION ;FUNCTION 
000020D2  BA3C 0057                398      CMP.B #'W',D5 
000020D6  6700 0366                399      BEQ MMFUNCTION ;FUNCTION
000020DA  BA3C 004C                400      CMP.B #'L',D5  
000020DE  6700 035E                401      BEQ MMFUNCTION ;FUNCTION
000020E2                           402      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
000020E2  6000 0248                403      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
000020E6                           404  
000020E6                           405  
000020E6                           406  COMPAREMS ;SEND 3 ARGUMENTS, D4 IS MEMLOC, D5 IS DATA, D6 IS ASCII OR HEX
000020E6  93C3                     407      SUB.L D3,A1
000020E8  4283                     408      CLR.L D3
000020EA  207C 00001040            409      MOVE.L #MSPROMPT,A0
000020F0                           410  COMPAREMS2
000020F0  5283                     411      ADD.L #1,D3
000020F2  B308                     412      CMPM.B (A0)+,(A1)+
000020F4  6600 0054                413      BNE COMPAREBF
000020F8  0C28 0020 FFFF           414      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000020FE  66F0                     415      BNE COMPAREMS2
00002100                           416     ;CHECK FOR THE ARGUMENTS
00002100  4284                     417      CLR.L D4 ;FIRST ARG
00002102  4285                     418      CLR.L D5 ;SECOND ARG
00002104  4286                     419      CLR.L D6 ;THIRD ARG
00002106                           420  CMPMSL1
00002106  D819                     421      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002108  0C11 0000                422      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000210C  6700 021E                423      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002110  0C11 0020                424      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002114  6700 0006                425      BEQ CMPMSL2
00002118  E18C                     426      LSL.L #8,D4
0000211A  60EA                     427      BRA CMPMSL1
0000211C                           428  CMPMSL2
0000211C  DA19                     429      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
0000211E  0C11 0000                430      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002122  6700 0208                431      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002126  0C11 0020                432      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000212A  6700 0006                433      BEQ CMPMSL3
0000212E  E18D                     434      LSL.L #8,D5
00002130  60EA                     435      BRA CMPMSL2
00002132                           436  CMPMSL3
00002132  DC29 0001                437      ADD.B 1(A1),D6   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
00002136  BC3C 0048                438      CMP.B #'H',D6  ;COMPARING LAST PART TO B,W OR L
0000213A  6700 0500                439      BEQ MSFUNCTION ;FUNCTION 
0000213E  BC3C 0041                440      CMP.B #'A',D6 
00002142  6700 04F8                441      BEQ MSFUNCTION ;FUNCTION
00002146                           442      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
00002146  6000 01E4                443      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
0000214A                           444  
0000214A                           445  
0000214A                           446  COMPAREBF ;D4 IS BEGGINING ADDRESS, D5 IS END ADDRESS, D6 IS THE WORD DATA TO BE STORED
0000214A  93C3                     447      SUB.L D3,A1
0000214C  4283                     448      CLR.L D3
0000214E  207C 00001043            449      MOVE.L #BFPROMPT,A0
00002154                           450  COMPAREBF2
00002154  5283                     451      ADD.L #1,D3
00002156  B308                     452      CMPM.B (A0)+,(A1)+
00002158  6600 0052                453      BNE COMPAREBMOV
0000215C  0C28 0020 FFFF           454      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002162  66F0                     455      BNE COMPAREBF2
00002164                           456     ;CHECK FOR THE ARGUMENTS
00002164  4284                     457      CLR.L D4 ;FIRST ARG
00002166  4285                     458      CLR.L D5 ;SECOND ARG
00002168  4286                     459      CLR.L D6 ;THIRD ARG
0000216A                           460  CMPBFL1
0000216A  D819                     461      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
0000216C  0C11 0000                462      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002170  6700 01BA                463      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002174  0C11 0020                464      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002178  6700 0006                465      BEQ CMPBFL2
0000217C  E18C                     466      LSL.L #8,D4
0000217E  60EA                     467      BRA CMPBFL1
00002180                           468  CMPBFL2
00002180  DA19                     469      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002182  0C11 0000                470      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002186  6700 01A4                471      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000218A  0C11 0020                472      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000218E  6700 0006                473      BEQ CMPBFL3
00002192  E18D                     474      LSL.L #8,D5
00002194  60EA                     475      BRA CMPBFL2
00002196                           476  CMPBFL3
00002196  DC19                     477      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002198  0C11 0000                478      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000219C  6700 04C6                479      BEQ BFFUNCTION ;FAILS IF NO MEM IS GIVEN
000021A0  0C11 0020                480      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021A4  6700 0186                481      BEQ FAIL
000021A8  E18E                     482      LSL.L #8,D6
000021AA  60EA                     483      BRA CMPBFL3
000021AC                           484  
000021AC                           485  COMPAREBMOV ;D4 IS THE START OF MOV, D5 IS THE END OF MOV, D6 IS THE DESTINATION OF THE MOVE
000021AC  93C3                     486      SUB.L D3,A1
000021AE  4283                     487      CLR.L D3
000021B0  207C 00001046            488      MOVE.L #BMOVPROMPT,A0
000021B6                           489  COMPAREBMOV2
000021B6  5283                     490      ADD.L #1,D3
000021B8  B308                     491      CMPM.B (A0)+,(A1)+
000021BA  6600 0052                492      BNE COMPAREBTST
000021BE  0C28 0020 FFFF           493      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000021C4  66F0                     494      BNE COMPAREBMOV2
000021C6                           495     ;CHECK FOR THE ARGUMENTS
000021C6  4284                     496      CLR.L D4 ;FIRST ARG
000021C8  4285                     497      CLR.L D5 ;SECOND ARG
000021CA  4286                     498      CLR.L D6 ;THIRD ARG
000021CC                           499  CMPBMOVL1
000021CC  D819                     500      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
000021CE  0C11 0000                501      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021D2  6700 0158                502      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000021D6  0C11 0020                503      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021DA  6700 0006                504      BEQ CMPBMOVL2
000021DE  E18C                     505      LSL.L #8,D4
000021E0  60EA                     506      BRA CMPBMOVL1
000021E2                           507  CMPBMOVL2
000021E2  DA19                     508      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000021E4  0C11 0000                509      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021E8  6700 0142                510      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000021EC  0C11 0020                511      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021F0  6700 0006                512      BEQ CMPBMOVL3
000021F4  E18D                     513      LSL.L #8,D5
000021F6  60EA                     514      BRA CMPBMOVL2
000021F8                           515  CMPBMOVL3
000021F8  DC19                     516      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000021FA  0C11 0000                517      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021FE  6700 0486                518      BEQ BMOVFUNCTION
00002202                           519   ;FAILS IF NO MEM IS GIVEN
00002202  0C11 0020                520      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002206  6700 0124                521      BEQ FAIL
0000220A  E18E                     522      LSL.L #8,D6
0000220C  60EA                     523      BRA CMPBMOVL3
0000220E                           524      
0000220E                           525      
0000220E                           526  COMPAREBTST  ;D4 IS START D5 IS END
0000220E  93C3                     527      SUB.L D3,A1
00002210  4283                     528      CLR.L D3
00002212  207C 0000104B            529      MOVE.L #BTSTPROMPT,A0
00002218                           530  COMPAREBTST2
00002218  5283                     531      ADD.L #1,D3
0000221A  B308                     532      CMPM.B (A0)+,(A1)+
0000221C  6600 003A                533      BNE COMPAREBSCH
00002220  0C28 0020 FFFF           534      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002226  66F0                     535      BNE COMPAREBTST2
00002228                           536     ;CHECK FOR THE ARGUMENTS
00002228  4284                     537      CLR.L D4 ;FIRST ARG
0000222A  4285                     538      CLR.L D5 ;SECOND ARG
0000222C                           539  
0000222C                           540  CMPBTSTL1
0000222C  D819                     541      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
0000222E  0C11 0000                542      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002232  6700 00F8                543      BEQ FAIL        ;FAILS IF NO MEM IS GIVEN
00002236  0C11 0020                544      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000223A  6700 0006                545      BEQ CMPBTSTL2
0000223E  E18C                     546      LSL.L #8,D4
00002240  60EA                     547      BRA CMPBTSTL1
00002242                           548  CMPBTSTL2
00002242  DA19                     549      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002244  0C11 0000                550      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
00002248  6700 045E                551      BEQ BTSTFUNCTION         ;FAILS IF NO MEM IS GIVEN
0000224C  0C11 0020                552      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
00002250  6700 00DA                553      BEQ FAIL
00002254  E18D                     554      LSL.L #8,D5
00002256  60EA                     555      BRA CMPBTSTL2
00002258                           556  
00002258                           557  COMPAREBSCH  ;D4 GIVES START ADDRESS, D5 GIVES END ADDRESS, D6 GIVES THE WORD BEING SEARCHED
00002258  93C3                     558      SUB.L D3,A1
0000225A  4283                     559      CLR.L D3
0000225C  207C 00001050            560      MOVE.L #BSCHPROMPT,A0
00002262                           561  COMPAREBSCH2
00002262  5283                     562      ADD.L #1,D3
00002264  B308                     563      CMPM.B (A0)+,(A1)+
00002266  6600 0052                564      BNE COMPAREGO
0000226A  0C28 0020 FFFF           565      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002270  66F0                     566      BNE COMPAREBSCH2
00002272                           567     ;CHECK FOR THE ARGUMENTS
00002272  4284                     568      CLR.L D4 ;FIRST ARG
00002274  4285                     569      CLR.L D5 ;SECOND ARG
00002276  4286                     570      CLR.L D6 ;THIRD ARG
00002278                           571  CMPBSCHL1
00002278  D819                     572      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
0000227A  0C11 0000                573      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000227E  6700 00AC                574      BEQ FAIL        ;FAILS IF NO MEM IS GIVEN
00002282  0C11 0020                575      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002286  6700 0006                576      BEQ CMPBSCHL2
0000228A  E18C                     577      LSL.L #8,D4
0000228C  60EA                     578      BRA CMPBSCHL1
0000228E                           579  CMPBSCHL2
0000228E  DA19                     580      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002290  0C11 0000                581      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
00002294  6700 0096                582      BEQ FAIL         ;FAILS IF NO MEM IS GIVEN
00002298  0C11 0020                583      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
0000229C  6700 0006                584      BEQ CMPBSCHL3
000022A0  E18D                     585      LSL.L #8,D5
000022A2  60EA                     586      BRA CMPBSCHL2
000022A4                           587  CMPBSCHL3
000022A4  DC19                     588      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000022A6  0C11 0000                589      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
000022AA  6700 0508                590      BEQ BSCHFUNCTION
000022AE                           591                       ;FAILS IF NO MEM IS GIVEN
000022AE  0C11 0020                592      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
000022B2  6700 0078                593      BEQ FAIL
000022B6  E18E                     594      LSL.L #8,D6
000022B8  60EA                     595      BRA CMPBSCHL3
000022BA                           596  
000022BA                           597  COMPAREGO ;D4 IS THE ARGUMENT TO GET TO THE MEMLOC
000022BA  93C3                     598      SUB.L D3,A1
000022BC  4283                     599      CLR.L D3
000022BE  207C 00001055            600      MOVE.L #GOPROMPT,A0
000022C4                           601  COMPAREGO2
000022C4  5283                     602      ADD.L #1,D3
000022C6  B308                     603      CMPM.B (A0)+,(A1)+
000022C8  6600 0026                604      BNE COMPAREDF
000022CC  0C28 0020 FFFF           605      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000022D2  66F0                     606      BNE COMPAREGO2
000022D4                           607     ;CHECK FOR THE ARGUMENTS
000022D4  4284                     608      CLR.L D4 ;FIRST ARG
000022D6  4285                     609      CLR.L D5 ;SECOND ARG
000022D8  4286                     610      CLR.L D6 ;THIRD ARG
000022DA                           611  CMPGOL1
000022DA  D819                     612      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
000022DC  0C11 0000                613      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000022E0  6700 059A                614      BEQ GOFUNCTION  ;FAILS IF NO MEM IS GIVEN
000022E4  0C11 0020                615      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000022E8  6700 0042                616      BEQ FAIL
000022EC  E18C                     617      LSL.L #8,D4
000022EE  60EA                     618      BRA CMPGOL1
000022F0                           619  
000022F0                           620  COMPAREDF
000022F0  93C3                     621      SUB.L D3,A1
000022F2  4283                     622      CLR.L D3
000022F4  207C 00001058            623      MOVE.L #DFPROMPT,A0
000022FA                           624  COMPAREDF2
000022FA  5283                     625      ADD.L #1,D3
000022FC  B308                     626      CMPM.B (A0)+,(A1)+
000022FE  6600 000E                627      BNE COMPAREEXIT
00002302  0C28 0000 FFFF           628      CMPI.B #0,-1(A0)
00002308  66F0                     629      BNE COMPAREDF2
0000230A  6100 0580                630      BSR DFFUNCTION ;CHANGE THIS WHEN YOU IMPLEMENT THE FUNCTION
0000230E                           631  
0000230E                           632      
0000230E                           633  COMPAREEXIT
0000230E  93C3                     634      SUB.L D3,A1
00002310  4283                     635      CLR.L D3
00002312  207C 0000105B            636      MOVE.L #EXITPROMPT,A0
00002318                           637  COMPAREEXIT2
00002318  5283                     638      ADD.L #1,D3
0000231A  B308                     639      CMPM.B (A0)+,(A1)+
0000231C  6600 000E                640      BNE FAIL
00002320  0C28 0000 FFFF           641      CMPI.B #0,-1(A0)
00002326  66F0                     642      BNE COMPAREEXIT2
00002328  6100 0572                643      BSR EXITFUNCTION 
0000232C                           644      
0000232C                           645      
0000232C                           646      
0000232C                           647  *WHEN INPUT DOESNT FIT THE CRITERIA*    
0000232C                           648  FAIL
0000232C  227C 0000100D            649      MOVEA.L #NOPROMPT,A1     
00002332  103C 000D                650      MOVE.B #13,D0
00002336  4E4F                     651      TRAP #15
00002338  6000 FCC6                652      BRA pSTART
0000233C                           653        
0000233C                           654  HELPFUNCTION
0000233C  227C 000010DC            655      MOVEA.L #HELP,A1     
00002342  103C 000D                656      MOVE.B #13,D0
00002346  4E4F                     657      TRAP #15
00002348  6000 FCB6                658      BRA pSTART
0000234C                           659      
0000234C                           660  MDSPFUNCTION1 ;argument passed as D4, PRINT FROM D4 TO D5
0000234C                           661      ;MOVE.L #$2000,D4
0000234C  6100 0626                662      BSR ASCIITOHEX
00002350                           663      ;DISPLAY EVERYTHIGN FROM D4 FOR NOW 2000 TO 2016\
00002350  2644                     664      MOVE.L D4,A3
00002352  D7FC 00000010            665      ADD.L #$10,A3 ;ENDING 
00002358  2444                     666      MOVE.L D4,A2 ;BEGGINING
0000235A                           667  MDSPFUNCTION1L1 
0000235A                           668      ;PRINT MEMLOC
0000235A  220A                     669      MOVE.L A2,D1
0000235C  6100 0544                670      BSR HEXTOASCII 
00002360                           671       
00002360  4841                     672      SWAP D1
00002362                           673      
00002362  E159                     674      ROL #8,D1
00002364  103C 0006                675      MOVE.B #6,D0
00002368  4E4F                     676      TRAP #15
0000236A                           677      
0000236A  E159                     678      ROL #8,D1
0000236C  103C 0006                679      MOVE.B #6,D0
00002370  4E4F                     680      TRAP #15
00002372                           681      
00002372  4841                     682      SWAP D1
00002374  E159                     683      ROL #8,D1
00002376  103C 0006                684      MOVE.B #6,D0
0000237A  4E4F                     685      TRAP #15
0000237C                           686      
0000237C  E159                     687      ROL #8,D1
0000237E  103C 0006                688      MOVE.B #6,D0
00002382  4E4F                     689      TRAP #15
00002384                           690  
00002384                           691      
00002384                           692      ;PRINT SEMICOLON
00002384  227C 00001060            693      MOVEA.L #SEMICOLONSEP,A1     
0000238A  103C 000E                694      MOVE.B #14,D0
0000238E  4E4F                     695      TRAP #15
00002390                           696      
00002390                           697      ;PRINT CONTENT
00002390  4281                     698      CLR.L D1
00002392  121A                     699      MOVE.B (A2)+,D1
00002394  6100 050C                700      BSR HEXTOASCII 
00002398                           701       
00002398                           702      
00002398  E059                     703      ROR #8,D1
0000239A  103C 0006                704      MOVE.B #6,D0
0000239E  4E4F                     705      TRAP #15
000023A0                           706      
000023A0  E059                     707      ROR #8,D1
000023A2  103C 0006                708      MOVE.B #6,D0
000023A6  4E4F                     709      TRAP #15
000023A8                           710      
000023A8                           711      ;PRINT empty space
000023A8  227C 00001064            712      MOVEA.L #SPACE,A1     
000023AE  103C 000D                713      MOVE.B #13,D0
000023B2  4E4F                     714      TRAP #15
000023B4                           715      
000023B4                           716      
000023B4  B7CA                     717      CMPA.L A2,A3
000023B6  6EA2                     718      BGT MDSPFUNCTION1L1
000023B8                           719      
000023B8                           720  
000023B8                           721      
000023B8  6000 FC46                722      BRA pSTART
000023BC                           723  
000023BC                           724  MDSPFUNCTION2 ;argument passed as D4, PRINT FROM D4 TO D5
000023BC  6100 05B6                725      BSR ASCIITOHEX
000023C0                           726      ;DISPLAY EVERYTHIGN FROM D4 TO D5\
000023C0  2444                     727      MOVE.L D4,A2 ;BEGGINING
000023C2  2805                     728      MOVE.L D5,D4
000023C4  6100 05AE                729      BSR ASCIITOHEX
000023C8  2644                     730      MOVE.L D4,A3 ;ENDING
000023CA  528B                     731      ADD.L #1,A3
000023CC                           732  MDSPFUNCTION2L1 
000023CC                           733    ;PRINT MEMLOC
000023CC  220A                     734      MOVE.L A2,D1
000023CE  6100 04D2                735      BSR HEXTOASCII 
000023D2                           736       
000023D2  4841                     737      SWAP D1
000023D4                           738      
000023D4  E159                     739      ROL #8,D1
000023D6  103C 0006                740      MOVE.B #6,D0
000023DA  4E4F                     741      TRAP #15
000023DC                           742      
000023DC  E159                     743      ROL #8,D1
000023DE  103C 0006                744      MOVE.B #6,D0
000023E2  4E4F                     745      TRAP #15
000023E4                           746      
000023E4  4841                     747      SWAP D1
000023E6  E159                     748      ROL #8,D1
000023E8  103C 0006                749      MOVE.B #6,D0
000023EC  4E4F                     750      TRAP #15
000023EE                           751      
000023EE  E159                     752      ROL #8,D1
000023F0  103C 0006                753      MOVE.B #6,D0
000023F4  4E4F                     754      TRAP #15
000023F6                           755  
000023F6                           756      
000023F6                           757      ;PRINT SEMICOLON
000023F6  227C 00001060            758      MOVEA.L #SEMICOLONSEP,A1     
000023FC  103C 000E                759      MOVE.B #14,D0
00002400  4E4F                     760      TRAP #15
00002402                           761      
00002402                           762      ;PRINT CONTENT
00002402  4281                     763      CLR.L D1
00002404  121A                     764      MOVE.B (A2)+,D1
00002406  6100 049A                765      BSR HEXTOASCII 
0000240A                           766       
0000240A                           767      
0000240A  E059                     768      ROR #8,D1
0000240C  103C 0006                769      MOVE.B #6,D0
00002410  4E4F                     770      TRAP #15
00002412                           771      
00002412  E059                     772      ROR #8,D1
00002414  103C 0006                773      MOVE.B #6,D0
00002418  4E4F                     774      TRAP #15
0000241A                           775      
0000241A                           776      ;PRINT empty space
0000241A  227C 00001064            777      MOVEA.L #SPACE,A1     
00002420  103C 000D                778      MOVE.B #13,D0
00002424  4E4F                     779      TRAP #15
00002426                           780      
00002426                           781      
00002426  B7CA                     782      CMPA.L A2,A3
00002428  6EA2                     783      BGT MDSPFUNCTION2L1
0000242A                           784      
0000242A                           785  
0000242A                           786      
0000242A  6000 FBD4                787      BRA pSTART
0000242E                           788  
0000242E                           789  
0000242E                           790  
0000242E                           791  SORTWFUNCTION ;argument passed as D4 AS MEMLOC AND d5 AS THE MODE
0000242E  227C 00001037            792      MOVEA.L #SORTWPROMPT,A1     
00002434  103C 000D                793      MOVE.B #13,D0
00002438  4E4F                     794      TRAP #15
0000243A  6000 FBC4                795      BRA pSTART
0000243E                           796  
0000243E                           797  ;CURRENTLY ONLY FOR W, WORK ON B AND L 
0000243E                           798  MMFUNCTION ;argument passed as D4 AS MEMLOC AND d5 AS THE MODE
0000243E  6100 0534                799      BSR ASCIITOHEX
00002442                           800      ;DISPLAY EVERYTHIGN FROM D4 TO D5\
00002442  2444                     801      MOVE.L D4,A2 ;BEGGINING
00002444                           802      ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
00002444  BA3C 0042                803      CMP.B #'B',D5 
00002448  6700 0012                804      BEQ MMFUNCTIONL1 ;FUNCTION 
0000244C  BA3C 0057                805      CMP.B #'W',D5 
00002450  6700 0088                806      BEQ MMFUNCTIONL2 ;FUNCTION
00002454  BA3C 004C                807      CMP.B #'L',D5  
00002458  6700 0116                808      BEQ MMFUNCTIONL3 ;FUNCTION
0000245C                           809  MMFUNCTIONL1 
0000245C                           810    ;PRINT MEMLOC
0000245C  220A                     811      MOVE.L A2,D1
0000245E  6100 0442                812      BSR HEXTOASCII 
00002462                           813       
00002462  4841                     814      SWAP D1
00002464                           815      
00002464  E159                     816      ROL #8,D1
00002466  103C 0006                817      MOVE.B #6,D0
0000246A  4E4F                     818      TRAP #15
0000246C  E159                     819      ROL #8,D1
0000246E  103C 0006                820      MOVE.B #6,D0
00002472  4E4F                     821      TRAP #15
00002474                           822      
00002474  4841                     823      SWAP D1
00002476  E159                     824      ROL #8,D1
00002478  103C 0006                825      MOVE.B #6,D0
0000247C  4E4F                     826      TRAP #15
0000247E                           827      
0000247E  E159                     828      ROL #8,D1
00002480  103C 0006                829      MOVE.B #6,D0
00002484  4E4F                     830      TRAP #15
00002486                           831  
00002486                           832      
00002486                           833      ;PRINT SEMICOLON
00002486  227C 00001060            834      MOVEA.L #SEMICOLONSEP,A1     
0000248C  103C 000E                835      MOVE.B #14,D0
00002490  4E4F                     836      TRAP #15
00002492                           837      
00002492                           838      ;PRINT CONTENT
00002492  4281                     839      CLR.L D1
00002494  121A                     840      MOVE.B (A2)+,D1
00002496  6100 040A                841      BSR HEXTOASCII 
0000249A                           842       
0000249A                           843      
0000249A  E059                     844      ROR #8,D1
0000249C  103C 0006                845      MOVE.B #6,D0
000024A0  4E4F                     846      TRAP #15
000024A2                           847      
000024A2  E059                     848      ROR #8,D1
000024A4  103C 0006                849      MOVE.B #6,D0
000024A8  4E4F                     850      TRAP #15
000024AA                           851      
000024AA                           852      ;PRINT LINEPROMPT,
000024AA  227C 00001066            853      MOVEA.L #LINEPROMPT,A1     
000024B0  103C 000E                854      MOVE.B #14,D0
000024B4  4E4F                     855      TRAP #15
000024B6                           856      
000024B6                           857      
000024B6                           858      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
000024B6  43F8 5000                859      LEA $5000,A1
000024BA  103C 0002                860      MOVE.B #2,D0
000024BE  4E4F                     861      TRAP #15
000024C0                           862      
000024C0                           863      
000024C0                           864      *COMPARING INPUT TO THE MENU ITEMS*
000024C0                           865      ;COMPARING TO DOT
000024C0  0C11 002E                866      CMP.B #$2E,(A1) ;2E IS THE DOT
000024C4  6700 FB3A                867      BEQ pSTART ;if input is dot exit
000024C8                           868      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
000024C8  0C11 0000                869      CMP.B #00,(A1)
000024CC  678E                     870      BEQ MMFUNCTIONL1
000024CE                           871      
000024CE                           872      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
000024CE  3811                     873      MOVE.W (A1),D4
000024D0  6100 04A2                874      BSR ASCIITOHEX
000024D4  1544 FFFF                875      MOVE.B D4,-1(A2)
000024D8  6082                     876      BRA MMFUNCTIONL1
000024DA                           877  
000024DA                           878  MMFUNCTIONL2 ;FOR WORD OPERATION MM
000024DA                           879      ;PRINT MEMLOC
000024DA  220A                     880      MOVE.L A2,D1
000024DC  6100 03C4                881      BSR HEXTOASCII 
000024E0                           882       
000024E0  4841                     883      SWAP D1
000024E2                           884      
000024E2  E159                     885      ROL #8,D1
000024E4  103C 0006                886      MOVE.B #6,D0
000024E8  4E4F                     887      TRAP #15
000024EA  E159                     888      ROL #8,D1
000024EC  103C 0006                889      MOVE.B #6,D0
000024F0  4E4F                     890      TRAP #15
000024F2                           891      
000024F2  4841                     892      SWAP D1
000024F4  E159                     893      ROL #8,D1
000024F6  103C 0006                894      MOVE.B #6,D0
000024FA  4E4F                     895      TRAP #15
000024FC                           896      
000024FC  E159                     897      ROL #8,D1
000024FE  103C 0006                898      MOVE.B #6,D0
00002502  4E4F                     899      TRAP #15
00002504                           900  
00002504                           901      
00002504                           902      ;PRINT SEMICOLON
00002504  227C 00001060            903      MOVEA.L #SEMICOLONSEP,A1     
0000250A  103C 000E                904      MOVE.B #14,D0
0000250E  4E4F                     905      TRAP #15
00002510                           906      
00002510                           907      ;PRINT CONTENT
00002510  4281                     908      CLR.L D1
00002512  321A                     909      MOVE.W (A2)+,D1
00002514  6100 038C                910      BSR HEXTOASCII 
00002518                           911       
00002518                           912      
00002518  4841                     913      SWAP D1
0000251A                           914      
0000251A  E159                     915      ROL #8,D1
0000251C  103C 0006                916      MOVE.B #6,D0
00002520  4E4F                     917      TRAP #15
00002522  E159                     918      ROL #8,D1
00002524  103C 0006                919      MOVE.B #6,D0
00002528  4E4F                     920      TRAP #15
0000252A                           921      
0000252A  4841                     922      SWAP D1
0000252C  E159                     923      ROL #8,D1
0000252E  103C 0006                924      MOVE.B #6,D0
00002532  4E4F                     925      TRAP #15
00002534                           926      
00002534  E159                     927      ROL #8,D1
00002536  103C 0006                928      MOVE.B #6,D0
0000253A  4E4F                     929      TRAP #15
0000253C                           930      
0000253C                           931      ;PRINT LINEPROMPT,
0000253C  227C 00001066            932      MOVEA.L #LINEPROMPT,A1     
00002542  103C 000E                933      MOVE.B #14,D0
00002546  4E4F                     934      TRAP #15
00002548                           935      
00002548                           936      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
00002548  43F8 5000                937      LEA $5000,A1
0000254C  103C 0002                938      MOVE.B #2,D0
00002550  4E4F                     939      TRAP #15
00002552                           940      
00002552                           941      *COMPARING INPUT TO THE MENU ITEMS*
00002552                           942      ;COMPARING TO DOT
00002552  0C11 002E                943      CMP.B #$2E,(A1) ;2E IS THE DOT
00002556  6700 FAA8                944      BEQ pSTART ;if input is dot exit
0000255A                           945      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
0000255A  0C11 0000                946      CMP.B #00,(A1)
0000255E  6700 FF7A                947      BEQ MMFUNCTIONL2
00002562                           948      
00002562                           949      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
00002562  2811                     950      MOVE.L (A1),D4
00002564  6100 040E                951      BSR ASCIITOHEX
00002568  3544 FFFE                952      MOVE.W D4,-2(A2)
0000256C  6000 FF6C                953      BRA MMFUNCTIONL2
00002570                           954  
00002570                           955  
00002570                           956  
00002570                           957  MMFUNCTIONL3 ;FOR LONG WORD MM OPERATION
00002570                           958      ;PRINT MEMLOC
00002570  220A                     959      MOVE.L A2,D1
00002572  6100 032E                960      BSR HEXTOASCII 
00002576                           961       
00002576  4841                     962      SWAP D1
00002578                           963      
00002578  E159                     964      ROL #8,D1
0000257A  103C 0006                965      MOVE.B #6,D0
0000257E  4E4F                     966      TRAP #15
00002580  E159                     967      ROL #8,D1
00002582  103C 0006                968      MOVE.B #6,D0
00002586  4E4F                     969      TRAP #15
00002588                           970      
00002588  4841                     971      SWAP D1
0000258A  E159                     972      ROL #8,D1
0000258C  103C 0006                973      MOVE.B #6,D0
00002590  4E4F                     974      TRAP #15
00002592                           975      
00002592  E159                     976      ROL #8,D1
00002594  103C 0006                977      MOVE.B #6,D0
00002598  4E4F                     978      TRAP #15
0000259A                           979  
0000259A                           980      
0000259A                           981      ;PRINT SEMICOLON
0000259A  227C 00001060            982      MOVEA.L #SEMICOLONSEP,A1     
000025A0  103C 000E                983      MOVE.B #14,D0
000025A4  4E4F                     984      TRAP #15
000025A6                           985      
000025A6                           986      ;PRINT CONTENT
000025A6  4281                     987      CLR.L D1
000025A8  321A                     988      MOVE.W (A2)+,D1
000025AA  6100 02F6                989      BSR HEXTOASCII 
000025AE                           990       
000025AE                           991      
000025AE  4841                     992      SWAP D1
000025B0                           993      
000025B0  E159                     994      ROL #8,D1
000025B2  103C 0006                995      MOVE.B #6,D0
000025B6  4E4F                     996      TRAP #15
000025B8  E159                     997      ROL #8,D1
000025BA  103C 0006                998      MOVE.B #6,D0
000025BE  4E4F                     999      TRAP #15
000025C0                          1000      
000025C0  4841                    1001      SWAP D1
000025C2  E159                    1002      ROL #8,D1
000025C4  103C 0006               1003      MOVE.B #6,D0
000025C8  4E4F                    1004      TRAP #15
000025CA                          1005      
000025CA  E159                    1006      ROL #8,D1
000025CC  103C 0006               1007      MOVE.B #6,D0
000025D0  4E4F                    1008      TRAP #15
000025D2                          1009      
000025D2                          1010      ;PRINT SECOND WORD
000025D2                          1011      ;PRINT CONTENT
000025D2  4281                    1012      CLR.L D1
000025D4  321A                    1013      MOVE.W (A2)+,D1
000025D6  6100 02CA               1014      BSR HEXTOASCII 
000025DA                          1015       
000025DA                          1016      
000025DA  4841                    1017      SWAP D1
000025DC                          1018      
000025DC  E159                    1019      ROL #8,D1
000025DE  103C 0006               1020      MOVE.B #6,D0
000025E2  4E4F                    1021      TRAP #15
000025E4  E159                    1022      ROL #8,D1
000025E6  103C 0006               1023      MOVE.B #6,D0
000025EA  4E4F                    1024      TRAP #15
000025EC                          1025      
000025EC  4841                    1026      SWAP D1
000025EE  E159                    1027      ROL #8,D1
000025F0  103C 0006               1028      MOVE.B #6,D0
000025F4  4E4F                    1029      TRAP #15
000025F6                          1030      
000025F6  E159                    1031      ROL #8,D1
000025F8  103C 0006               1032      MOVE.B #6,D0
000025FC  4E4F                    1033      TRAP #15
000025FE                          1034  
000025FE                          1035      
000025FE                          1036      
000025FE                          1037      ;PRINT LINEPROMPT,
000025FE  227C 00001066           1038      MOVEA.L #LINEPROMPT,A1     
00002604  103C 000E               1039      MOVE.B #14,D0
00002608  4E4F                    1040      TRAP #15
0000260A                          1041      
0000260A                          1042      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
0000260A  43F8 5000               1043      LEA $5000,A1
0000260E  103C 0002               1044      MOVE.B #2,D0
00002612  4E4F                    1045      TRAP #15
00002614                          1046      
00002614                          1047      *COMPARING INPUT TO THE MENU ITEMS*
00002614                          1048      ;COMPARING TO DOT
00002614  0C11 002E               1049      CMP.B #$2E,(A1) ;2E IS THE DOT
00002618  6700 F9E6               1050      BEQ pSTART ;if input is dot exit
0000261C                          1051      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
0000261C  0C11 0000               1052      CMP.B #00,(A1)
00002620  6700 FF4E               1053      BEQ MMFUNCTIONL3
00002624                          1054      
00002624                          1055      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
00002624  2819                    1056      MOVE.L (A1)+,D4
00002626  6100 034C               1057      BSR ASCIITOHEX
0000262A  3544 FFFC               1058      MOVE.W D4,-4(A2)
0000262E                          1059      ;PRINT SECOND WORD
0000262E  2811                    1060      MOVE.L (A1),D4
00002630  6100 0342               1061      BSR ASCIITOHEX
00002634  3544 FFFE               1062      MOVE.W D4,-2(A2)
00002638                          1063      
00002638  6000 FF36               1064      BRA MMFUNCTIONL3
0000263C                          1065  
0000263C                          1066  
0000263C                          1067  
0000263C                          1068      
0000263C                          1069  
0000263C                          1070  MSFUNCTION   ;D4 IS ADDRESS, D5 IS DATA, D6 IS ASCII OR HEX, WORD OPERATIONS ONLY
0000263C  6100 0336               1071      BSR ASCIITOHEX
00002640  2444                    1072      MOVE.L D4,A2 ;MEMLOC FOR DATA TO BE STORED
00002642                          1073      ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
00002642  BC3C 0048               1074      CMP.B #'H',D6 
00002646  6700 000A               1075      BEQ MSFUNCTIONL1 ;FUNCTION FOR WHEN THE NUM GIVEN IS HEX
0000264A  BC3C 0041               1076      CMP.B #'A',D6
0000264E  6700 000E               1077      BEQ MSFUNCTIONL2 ;FUNCTION FOR WHE THE NUM GIVEN IS ASCII
00002652                          1078      
00002652                          1079  MSFUNCTIONL1
00002652  2805                    1080      MOVE.L D5,D4 
00002654  6100 031E               1081      BSR ASCIITOHEX
00002658  3484                    1082      MOVE.W D4,(A2)
0000265A  6000 F9A4               1083      BRA pSTART
0000265E                          1084  MSFUNCTIONL2
0000265E  2485                    1085      MOVE.L D5,(A2)
00002660  6000 F99E               1086      BRA pSTART
00002664                          1087      
00002664                          1088      
00002664                          1089  BFFUNCTION ;D4 IS THE START, D5 IS THE END, D6 IS THE NUMBER TO BE WRITTEN
00002664                          1090        ;FILL EVERYTHIGN FROM D4 TO D5 WITH D6    
00002664  6100 030E               1091      BSR ASCIITOHEX
00002668  2444                    1092      MOVE.L D4,A2 ;BEGGINING
0000266A  2805                    1093      MOVE.L D5,D4
0000266C  6100 0306               1094      BSR ASCIITOHEX
00002670  2644                    1095      MOVE.L D4,A3 ;ENDING
00002672  528B                    1096      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
00002674  2806                    1097      MOVE.L D6,D4
00002676  6100 02FC               1098      BSR ASCIITOHEX
0000267A  2C04                    1099      MOVE.L D4,D6 ;THE VALUE TO BE ENTERED IN THE MEMORY BLOCK
0000267C                          1100  BFFUNCTIONL1 
0000267C                          1101      ;MOVE THE WORD INTO THE ADDRESS
0000267C  34C6                    1102      MOVE.W D6,(A2)+
0000267E  B7CA                    1103      CMPA.L A2,A3
00002680  6EFA                    1104      BGT BFFUNCTIONL1
00002682                          1105    ;WHEN DONE  
00002682  6000 F97C               1106      BRA pSTART
00002686                          1107  
00002686                          1108  BMOVFUNCTION ;D4 IS THE START,D5 IS THE END, D6 IS THE LOCATION WE ARE WRITING TO 
00002686  6100 02EC               1109      BSR ASCIITOHEX
0000268A  2444                    1110      MOVE.L D4,A2 ;BEGGINING
0000268C  2805                    1111      MOVE.L D5,D4
0000268E  6100 02E4               1112      BSR ASCIITOHEX
00002692  2644                    1113      MOVE.L D4,A3 ;ENDING
00002694  528B                    1114      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
00002696  2806                    1115      MOVE.L D6,D4
00002698  6100 02DA               1116      BSR ASCIITOHEX
0000269C  2844                    1117      MOVE.L D4,A4 ;THE DESTINATION
0000269E                          1118  BMOVFUNCTIONL1 
0000269E                          1119      ;MOVE THE WORD INTO THE ADDRESS
0000269E  18DA                    1120      MOVE.B (A2)+,(A4)+
000026A0  B7CA                    1121      CMPA.L A2,A3
000026A2  6EFA                    1122      BGT BMOVFUNCTIONL1
000026A4                          1123      ;WHEN DONE  
000026A4  6000 F95A               1124      BRA pSTART
000026A8                          1125  
000026A8                          1126  BTSTFUNCTION
000026A8  6100 02CA               1127      BSR ASCIITOHEX
000026AC  2444                    1128      MOVE.L D4,A2 ;BEGGINING
000026AE  2805                    1129      MOVE.L D5,D4
000026B0  6100 02C2               1130      BSR ASCIITOHEX
000026B4  2644                    1131      MOVE.L D4,A3 ;ENDING
000026B6  528B                    1132      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
000026B8  283C 0000A5A5           1133      MOVE.L #$A5A5,D4
000026BE                          1134      ;DESTRUCTIVE PART SEARCH IS AT D4
000026BE                          1135  BTSTFUNCTIONL1 
000026BE  3484                    1136      MOVE.W D4,(A2)  ;MOVE THE WORD TO START
000026C0  3A1A                    1137      MOVE.W (A2)+,D5  ;READ THE WORD
000026C2  BA44                    1138      CMP.W D4,D5      
000026C4  6600 0016               1139      BNE BTSTERROR   ;IF NOT EQUAL GO TO SUBROUTINE 
000026C8  B7CA                    1140      CMPA.L A2,A3
000026CA  6EF2                    1141      BGT BTSTFUNCTIONL1
000026CC  227C 000010A7           1142      MOVEA.L #BTSTSUCCESS,A1     
000026D2  103C 000D               1143      MOVE.B #13,D0
000026D6  4E4F                    1144      TRAP #15
000026D8  6000 F926               1145      BRA pSTART
000026DC                          1146  BTSTERROR
000026DC  227C 000010B6           1147      MOVEA.L #BTSTFAIL,A1     
000026E2  103C 000D               1148      MOVE.B #13,D0
000026E6  4E4F                    1149      TRAP #15
000026E8                          1150  
000026E8                          1151      ;PRINT ADDRESSS
000026E8  227C 00001087           1152      MOVEA.L #ADDRESS,A1     
000026EE  103C 000E               1153      MOVE.B #14,D0
000026F2  4E4F                    1154      TRAP #15
000026F4                          1155      
000026F4  558A                    1156      SUB.L #2,A2 
000026F6                          1157      
000026F6  320A                    1158      MOVE.W A2,D1
000026F8                          1159      
000026F8  6100 01A8               1160      BSR HEXTOASCII 
000026FC                          1161       
000026FC  4841                    1162      SWAP D1
000026FE                          1163      
000026FE  E159                    1164      ROL #8,D1
00002700  103C 0006               1165      MOVE.B #6,D0
00002704  4E4F                    1166      TRAP #15
00002706                          1167      
00002706  E159                    1168      ROL #8,D1
00002708  103C 0006               1169      MOVE.B #6,D0
0000270C  4E4F                    1170      TRAP #15
0000270E                          1171      
0000270E  4841                    1172      SWAP D1
00002710  E159                    1173      ROL #8,D1
00002712  103C 0006               1174      MOVE.B #6,D0
00002716  4E4F                    1175      TRAP #15
00002718                          1176      
00002718  E159                    1177      ROL #8,D1
0000271A  103C 0006               1178      MOVE.B #6,D0
0000271E  4E4F                    1179      TRAP #15
00002720                          1180      
00002720                          1181      
00002720  227C 00001064           1182      MOVEA.L #SPACE,A1     
00002726  103C 000D               1183      MOVE.B #13,D0
0000272A  4E4F                    1184      TRAP #15
0000272C                          1185  
0000272C                          1186      ;PRINT WRITTEN DATA 
0000272C  227C 000010CE           1187      MOVEA.L #DATASTORED,A1     
00002732  103C 000E               1188      MOVE.B #14,D0
00002736  4E4F                    1189      TRAP #15
00002738                          1190      
00002738  3204                    1191      MOVE.W D4,D1
0000273A                          1192      
0000273A  6100 0166               1193      BSR HEXTOASCII 
0000273E                          1194       
0000273E  4841                    1195      SWAP D1
00002740                          1196      
00002740  E159                    1197      ROL #8,D1
00002742  103C 0006               1198      MOVE.B #6,D0
00002746  4E4F                    1199      TRAP #15
00002748                          1200      
00002748  E159                    1201      ROL #8,D1
0000274A  103C 0006               1202      MOVE.B #6,D0
0000274E  4E4F                    1203      TRAP #15
00002750                          1204      
00002750  4841                    1205      SWAP D1
00002752  E159                    1206      ROL #8,D1
00002754  103C 0006               1207      MOVE.B #6,D0
00002758  4E4F                    1208      TRAP #15
0000275A                          1209      
0000275A  E159                    1210      ROL #8,D1
0000275C  103C 0006               1211      MOVE.B #6,D0
00002760  4E4F                    1212      TRAP #15
00002762                          1213      
00002762                          1214      
00002762  227C 00001064           1215      MOVEA.L #SPACE,A1     
00002768  103C 000D               1216      MOVE.B #13,D0
0000276C  4E4F                    1217      TRAP #15
0000276E                          1218  
0000276E                          1219      ;PRINT DATA READ 
0000276E  227C 000010C2           1220      MOVEA.L #DATAREAD,A1     
00002774  103C 000E               1221      MOVE.B #14,D0
00002778  4E4F                    1222      TRAP #15
0000277A                          1223      
0000277A  3205                    1224      MOVE.W D5,D1
0000277C                          1225      
0000277C  6100 0124               1226      BSR HEXTOASCII 
00002780                          1227       
00002780  4841                    1228      SWAP D1
00002782                          1229      
00002782  E159                    1230      ROL #8,D1
00002784  103C 0006               1231      MOVE.B #6,D0
00002788  4E4F                    1232      TRAP #15
0000278A                          1233      
0000278A  E159                    1234      ROL #8,D1
0000278C  103C 0006               1235      MOVE.B #6,D0
00002790  4E4F                    1236      TRAP #15
00002792                          1237      
00002792  4841                    1238      SWAP D1
00002794  E159                    1239      ROL #8,D1
00002796  103C 0006               1240      MOVE.B #6,D0
0000279A  4E4F                    1241      TRAP #15
0000279C                          1242      
0000279C  E159                    1243      ROL #8,D1
0000279E  103C 0006               1244      MOVE.B #6,D0
000027A2  4E4F                    1245      TRAP #15
000027A4                          1246      
000027A4                          1247      
000027A4  227C 00001064           1248      MOVEA.L #SPACE,A1     
000027AA  103C 000D               1249      MOVE.B #13,D0
000027AE  4E4F                    1250      TRAP #15
000027B0                          1251  
000027B0                          1252      
000027B0  6000 F84E               1253      BRA pSTART
000027B4                          1254  
000027B4                          1255  
000027B4                          1256  
000027B4                          1257  BSCHFUNCTION ;D4 IS START ADDRESS, D5 IS END ANDRESS AND D6 IS THE ITEM WE ARE LOOKING FOR
000027B4  6100 01BE               1258      BSR ASCIITOHEX
000027B8  2444                    1259      MOVE.L D4,A2 ;BEGGINING
000027BA  2805                    1260      MOVE.L D5,D4
000027BC  6100 01B6               1261      BSR ASCIITOHEX
000027C0  2644                    1262      MOVE.L D4,A3 ;ENDING
000027C2  528B                    1263      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
000027C4  2806                    1264      MOVE.L D6,D4
000027C6  6100 01AC               1265      BSR ASCIITOHEX
000027CA                          1266      ;SEARCH IS AT D4
000027CA                          1267  BSCHFUNCTIONL1 
000027CA                          1268      ;LOOK FOR WORD IN THE ADDRESS RANGE
000027CA  3A1A                    1269      MOVE.W (A2)+,D5
000027CC  BA44                    1270      CMP.W D4,D5
000027CE  6700 0016               1271      BEQ BSCHEQUAL
000027D2  B7CA                    1272      CMPA.L A2,A3
000027D4  6EF4                    1273      BGT BSCHFUNCTIONL1
000027D6  227C 00001099           1274      MOVEA.L #SEARCHFAIL,A1     
000027DC  103C 000D               1275      MOVE.B #13,D0
000027E0  4E4F                    1276      TRAP #15
000027E2  6000 F81C               1277      BRA pSTART
000027E6                          1278  BSCHEQUAL
000027E6  227C 0000106C           1279      MOVEA.L #SEARCHSUCCESS,A1     
000027EC  103C 000D               1280      MOVE.B #13,D0
000027F0  4E4F                    1281      TRAP #15
000027F2                          1282      ;PRINT ADDRESSS
000027F2  227C 00001087           1283      MOVEA.L #ADDRESS,A1     
000027F8  103C 000E               1284      MOVE.B #14,D0
000027FC  4E4F                    1285      TRAP #15
000027FE                          1286      
000027FE  558A                    1287      SUB.L #2,A2 
00002800                          1288      
00002800  320A                    1289      MOVE.W A2,D1
00002802                          1290      
00002802  6100 009E               1291      BSR HEXTOASCII 
00002806                          1292       
00002806  4841                    1293      SWAP D1
00002808                          1294      
00002808  E159                    1295      ROL #8,D1
0000280A  103C 0006               1296      MOVE.B #6,D0
0000280E  4E4F                    1297      TRAP #15
00002810                          1298      
00002810  E159                    1299      ROL #8,D1
00002812  103C 0006               1300      MOVE.B #6,D0
00002816  4E4F                    1301      TRAP #15
00002818                          1302      
00002818  4841                    1303      SWAP D1
0000281A  E159                    1304      ROL #8,D1
0000281C  103C 0006               1305      MOVE.B #6,D0
00002820  4E4F                    1306      TRAP #15
00002822                          1307      
00002822  E159                    1308      ROL #8,D1
00002824  103C 0006               1309      MOVE.B #6,D0
00002828  4E4F                    1310      TRAP #15
0000282A                          1311      
0000282A                          1312      
0000282A  227C 00001064           1313      MOVEA.L #SPACE,A1     
00002830  103C 000D               1314      MOVE.B #13,D0
00002834  4E4F                    1315      TRAP #15
00002836                          1316  
00002836                          1317      ;PRINT DATA 
00002836  227C 00001092           1318      MOVEA.L #DATA,A1     
0000283C  103C 000E               1319      MOVE.B #14,D0
00002840  4E4F                    1320      TRAP #15
00002842                          1321      
00002842  3204                    1322      MOVE.W D4,D1
00002844                          1323      
00002844  6100 005C               1324      BSR HEXTOASCII 
00002848                          1325       
00002848  4841                    1326      SWAP D1
0000284A                          1327      
0000284A  E159                    1328      ROL #8,D1
0000284C  103C 0006               1329      MOVE.B #6,D0
00002850  4E4F                    1330      TRAP #15
00002852                          1331      
00002852  E159                    1332      ROL #8,D1
00002854  103C 0006               1333      MOVE.B #6,D0
00002858  4E4F                    1334      TRAP #15
0000285A                          1335      
0000285A  4841                    1336      SWAP D1
0000285C  E159                    1337      ROL #8,D1
0000285E  103C 0006               1338      MOVE.B #6,D0
00002862  4E4F                    1339      TRAP #15
00002864                          1340      
00002864  E159                    1341      ROL #8,D1
00002866  103C 0006               1342      MOVE.B #6,D0
0000286A  4E4F                    1343      TRAP #15
0000286C                          1344      
0000286C                          1345      
0000286C  227C 00001064           1346      MOVEA.L #SPACE,A1     
00002872  103C 000D               1347      MOVE.B #13,D0
00002876  4E4F                    1348      TRAP #15
00002878                          1349      
00002878  6000 F786               1350      BRA pSTART
0000287C                          1351  
0000287C                          1352  
0000287C                          1353  
0000287C                          1354  GOFUNCTION ;D4 IS THE MEMLOC TO EXECUTE
0000287C  6100 00F6               1355      BSR ASCIITOHEX
00002880  48E7 FFFF               1356      MOVEM.L D0-D7/A0-A7,-(SP)
00002884  2244                    1357      MOVE.L D4,A1
00002886  4ED1                    1358      JMP (A1)    
00002888  6000 F776               1359      BRA pSTART
0000288C                          1360  
0000288C                          1361  DFFUNCTION
0000288C  227C 00001058           1362      MOVEA.L #DFPROMPT,A1     
00002892  103C 000D               1363      MOVE.B #13,D0
00002896  4E4F                    1364      TRAP #15
00002898  6000 F766               1365      BRA pSTART
0000289C                          1366  
0000289C                          1367  EXITFUNCTION
0000289C  103C 0009               1368      MOVE.B #9,D0
000028A0  4E4F                    1369      TRAP #15
000028A2                          1370      
000028A2                          1371      
000028A2                          1372  ********* HELPER FUNCTIONS **********
000028A2                          1373  
000028A2                          1374  HEXTOASCII
000028A2                          1375  *-----------------------------------------------------------
000028A2                          1376  * Title      : HEX to ASCII CONVERTER
000028A2                          1377  * Written by : METE MORRIS
000028A2                          1378  * Date       : 
000028A2                          1379  * Description: CONVERTS HEX WORD READ TO ASCII, REGISTERS MODIFIED ARE D2,D3,D4,D5 RETURNS D1
000028A2                          1380  *-----------------------------------------------------------
000028A2                          1381       
000028A2  48E7 3C00               1382       MOVEM.L D2-D5,-(SP)
000028A6                          1383       
000028A6  4282                    1384       CLR.L D2
000028A8  4283                    1385       CLR.L D3
000028AA  4284                    1386       CLR.L D4
000028AC  4285                    1387       CLR.L D5
000028AE                          1388       
000028AE                          1389       ;FIRST NO
000028AE  1401                    1390       MOVE.B D1,D2
000028B0  0882 0004               1391       BCLR #4,D2
000028B4  0882 0005               1392       BCLR #5,D2
000028B8  0882 0006               1393       BCLR #6,D2
000028BC  0882 0007               1394       BCLR #7,D2
000028C0                          1395       
000028C0                          1396       ;SECOND NO
000028C0  E849                    1397       LSR #4,D1
000028C2  1601                    1398       MOVE.B D1,D3
000028C4  0883 0004               1399       BCLR #4,D3
000028C8  0883 0005               1400       BCLR #5,D3
000028CC  0883 0006               1401       BCLR #6,D3
000028D0  0883 0007               1402       BCLR #7,D3 
000028D4                          1403       
000028D4                          1404       ;THIRD NO
000028D4  E849                    1405       LSR #4,D1
000028D6  1801                    1406       MOVE.B D1,D4
000028D8  0884 0004               1407       BCLR #4,D4
000028DC  0884 0005               1408       BCLR #5,D4
000028E0  0884 0006               1409       BCLR #6,D4
000028E4  0884 0007               1410       BCLR #7,D4 
000028E8                          1411       
000028E8                          1412       ;FOURTH NO
000028E8  E849                    1413       LSR #4,D1
000028EA  1A01                    1414       MOVE.B D1,D5
000028EC  0885 0004               1415       BCLR #4,D5
000028F0  0885 0005               1416       BCLR #5,D5
000028F4  0885 0006               1417       BCLR #6,D5
000028F8  0885 0007               1418       BCLR #7,D5 
000028FC                          1419      
000028FC                          1420      
000028FC                          1421      ;CONVERT FIRST NO TO ASCII
000028FC  B43C 0009               1422       CMP.B #9,D2
00002900  6E00 000C               1423       BGT LARGER1
00002904  0682 00000030           1424       ADD.L #$30,D2
0000290A  6000 0008               1425       BRA SECOND
0000290E                          1426  LARGER1
0000290E  0682 00000037           1427       ADD.L #$37,D2
00002914                          1428       
00002914                          1429  SECOND     
00002914                          1430      ;CONVERT SECOND NO TO ASCII
00002914  B63C 0009               1431       CMP.B #9,D3
00002918  6E00 000C               1432       BGT LARGER2
0000291C  0683 00000030           1433       ADD.L #$30,D3
00002922  6000 0008               1434       BRA THIRD
00002926                          1435  LARGER2
00002926  0683 00000037           1436       ADD.L #$37,D3
0000292C                          1437  
0000292C                          1438  THIRD     
0000292C                          1439      ;CONVERT THIRD NO TO ASCII
0000292C  B83C 0009               1440       CMP.B #9,D4
00002930  6E00 000C               1441       BGT LARGER3
00002934  0684 00000030           1442       ADD.L #$30,D4
0000293A  6000 0008               1443       BRA FOURTH
0000293E                          1444  LARGER3
0000293E  0684 00000037           1445       ADD.L #$37,D4
00002944                          1446  
00002944                          1447  FOURTH    
00002944                          1448      ;CONVERT FOURTH NO TO ASCII
00002944  BA3C 0009               1449       CMP.B #9,D5
00002948  6E00 000C               1450       BGT LARGER4
0000294C  0685 00000030           1451       ADD.L #$30,D5
00002952  6000 0008               1452       BRA ADDFINISH
00002956                          1453  LARGER4
00002956  0685 00000037           1454       ADD.L #$37,D5
0000295C                          1455       
0000295C                          1456      
0000295C                          1457      ;ROTATE AND ADD THE NUMBERS     
0000295C                          1458  ADDFINISH
0000295C  4281                    1459       CLR.L D1
0000295E  D282                    1460       ADD.L D2,D1
00002960                          1461       
00002960  E14B                    1462       LSL #8,D3
00002962  D283                    1463       ADD.L D3,D1
00002964                          1464       
00002964  4844                    1465       SWAP.W D4
00002966  D284                    1466       ADD.L D4,D1
00002968                          1467       
00002968  E14D                    1468       LSL #8,D5
0000296A  4845                    1469       SWAP.W D5
0000296C  D285                    1470       ADD.L D5,D1
0000296E                          1471       
0000296E  4CDF 003C               1472       MOVEM.L (SP)+,D2-D5
00002972                          1473       
00002972  4E75                    1474       RTS    
00002974                          1475  
00002974                          1476  
00002974                          1477  ASCIITOHEX
00002974                          1478  *-----------------------------------------------------------
00002974                          1479  * Title      : ASCII to HEX CONVERTER
00002974                          1480  * Written by : METE MORRIS
00002974                          1481  * Date       : 
00002974                          1482  * Description: CONVERTS ASCII  LWORD READ TO HEX, REGISTERS MODIFIED ARE D3,D5,D6,D7 RETURNS RESUT IN D4
00002974                          1483  *-----------------------------------------------------------
00002974                          1484  
00002974  48E7 1700               1485       MOVEM.L D3/D5-D7,-(SP)
00002978  4283                    1486       CLR.L D3
0000297A  4285                    1487       CLR.L D5
0000297C  4286                    1488       CLR.L D6
0000297E  4287                    1489       CLR.L D7
00002980                          1490  FIRSTBYTE
00002980  1604                    1491       MOVE.B D4,D3
00002982  B67C 0041               1492       CMP #$41,D3
00002986  6C00 000A               1493       BGE ALP1
0000298A  0403 0030               1494       SUB.B #$30,D3
0000298E  6000 0006               1495       BRA SECONDBYTE
00002992                          1496  ALP1 
00002992  0403 0037               1497       SUB.B #$37,D3    
00002996                          1498       
00002996                          1499  SECONDBYTE
00002996  E04C                    1500       LSR #8,D4
00002998  1A04                    1501       MOVE.B D4,D5
0000299A  BA7C 0041               1502       CMP #$41,D5
0000299E  6C00 000A               1503       BGE ALP2
000029A2  0405 0030               1504       SUB.B #$30,D5
000029A6  6000 0006               1505       BRA THIRDBYTE
000029AA                          1506  ALP2 
000029AA  0405 0037               1507       SUB.B #$37,D5    
000029AE                          1508       
000029AE                          1509  THIRDBYTE
000029AE  4844                    1510       SWAP D4
000029B0  1C04                    1511       MOVE.B D4,D6
000029B2  BC7C 0041               1512       CMP #$41,D6
000029B6  6C00 000A               1513       BGE ALP3
000029BA  0406 0030               1514       SUB.B #$30,D6
000029BE  6000 0006               1515       BRA FOURTHBYTE
000029C2                          1516  ALP3 
000029C2  0406 0037               1517       SUB.B #$37,D6    
000029C6                          1518       
000029C6                          1519       
000029C6                          1520  FOURTHBYTE
000029C6  E04C                    1521       LSR #8,D4
000029C8  1E04                    1522       MOVE.B D4,D7 
000029CA  BE7C 0041               1523       CMP #$41,D7
000029CE  6C00 000A               1524       BGE ALP4
000029D2  0407 0030               1525       SUB.B #$30,D7
000029D6  6000 0006               1526       BRA FINISH2
000029DA                          1527  ALP4 
000029DA  0407 0037               1528       SUB.B #$37,D7   
000029DE                          1529          
000029DE                          1530      
000029DE                          1531      ;ROTATE AND ADD THE NUMBERS 
000029DE                          1532  FINISH2    
000029DE  4284                    1533       CLR.L D4
000029E0  D883                    1534       ADD.L D3,D4
000029E2                          1535       
000029E2  E94D                    1536       LSL #4,D5
000029E4  D885                    1537       ADD.L D5,D4
000029E6                          1538       
000029E6  E14E                    1539       LSL #8,D6
000029E8  D886                    1540       ADD.L D6,D4
000029EA                          1541       
000029EA  E14F                    1542       LSL #8,D7
000029EC  E94F                    1543       LSL #4,D7
000029EE  D887                    1544       ADD.L D7,D4
000029F0                          1545       
000029F0  4CDF 00E8               1546       MOVEM.L (SP)+,D3/D5-D7
000029F4                          1547       
000029F4                          1548       
000029F4  4E75                    1549       RTS
000029F6                          1550  
000029F6                          1551  
000029F6                          1552  
000029F6                          1553  
000029F6                          1554  
000029F6                          1555      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDFINISH           295C
ADDRESS             1087
ALP1                2992
ALP2                29AA
ALP3                29C2
ALP4                29DA
ASCIITOHEX          2974
BFFUNCTION          2664
BFFUNCTIONL1        267C
BFPROMPT            1043
BMOVFUNCTION        2686
BMOVFUNCTIONL1      269E
BMOVPROMPT          1046
BSCHEQUAL           27E6
BSCHFUNCTION        27B4
BSCHFUNCTIONL1      27CA
BSCHPROMPT          1050
BTSTERROR           26DC
BTSTFAIL            10B6
BTSTFUNCTION        26A8
BTSTFUNCTIONL1      26BE
BTSTPROMPT          104B
BTSTSUCCESS         10A7
CMPBFL1             216A
CMPBFL2             2180
CMPBFL3             2196
CMPBMOVL1           21CC
CMPBMOVL2           21E2
CMPBMOVL3           21F8
CMPBSCHL1           2278
CMPBSCHL2           228E
CMPBSCHL3           22A4
CMPBTSTL1           222C
CMPBTSTL2           2242
CMPGOL1             22DA
CMPMDSPL1           2050
CMPMDSPL2           2066
CMPMML1             20B0
CMPMML2             20C6
CMPMSL1             2106
CMPMSL2             211C
CMPMSL3             2132
COMPAREBF           214A
COMPAREBF2          2154
COMPAREBMOV         21AC
COMPAREBMOV2        21B6
COMPAREBSCH         2258
COMPAREBSCH2        2262
COMPAREBTST         220E
COMPAREBTST2        2218
COMPAREDF           22F0
COMPAREDF2          22FA
COMPAREEXIT         230E
COMPAREEXIT2        2318
COMPAREGO           22BA
COMPAREGO2          22C4
COMPAREHELP         201E
COMPAREMDSP         2032
COMPAREMDSP2        203C
COMPAREMM           2092
COMPAREMM2          209C
COMPAREMS           20E6
COMPAREMS2          20F0
COMPARESORTW        2074
COMPARESORTW2       207E
DATA                1092
DATAREAD            10C2
DATASTORED          10CE
DFFUNCTION          288C
DFPROMPT            1058
DOT                 106B
EXITFUNCTION        289C
EXITPROMPT          105B
FAIL                232C
FINISH2             29DE
FIRSTBYTE           2980
FOURTH              2944
FOURTHBYTE          29C6
GOFUNCTION          287C
GOPROMPT            1055
HELP                10DC
HELPFUNCTION        233C
HELPPROMPT          102D
HEXTOASCII          28A2
LARGER1             290E
LARGER2             2926
LARGER3             293E
LARGER4             2956
LINEPROMPT          1066
MDSPFUNCTION1       234C
MDSPFUNCTION1L1     235A
MDSPFUNCTION2       23BC
MDSPFUNCTION2L1     23CC
MDSPPROMPT          1032
MMFUNCTION          243E
MMFUNCTIONL1        245C
MMFUNCTIONL2        24DA
MMFUNCTIONL3        2570
MMPROMPT            103D
MSFUNCTION          263C
MSFUNCTIONL1        2652
MSFUNCTIONL2        265E
MSPROMPT            1040
NOPROMPT            100D
PROMPT              1000
PSTART              2000
SEARCHFAIL          1099
SEARCHSUCCESS       106C
SECOND              2914
SECONDBYTE          2996
SEMICOLONSEP        1060
SORTWFUNCTION       242E
SORTWPROMPT         1037
SPACE               1064
START               2000
THIRD               292C
THIRDBYTE           29AE
