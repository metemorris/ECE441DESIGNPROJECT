00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/11/2017 8:33:11 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Design Project v1
00000000                             3  * Written by : Mete Morris
00000000                             4  * Date       : 03.11.2017
00000000                             5  * Description: Prints out prompt, does help(not finished) and exit
00000000                             6  * To-Do      : exit prompt when null character read
00000000                             7  *-----------------------------------------------------------
00001000                             8      ORG    $1000
00001000                             9  *COMMAND LINE PROMPT*  
00001000                            10  PROMPT:   
00001000= 4D 4F 4E 49 54 4F ...     11      DC.B 'MONITOR441> '
0000100C= 00                        12      DC.B 0
0000100D                            13  
0000100D                            14  NOPROMPT:
0000100D= 57 52 4F 4E 47 20 ...     15      DC.B 'WRONG ENTRY. TYPE HELP FOR HELP'
0000102C= 00                        16      DC.B 0
0000102D                            17  
0000102D                            18  
0000102D                            19  *MENU OPTIONS LOOKUP*
0000102D                            20  HELPPROMPT:
0000102D= 48 45 4C 50               21      DC.B 'HELP'
00001031= 00                        22      DC.B 0    
00001032                            23  MDSPPROMPT:
00001032= 4D 44 53 50 20            24      DC.B 'MDSP '
00001037                            25  SORTWPROMPT:
00001037= 53 4F 52 54 57 20         26      DC.B 'SORTW '
0000103D                            27  MMPROMPT:
0000103D= 4D 4D 20                  28      DC.B 'MM '
00001040                            29  MSPROMPT:
00001040= 4D 53 20                  30      DC.B 'MS '
00001043                            31  BFPROMPT:
00001043= 42 46 20                  32      DC.B 'BF '
00001046                            33  BMOVPROMPT:
00001046= 42 4D 4F 56 20            34      DC.B 'BMOV '
0000104B                            35  BTSTPROMPT:
0000104B= 42 54 53 54 20            36      DC.B 'BTST '
00001050                            37  BSCHPROMPT:
00001050= 42 53 43 48 20            38      DC.B 'BSCH '
00001055                            39  GOPROMPT:
00001055= 47 4F 20                  40      DC.B 'GO '
00001058                            41  DFPROMPT:
00001058= 44 46                     42      DC.B 'DF'
0000105A= 00                        43      DC.B 0
0000105B                            44  EXITPROMPT:
0000105B= 45 58 49 54               45      DC.B 'EXIT'
0000105F= 00                        46      DC.B 0
00001060                            47      
00001060                            48      
00001060                            49  *EXTRA COMMAND LINE THINGS*
00001060                            50  SEMICOLONSEP:
00001060= 20 3A 20                  51      DC.B ' : '
00001063= 00                        52      DC.B 0
00001064                            53  SPACE:
00001064= 20                        54      DC.B ' '
00001065= 00                        55      DC.B 0
00001066                            56      
00001066                            57  LINEPROMPT: 
00001066= 20 2D 3E 20               58      DC.B ' -> '
0000106A= 00                        59      DC.B 0
0000106B                            60  DOT:
0000106B= 2E                        61      DC.B '.'
0000106C                            62      
0000106C                            63  SEARCHSUCCESS:
0000106C= 42 53 43 48 20 53 ...     64      DC.B 'BSCH SEARCH WAS SUCCESFUL!'
00001086= 00                        65      DC.B 0
00001087                            66  ADDRESS: 
00001087= 41 44 44 52 45 53 ...     67      DC.B 'ADDRESS-> '
00001091= 00                        68      DC.B 0
00001092                            69      
00001092                            70  DATA:
00001092= 44 41 54 41 2D 3E         71      DC.B 'DATA->'
00001098= 00                        72      DC.B 0
00001099                            73      
00001099                            74  SEARCHFAIL:
00001099= 53 45 41 52 43 48 ...     75      DC.B 'SEARCH FAILED'
000010A6= 00                        76      DC.B 0
000010A7                            77      
000010A7                            78      
000010A7                            79  BTSTSUCCESS
000010A7= 42 54 53 54 20 53 ...     80      DC.B 'BTST SUCCESFUL'
000010B5= 00                        81      DC.B 0 
000010B6                            82  BTSTFAIL
000010B6= 42 54 53 54 20 46 ...     83      DC.B 'BTST FAILED'
000010C1= 00                        84      DC.B 0 
000010C2                            85  DATAREAD
000010C2= 44 41 54 41 20 52 ...     86      DC.B 'DATA READ->'
000010CD= 00                        87      DC.B 0
000010CE                            88  DATASTORED
000010CE= 44 41 54 41 20 53 ...     89      DC.B 'DATA STORED->'
000010DB= 00                        90      DC.B 0
000010DC                            91      
000010DC                            92  
000010DC                            93  
000010DC                            94  *HELP LINE TO BE PRINTED OUT*  
000010DC                            95  HELP:
000010DC= 48 45 4C 50               96      DC.B 'HELP'
000010E0= 0A                        97      DC.B $A  ;NEW LINE
000010E1= 44 49 53 50 4C 41 ...     98      DC.B 'DISPLAYS ALL AVAILABE COMMANDS AND USAGE DESCRIPTION '
00001116= 0D                        99      DC.B $D  ;CARRIAGE RETURN
00001117= 0A                       100      DC.B $A
00001118= 0A                       101      DC.B $A
00001119= 4D 44 53 50              102      DC.B 'MDSP'
0000111D= 0D                       103      DC.B $D  
0000111E= 0A                       104      DC.B $A
0000111F= 09                       105      DC.B $9 ;TAB
00001120= 54 68 65 20 4D 44 ...    106      DC.B 'The MDSP(MemoryDisplay)command outputs the address and memory'
0000115D= 0D                       107      DC.B $D  
0000115E= 0A                       108      DC.B $A
0000115F= 09                       109      DC.B $9
00001160= 63 6F 6E 74 65 6E ...    110      DC.B 'contents from <address1> to <address2>. '
00001188= 0D                       111      DC.B $D  
00001189= 0A                       112      DC.B $A
0000118A= 09                       113      DC.B $9
0000118B= 54 68 65 20 4D 44 ...    114      DC.B 'The MDSP(Memory Display) command ALSO outputs the address and'
000011C8= 0D                       115      DC.B $D  
000011C9= 0A                       116      DC.B $A
000011CA= 09                       117      DC.B $9
000011CB= 6D 65 6D 6F 72 79 ...    118      DC.B 'memory contents from <address1> to <address1+16bytes>.' 
00001201= 0D                       119      DC.B $D  
00001202= 0A                       120      DC.B $A
00001203= 0A                       121      DC.B $A
00001204= 53 4F 52 54 57           122      DC.B 'SORTW'
00001209= 0D                       123      DC.B $D  
0000120A= 0A                       124      DC.B $A
0000120B= 09                       125      DC.B $9 
0000120C= 54 68 65 20 53 4F ...    126      DC.B 'The SORT command sorts a block of memory. The starting address and the'
00001252= 0D                       127      DC.B $D  
00001253= 0A                       128      DC.B $A
00001254= 09                       129      DC.B $9
00001255= 65 6E 64 69 6E 67 ...    130      DC.B 'ending address <address2> of the memory block are specified in the command.'
000012A0= 0D                       131      DC.B $D  
000012A1= 0A                       132      DC.B $A
000012A2= 09                       133      DC.B $9
000012A3= 54 68 65 20 6F 72 ...    134      DC.B 'The order(A or D) specifies whether the list is sorted in Ascending'
000012E6= 0D                       135      DC.B $D  
000012E7= 0A                       136      DC.B $A
000012E8= 09                       137      DC.B $9
000012E9= 6F 72 20 44 65 73 ...    138      DC.B 'or Descending order.(The size of the data to be sorted is a word)'
0000132A                           139      
0000132A                           140      
0000132A= 0D                       141      DC.B $D  
0000132B= 0A                       142      DC.B $A
0000132C= 0A                       143      DC.B $A
0000132D= 4D 4D                    144      DC.B 'MM'
0000132F= 0D                       145      DC.B $D  
00001330= 0A                       146      DC.B $A
00001331= 09                       147      DC.B $9 
00001332= 4D 4D 28 4D 45 4D ...    148      DC.B 'MM(MEMORY MODIFY)is used to display memory and,   as required, modify'
00001375= 0D                       149      DC.B $D  
00001376= 0A                       150      DC.B $A
00001377= 09                       151      DC.B $9
00001378= 64 61 74 61 20 6F ...    152      DC.B 'data or enter new data. The size (byte, word, long word) controls the'
000013BD= 0D                       153      DC.B $D  
000013BE= 0A                       154      DC.B $A
000013BF= 09                       155      DC.B $9
000013C0= 6E 75 6D 62 65 72 ...    156      DC.B 'number of bytes displayed for each address.'    
000013EB                           157      
000013EB= 0D                       158      DC.B $D  
000013EC= 0A                       159      DC.B $A
000013ED= 0A                       160      DC.B $A
000013EE= 4D 53                    161      DC.B 'MS'
000013F0= 0D                       162      DC.B $D  
000013F1= 0A                       163      DC.B $A
000013F2= 09                       164      DC.B $9 
000013F3= 54 68 65 20 4D 53 ...    165      DC.B 'The MS (Memory Set) command alters memmory by setting data into the'
00001436= 0D                       166      DC.B $D  
00001437= 0A                       167      DC.B $A
00001438= 09                       168      DC.B $9
00001439= 61 64 64 72 65 73 ...    169      DC.B 'address specified. The data can take the form of ASCII string or'
00001479= 0D                       170      DC.B $D  
0000147A= 0A                       171      DC.B $A
0000147B= 09                       172      DC.B $9
0000147C= 68 65 78 61 64 65 ...    173      DC.B 'hexadecimal data.'
0000148D                           174  
0000148D= 0D                       175      DC.B $D  
0000148E= 0A                       176      DC.B $A
0000148F= 0A                       177      DC.B $A
00001490= 42 46                    178      DC.B 'BF'
00001492= 0D                       179      DC.B $D  
00001493= 0A                       180      DC.B $A
00001494= 09                       181      DC.B $9 
00001495= 54 68 65 20 42 6C ...    182      DC.B 'The Block Fill (BF) command fills memory starting with the word'
000014D4= 0D                       183      DC.B $D  
000014D5= 0A                       184      DC.B $A
000014D6= 09                       185      DC.B $9
000014D7= 62 6F 75 6E 64 61 ...    186      DC.B 'boundary <address1> through <address2>. Both <address1> and <address2> must'
00001522= 0D                       187      DC.B $D  
00001523= 0A                       188      DC.B $A
00001524= 09                       189      DC.B $9
00001525= 62 65 20 65 76 65 ...    190      DC.B 'be even   addresses. This command only fills with a word-size (2 bytes) data'
0000156F= 0D                       191      DC.B $D  
00001570= 0A                       192      DC.B $A
00001571= 09                       193      DC.B $9
00001572= 70 61 74 74 65 72 ...    194      DC.B 'pattern. If an entire word-size data pattern is not entered, the pattern is '
000015BE= 0D                       195      DC.B $D  
000015BF= 0A                       196      DC.B $A
000015C0= 09                       197      DC.B $9
000015C1= 72 69 67 68 74 20 ...    198      DC.B 'right justified and leading zeros are inserted.'
000015F0                           199  
000015F0= 0D                       200      DC.B $D  
000015F1= 0A                       201      DC.B $A
000015F2= 0A                       202      DC.B $A
000015F3= 42 4D 4F 56              203      DC.B 'BMOV'
000015F7= 0D                       204      DC.B $D  
000015F8= 0A                       205      DC.B $A
000015F9= 09                       206      DC.B $9 
000015FA= 54 68 65 20 42 6C ...    207      DC.B 'The Block Move (BMOV) command is used to move (duplicate) blocks of'
0000163D= 0D                       208      DC.B $D  
0000163E= 0A                       209      DC.B $A
0000163F= 09                       210      DC.B $9
00001640= 6D 65 6D 6F 72 79 ...    211      DC.B 'memory from one area to another.'
00001660                           212  
00001660= 0D                       213      DC.B $D  
00001661= 0A                       214      DC.B $A
00001662= 0A                       215      DC.B $A
00001663= 42 54 53 54              216      DC.B 'BTST'
00001667= 0D                       217      DC.B $D  
00001668= 0A                       218      DC.B $A
00001669= 09                       219      DC.B $9 
0000166A= 54 68 65 20 42 6C ...    220      DC.B 'The Block Test (BT) command is a destructive test of a block of'
000016A9= 0D                       221      DC.B $D  
000016AA= 0A                       222      DC.B $A
000016AB= 09                       223      DC.B $9
000016AC= 6D 65 6D 6F 72 79 ...    224      DC.B 'memory beginning at <address1> through <address2>. If this test'
000016EB= 0D                       225      DC.B $D  
000016EC= 0A                       226      DC.B $A
000016ED= 09                       227      DC.B $9
000016EE= 72 75 6E 73 20 74 ...    228      DC.B 'runs to completion without detecting errors, and display a message'
00001730= 0D                       229      DC.B $D  
00001731= 0A                       230      DC.B $A
00001732= 09                       231      DC.B $9
00001733= 74 68 61 74 20 6E ...    232      DC.B 'that no error was detected. If memory problems are found, a message is'    
00001779= 0D                       233      DC.B $D  
0000177A= 0A                       234      DC.B $A
0000177B= 09                       235      DC.B $9
0000177C= 64 69 73 70 6C 61 ...    236      DC.B 'displayed indicating  the address, the data stored, and the data read'
000017C0= 0D                       237      DC.B $D  
000017C1= 0A                       238      DC.B $A
000017C2= 09                       239      DC.B $9
000017C3= 6F 66 20 74 68 65 ...    240      DC.B 'of the failing memory.'
000017D9                           241  
000017D9                           242   
000017D9                           243   
000017D9= 0D                       244      DC.B $D  
000017DA= 0A                       245      DC.B $A
000017DB= 0A                       246      DC.B $A
000017DC= 42 53 43 48              247      DC.B 'BSCH'
000017E0= 0D                       248      DC.B $D  
000017E1= 0A                       249      DC.B $A
000017E2= 09                       250      DC.B $9 
000017E3= 54 68 65 20 42 53 ...    251      DC.B 'The BSCH (Block   Search) command is used to search a literal string in'
00001828= 0D                       252      DC.B $D  
00001829= 0A                       253      DC.B $A
0000182A= 09                       254      DC.B $9
0000182B= 61 20 6D 65 6D 6F ...    255      DC.B 'a memory block starting at <address1> through <address2> both inclusive.'
00001873= 0D                       256      DC.B $D  
00001874= 0A                       257      DC.B $A
00001875= 09                       258      DC.B $9
00001876= 49 6E 20 42 53 43 ...    259      DC.B 'In BSCH command, if search finds matching data, the data and address(es)'
000018BE= 0D                       260      DC.B $D  
000018BF= 0A                       261      DC.B $A
000018C0= 09                       262      DC.B $9
000018C1= 6D 75 73 74 20 62 ...    263      DC.B 'must be displayed.' 
000018D3                           264  
000018D3                           265  
000018D3= 0D                       266      DC.B $D  
000018D4= 0A                       267      DC.B $A
000018D5= 0A                       268      DC.B $A
000018D6= 47 4F                    269      DC.B 'GO'
000018D8= 0D                       270      DC.B $D  
000018D9= 0A                       271      DC.B $A
000018DA= 09                       272      DC.B $9 
000018DB= 54 68 65 20 47 4F ...    273      DC.B 'The GO command is used to start execution from a given address.'
0000191A                           274  
0000191A= 0D                       275      DC.B $D  
0000191B= 0A                       276      DC.B $A
0000191C= 0A                       277      DC.B $A
0000191D= 44 46                    278      DC.B 'DF'
0000191F= 0D                       279      DC.B $D  
00001920= 0A                       280      DC.B $A
00001921= 09                       281      DC.B $9 
00001922= 54 68 65 20 44 69 ...    282      DC.B 'The Display Formatted Registers(DF) command is used to display'
00001960= 0D                       283      DC.B $D  
00001961= 0A                       284      DC.B $A
00001962= 09                       285      DC.B $9
00001963= 74 68 65 20 4D 43 ...    286      DC.B 'the MC68000 processor registers. This command should display current'
000019A7= 0D                       287      DC.B $D  
000019A8= 0A                       288      DC.B $A
000019A9= 09                       289      DC.B $9
000019AA= 50 43 2C 20 53 52 ...    290      DC.B 'PC, SR,   US, SS and D, A registers.'
000019CC                           291      
000019CC= 0D                       292      DC.B $D  
000019CD= 0A                       293      DC.B $A
000019CE= 0A                       294      DC.B $A
000019CF= 45 58 49 54              295      DC.B 'EXIT'
000019D3= 0D                       296      DC.B $D  
000019D4= 0A                       297      DC.B $A
000019D5= 09                       298      DC.B $9 
000019D6= 54 68 65 20 45 58 ...    299      DC.B 'The EXIT command terminates/exits your MONITOR program'
00001A0C                           300  
00001A0C                           301   
00001A0C= 00                       302      DC.B 0
00001A0D                           303  
00001A0D                           304  
00001A0D                           305      
00002000                           306      ORG    $2000
00002000                           307      
00002000                           308  START:                  ; first instruction of program
00002000                           309  
00002000                           310  
00002000                           311  pSTART   
00002000  227C 00001000            312      MOVEA.L #PROMPT,A1 
00002006  103C 000E                313      MOVE.B #14,D0
0000200A  4E4F                     314      TRAP #15
0000200C  43F8 4000                315      LEA $4000,A1
00002010  103C 0002                316      MOVE.B #2,D0
00002014  4E4F                     317      TRAP #15
00002016                           318      
00002016                           319      
00002016                           320      *COMPARING INPUT TO THE MENU ITEMS*
00002016  207C 0000102D            321      MOVE.L #HELPPROMPT,A0
0000201C  4283                     322      CLR.L D3 ;COUNTER FOR REVERSING A1 TO USER INPUT
0000201E                           323  COMPAREHELP
0000201E  5283                     324      ADD.L #1,D3
00002020  B308                     325      CMPM.B (A0)+,(A1)+
00002022  6600 000E                326      BNE COMPAREMDSP
00002026  0C28 0000 FFFF           327      CMPI.B #00,-1(A0)   ;CHECK IF THE BYTE JUST COMPARED WAS NULL TERMINATOR
0000202C  66F0                     328      BNE COMPAREHELP
0000202E  6100 0352                329      BSR HELPFUNCTION 
00002032                           330  
00002032                           331  COMPAREMDSP
00002032  93C3                     332      SUB.L D3,A1
00002034  4283                     333      CLR.L D3
00002036  207C 00001032            334      MOVE.L #MDSPPROMPT,A0
0000203C                           335  COMPAREMDSP2
0000203C  5283                     336      ADD.L #1,D3
0000203E  B308                     337      CMPM.B (A0)+,(A1)+
00002040  6600 0032                338      BNE COMPARESORTW
00002044  0C28 0020 FFFF           339      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000204A  66F0                     340      BNE COMPAREMDSP2
0000204C                           341      ;CHECK FOR THE ARGUMENTS
0000204C  4284                     342      CLR.L D4 ;FIRST ARG
0000204E  4285                     343      CLR.L D5 ;SECOND ARG
00002050                           344  CMPMDSPL1
00002050  D819                     345      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002052  0C11 0000                346      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002056  6700 033A                347      BEQ MDSPFUNCTION1 ;FUNCTION FOR 1 ARG
0000205A  0C11 0020                348      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000205E  6700 0006                349      BEQ CMPMDSPL2
00002062  E18C                     350      LSL.L #8,D4
00002064  61EA                     351      BSR CMPMDSPL1
00002066                           352  CMPMDSPL2
00002066  DA19                     353      ADD.B (A1)+,D5   ; MOVE THE SECOND MEMORY LOCATION NUMBER TO D5
00002068  0C11 0000                354      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000206C  6700 0394                355      BEQ MDSPFUNCTION2 ;FUNCTION FOR 2 ARG
00002070  E18D                     356      LSL.L #8,D5
00002072  61F2                     357      BSR CMPMDSPL2
00002074                           358      
00002074                           359     
00002074                           360  COMPARESORTW   ;3 arguments, d4 is start,d5 is end, d6 is the ascending or descending
00002074  93C3                     361      SUB.L D3,A1
00002076  4283                     362      CLR.L D3
00002078  207C 00001037            363      MOVE.L #SORTWPROMPT,A0
0000207E                           364  COMPARESORTW2
0000207E  5283                     365      ADD.L #1,D3
00002080  B308                     366      CMPM.B (A0)+,(A1)+
00002082  6600 0054                367      BNE COMPAREMM
00002086  0C28 0020 FFFF           368      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000208C  66F0                     369      BNE COMPARESORTW2
0000208E                           370     ;CHECK FOR THE ARGUMENTS
0000208E  4284                     371      CLR.L D4 ;FIRST ARG
00002090  4285                     372      CLR.L D5 ;SECOND ARG
00002092  4286                     373      CLR.L D6 ;THIRD ARG
00002094                           374  CMPSORTWL1
00002094  D819                     375      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002096  0C11 0000                376      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000209A  6700 02D6                377      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000209E  0C11 0020                378      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000020A2  6700 0006                379      BEQ CMPSORTWL2
000020A6  E18C                     380      LSL.L #8,D4
000020A8  60EA                     381      BRA CMPSORTWL1
000020AA                           382  CMPSORTWL2
000020AA  DA19                     383      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000020AC  0C11 0000                384      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000020B0  6700 02C0                385      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000020B4  0C11 0020                386      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000020B8  6700 0006                387      BEQ CMPSORTWL3
000020BC  E18D                     388      LSL.L #8,D5
000020BE  60EA                     389      BRA CMPSORTWL2
000020C0                           390  CMPSORTWL3
000020C0  DC29 0001                391      ADD.B 1(A1),D6   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
000020C4  BC3C 0041                392      CMP.B #'A',D6  ;COMPARING LAST PART TO a or l
000020C8  6700 03AA                393      BEQ SORTWFUNCTION
000020CC                           394   ;FUNCTION 
000020CC  BC3C 0044                395      CMP.B #'D',D6 
000020D0  6700 03A2                396      BEQ SORTWFUNCTION ;FUNCTION
000020D4                           397      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
000020D4  6000 029C                398      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
000020D8                           399  
000020D8                           400  
000020D8                           401  COMPAREMM
000020D8  93C3                     402      SUB.L D3,A1
000020DA  4283                     403      CLR.L D3
000020DC  207C 0000103D            404      MOVE.L #MMPROMPT,A0
000020E2                           405  COMPAREMM2
000020E2  5283                     406      ADD.L #1,D3
000020E4  B308                     407      CMPM.B (A0)+,(A1)+
000020E6  6600 0044                408      BNE COMPAREMS
000020EA  0C28 0020 FFFF           409      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000020F0  66F0                     410      BNE COMPAREMM2
000020F2                           411     ;CHECK FOR THE ARGUMENTS
000020F2  4284                     412      CLR.L D4 ;FIRST ARG
000020F4  4285                     413      CLR.L D5 ;SECOND ARG
000020F6                           414  CMPMML1
000020F6  D819                     415      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
000020F8  0C11 0000                416      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000020FC  6700 0274                417      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002100  0C11 0020                418      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002104  6700 0006                419      BEQ CMPMML2
00002108  E18C                     420      LSL.L #8,D4
0000210A  61EA                     421      BSR CMPMML1
0000210C                           422  CMPMML2
0000210C  DA29 0001                423      ADD.B 1(A1),D5   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
00002110  BA3C 0042                424      CMP.B #'B',D5  ;COMPARING LAST PART TO B,W OR L
00002114  6700 03A8                425      BEQ MMFUNCTION ;FUNCTION 
00002118  BA3C 0057                426      CMP.B #'W',D5 
0000211C  6700 03A0                427      BEQ MMFUNCTION ;FUNCTION
00002120  BA3C 004C                428      CMP.B #'L',D5  
00002124  6700 0398                429      BEQ MMFUNCTION ;FUNCTION
00002128                           430      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
00002128  6000 0248                431      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
0000212C                           432  
0000212C                           433  
0000212C                           434  COMPAREMS ;SEND 3 ARGUMENTS, D4 IS MEMLOC, D5 IS DATA, D6 IS ASCII OR HEX
0000212C  93C3                     435      SUB.L D3,A1
0000212E  4283                     436      CLR.L D3
00002130  207C 00001040            437      MOVE.L #MSPROMPT,A0
00002136                           438  COMPAREMS2
00002136  5283                     439      ADD.L #1,D3
00002138  B308                     440      CMPM.B (A0)+,(A1)+
0000213A  6600 0054                441      BNE COMPAREBF
0000213E  0C28 0020 FFFF           442      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002144  66F0                     443      BNE COMPAREMS2
00002146                           444     ;CHECK FOR THE ARGUMENTS
00002146  4284                     445      CLR.L D4 ;FIRST ARG
00002148  4285                     446      CLR.L D5 ;SECOND ARG
0000214A  4286                     447      CLR.L D6 ;THIRD ARG
0000214C                           448  CMPMSL1
0000214C  D819                     449      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
0000214E  0C11 0000                450      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002152  6700 021E                451      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002156  0C11 0020                452      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000215A  6700 0006                453      BEQ CMPMSL2
0000215E  E18C                     454      LSL.L #8,D4
00002160  60EA                     455      BRA CMPMSL1
00002162                           456  CMPMSL2
00002162  DA19                     457      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002164  0C11 0000                458      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002168  6700 0208                459      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000216C  0C11 0020                460      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002170  6700 0006                461      BEQ CMPMSL3
00002174  E18D                     462      LSL.L #8,D5
00002176  60EA                     463      BRA CMPMSL2
00002178                           464  CMPMSL3
00002178  DC29 0001                465      ADD.B 1(A1),D6   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
0000217C  BC3C 0048                466      CMP.B #'H',D6  ;COMPARING LAST PART TO B,W OR L
00002180  6700 053A                467      BEQ MSFUNCTION ;FUNCTION 
00002184  BC3C 0041                468      CMP.B #'A',D6 
00002188  6700 0532                469      BEQ MSFUNCTION ;FUNCTION
0000218C                           470      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
0000218C  6000 01E4                471      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
00002190                           472  
00002190                           473  
00002190                           474  COMPAREBF ;D4 IS BEGGINING ADDRESS, D5 IS END ADDRESS, D6 IS THE WORD DATA TO BE STORED
00002190  93C3                     475      SUB.L D3,A1
00002192  4283                     476      CLR.L D3
00002194  207C 00001043            477      MOVE.L #BFPROMPT,A0
0000219A                           478  COMPAREBF2
0000219A  5283                     479      ADD.L #1,D3
0000219C  B308                     480      CMPM.B (A0)+,(A1)+
0000219E  6600 0052                481      BNE COMPAREBMOV
000021A2  0C28 0020 FFFF           482      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000021A8  66F0                     483      BNE COMPAREBF2
000021AA                           484     ;CHECK FOR THE ARGUMENTS
000021AA  4284                     485      CLR.L D4 ;FIRST ARG
000021AC  4285                     486      CLR.L D5 ;SECOND ARG
000021AE  4286                     487      CLR.L D6 ;THIRD ARG
000021B0                           488  CMPBFL1
000021B0  D819                     489      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
000021B2  0C11 0000                490      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021B6  6700 01BA                491      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000021BA  0C11 0020                492      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021BE  6700 0006                493      BEQ CMPBFL2
000021C2  E18C                     494      LSL.L #8,D4
000021C4  60EA                     495      BRA CMPBFL1
000021C6                           496  CMPBFL2
000021C6  DA19                     497      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000021C8  0C11 0000                498      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021CC  6700 01A4                499      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000021D0  0C11 0020                500      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021D4  6700 0006                501      BEQ CMPBFL3
000021D8  E18D                     502      LSL.L #8,D5
000021DA  60EA                     503      BRA CMPBFL2
000021DC                           504  CMPBFL3
000021DC  DC19                     505      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000021DE  0C11 0000                506      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021E2  6700 0500                507      BEQ BFFUNCTION ;FAILS IF NO MEM IS GIVEN
000021E6  0C11 0020                508      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021EA  6700 0186                509      BEQ FAIL
000021EE  E18E                     510      LSL.L #8,D6
000021F0  60EA                     511      BRA CMPBFL3
000021F2                           512  
000021F2                           513  COMPAREBMOV ;D4 IS THE START OF MOV, D5 IS THE END OF MOV, D6 IS THE DESTINATION OF THE MOVE
000021F2  93C3                     514      SUB.L D3,A1
000021F4  4283                     515      CLR.L D3
000021F6  207C 00001046            516      MOVE.L #BMOVPROMPT,A0
000021FC                           517  COMPAREBMOV2
000021FC  5283                     518      ADD.L #1,D3
000021FE  B308                     519      CMPM.B (A0)+,(A1)+
00002200  6600 0052                520      BNE COMPAREBTST
00002204  0C28 0020 FFFF           521      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000220A  66F0                     522      BNE COMPAREBMOV2
0000220C                           523     ;CHECK FOR THE ARGUMENTS
0000220C  4284                     524      CLR.L D4 ;FIRST ARG
0000220E  4285                     525      CLR.L D5 ;SECOND ARG
00002210  4286                     526      CLR.L D6 ;THIRD ARG
00002212                           527  CMPBMOVL1
00002212  D819                     528      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002214  0C11 0000                529      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002218  6700 0158                530      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000221C  0C11 0020                531      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002220  6700 0006                532      BEQ CMPBMOVL2
00002224  E18C                     533      LSL.L #8,D4
00002226  60EA                     534      BRA CMPBMOVL1
00002228                           535  CMPBMOVL2
00002228  DA19                     536      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
0000222A  0C11 0000                537      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000222E  6700 0142                538      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002232  0C11 0020                539      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002236  6700 0006                540      BEQ CMPBMOVL3
0000223A  E18D                     541      LSL.L #8,D5
0000223C  60EA                     542      BRA CMPBMOVL2
0000223E                           543  CMPBMOVL3
0000223E  DC19                     544      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002240  0C11 0000                545      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002244  6700 04C0                546      BEQ BMOVFUNCTION
00002248                           547   ;FAILS IF NO MEM IS GIVEN
00002248  0C11 0020                548      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000224C  6700 0124                549      BEQ FAIL
00002250  E18E                     550      LSL.L #8,D6
00002252  60EA                     551      BRA CMPBMOVL3
00002254                           552      
00002254                           553      
00002254                           554  COMPAREBTST  ;D4 IS START D5 IS END
00002254  93C3                     555      SUB.L D3,A1
00002256  4283                     556      CLR.L D3
00002258  207C 0000104B            557      MOVE.L #BTSTPROMPT,A0
0000225E                           558  COMPAREBTST2
0000225E  5283                     559      ADD.L #1,D3
00002260  B308                     560      CMPM.B (A0)+,(A1)+
00002262  6600 003A                561      BNE COMPAREBSCH
00002266  0C28 0020 FFFF           562      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000226C  66F0                     563      BNE COMPAREBTST2
0000226E                           564     ;CHECK FOR THE ARGUMENTS
0000226E  4284                     565      CLR.L D4 ;FIRST ARG
00002270  4285                     566      CLR.L D5 ;SECOND ARG
00002272                           567  
00002272                           568  CMPBTSTL1
00002272  D819                     569      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
00002274  0C11 0000                570      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002278  6700 00F8                571      BEQ FAIL        ;FAILS IF NO MEM IS GIVEN
0000227C  0C11 0020                572      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002280  6700 0006                573      BEQ CMPBTSTL2
00002284  E18C                     574      LSL.L #8,D4
00002286  60EA                     575      BRA CMPBTSTL1
00002288                           576  CMPBTSTL2
00002288  DA19                     577      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
0000228A  0C11 0000                578      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
0000228E  6700 0498                579      BEQ BTSTFUNCTION         ;FAILS IF NO MEM IS GIVEN
00002292  0C11 0020                580      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
00002296  6700 00DA                581      BEQ FAIL
0000229A  E18D                     582      LSL.L #8,D5
0000229C  60EA                     583      BRA CMPBTSTL2
0000229E                           584  
0000229E                           585  COMPAREBSCH  ;D4 GIVES START ADDRESS, D5 GIVES END ADDRESS, D6 GIVES THE WORD BEING SEARCHED
0000229E  93C3                     586      SUB.L D3,A1
000022A0  4283                     587      CLR.L D3
000022A2  207C 00001050            588      MOVE.L #BSCHPROMPT,A0
000022A8                           589  COMPAREBSCH2
000022A8  5283                     590      ADD.L #1,D3
000022AA  B308                     591      CMPM.B (A0)+,(A1)+
000022AC  6600 0052                592      BNE COMPAREGO
000022B0  0C28 0020 FFFF           593      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000022B6  66F0                     594      BNE COMPAREBSCH2
000022B8                           595     ;CHECK FOR THE ARGUMENTS
000022B8  4284                     596      CLR.L D4 ;FIRST ARG
000022BA  4285                     597      CLR.L D5 ;SECOND ARG
000022BC  4286                     598      CLR.L D6 ;THIRD ARG
000022BE                           599  CMPBSCHL1
000022BE  D819                     600      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
000022C0  0C11 0000                601      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000022C4  6700 00AC                602      BEQ FAIL        ;FAILS IF NO MEM IS GIVEN
000022C8  0C11 0020                603      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000022CC  6700 0006                604      BEQ CMPBSCHL2
000022D0  E18C                     605      LSL.L #8,D4
000022D2  60EA                     606      BRA CMPBSCHL1
000022D4                           607  CMPBSCHL2
000022D4  DA19                     608      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000022D6  0C11 0000                609      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
000022DA  6700 0096                610      BEQ FAIL         ;FAILS IF NO MEM IS GIVEN
000022DE  0C11 0020                611      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
000022E2  6700 0006                612      BEQ CMPBSCHL3
000022E6  E18D                     613      LSL.L #8,D5
000022E8  60EA                     614      BRA CMPBSCHL2
000022EA                           615  CMPBSCHL3
000022EA  DC19                     616      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000022EC  0C11 0000                617      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
000022F0  6700 0542                618      BEQ BSCHFUNCTION
000022F4                           619                       ;FAILS IF NO MEM IS GIVEN
000022F4  0C11 0020                620      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
000022F8  6700 0078                621      BEQ FAIL
000022FC  E18E                     622      LSL.L #8,D6
000022FE  60EA                     623      BRA CMPBSCHL3
00002300                           624  
00002300                           625  COMPAREGO ;D4 IS THE ARGUMENT TO GET TO THE MEMLOC
00002300  93C3                     626      SUB.L D3,A1
00002302  4283                     627      CLR.L D3
00002304  207C 00001055            628      MOVE.L #GOPROMPT,A0
0000230A                           629  COMPAREGO2
0000230A  5283                     630      ADD.L #1,D3
0000230C  B308                     631      CMPM.B (A0)+,(A1)+
0000230E  6600 0026                632      BNE COMPAREDF
00002312  0C28 0020 FFFF           633      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002318  66F0                     634      BNE COMPAREGO2
0000231A                           635     ;CHECK FOR THE ARGUMENTS
0000231A  4284                     636      CLR.L D4 ;FIRST ARG
0000231C  4285                     637      CLR.L D5 ;SECOND ARG
0000231E  4286                     638      CLR.L D6 ;THIRD ARG
00002320                           639  CMPGOL1
00002320  D819                     640      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
00002322  0C11 0000                641      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002326  6700 05D4                642      BEQ GOFUNCTION  ;FAILS IF NO MEM IS GIVEN
0000232A  0C11 0020                643      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000232E  6700 0042                644      BEQ FAIL
00002332  E18C                     645      LSL.L #8,D4
00002334  60EA                     646      BRA CMPGOL1
00002336                           647  
00002336                           648  COMPAREDF
00002336  93C3                     649      SUB.L D3,A1
00002338  4283                     650      CLR.L D3
0000233A  207C 00001058            651      MOVE.L #DFPROMPT,A0
00002340                           652  COMPAREDF2
00002340  5283                     653      ADD.L #1,D3
00002342  B308                     654      CMPM.B (A0)+,(A1)+
00002344  6600 000E                655      BNE COMPAREEXIT
00002348  0C28 0000 FFFF           656      CMPI.B #0,-1(A0)
0000234E  66F0                     657      BNE COMPAREDF2
00002350  6100 05BA                658      BSR DFFUNCTION ;CHANGE THIS WHEN YOU IMPLEMENT THE FUNCTION
00002354                           659  
00002354                           660      
00002354                           661  COMPAREEXIT
00002354  93C3                     662      SUB.L D3,A1
00002356  4283                     663      CLR.L D3
00002358  207C 0000105B            664      MOVE.L #EXITPROMPT,A0
0000235E                           665  COMPAREEXIT2
0000235E  5283                     666      ADD.L #1,D3
00002360  B308                     667      CMPM.B (A0)+,(A1)+
00002362  6600 000E                668      BNE FAIL
00002366  0C28 0000 FFFF           669      CMPI.B #0,-1(A0)
0000236C  66F0                     670      BNE COMPAREEXIT2
0000236E  6100 05AC                671      BSR EXITFUNCTION 
00002372                           672      
00002372                           673      
00002372                           674      
00002372                           675  *WHEN INPUT DOESNT FIT THE CRITERIA*    
00002372                           676  FAIL
00002372  227C 0000100D            677      MOVEA.L #NOPROMPT,A1     
00002378  103C 000D                678      MOVE.B #13,D0
0000237C  4E4F                     679      TRAP #15
0000237E  6000 FC80                680      BRA pSTART
00002382                           681        
00002382                           682  HELPFUNCTION
00002382  227C 000010DC            683      MOVEA.L #HELP,A1     
00002388  103C 000D                684      MOVE.B #13,D0
0000238C  4E4F                     685      TRAP #15
0000238E  6000 FC70                686      BRA pSTART
00002392                           687      
00002392                           688  MDSPFUNCTION1 ;argument passed as D4, PRINT FROM D4 TO D5
00002392                           689      ;MOVE.L #$2000,D4
00002392  6100 0660                690      BSR ASCIITOHEX
00002396                           691      ;DISPLAY EVERYTHIGN FROM D4 FOR NOW 2000 TO 2016\
00002396  2644                     692      MOVE.L D4,A3
00002398  D7FC 00000010            693      ADD.L #$10,A3 ;ENDING 
0000239E  2444                     694      MOVE.L D4,A2 ;BEGGINING
000023A0                           695  MDSPFUNCTION1L1 
000023A0                           696      ;PRINT MEMLOC
000023A0  220A                     697      MOVE.L A2,D1
000023A2  6100 057E                698      BSR HEXTOASCII 
000023A6                           699       
000023A6  4841                     700      SWAP D1
000023A8                           701      
000023A8  E159                     702      ROL #8,D1
000023AA  103C 0006                703      MOVE.B #6,D0
000023AE  4E4F                     704      TRAP #15
000023B0                           705      
000023B0  E159                     706      ROL #8,D1
000023B2  103C 0006                707      MOVE.B #6,D0
000023B6  4E4F                     708      TRAP #15
000023B8                           709      
000023B8  4841                     710      SWAP D1
000023BA  E159                     711      ROL #8,D1
000023BC  103C 0006                712      MOVE.B #6,D0
000023C0  4E4F                     713      TRAP #15
000023C2                           714      
000023C2  E159                     715      ROL #8,D1
000023C4  103C 0006                716      MOVE.B #6,D0
000023C8  4E4F                     717      TRAP #15
000023CA                           718  
000023CA                           719      
000023CA                           720      ;PRINT SEMICOLON
000023CA  227C 00001060            721      MOVEA.L #SEMICOLONSEP,A1     
000023D0  103C 000E                722      MOVE.B #14,D0
000023D4  4E4F                     723      TRAP #15
000023D6                           724      
000023D6                           725      ;PRINT CONTENT
000023D6  4281                     726      CLR.L D1
000023D8  121A                     727      MOVE.B (A2)+,D1
000023DA  6100 0546                728      BSR HEXTOASCII 
000023DE                           729       
000023DE                           730      
000023DE  E059                     731      ROR #8,D1
000023E0  103C 0006                732      MOVE.B #6,D0
000023E4  4E4F                     733      TRAP #15
000023E6                           734      
000023E6  E059                     735      ROR #8,D1
000023E8  103C 0006                736      MOVE.B #6,D0
000023EC  4E4F                     737      TRAP #15
000023EE                           738      
000023EE                           739      ;PRINT empty space
000023EE  227C 00001064            740      MOVEA.L #SPACE,A1     
000023F4  103C 000D                741      MOVE.B #13,D0
000023F8  4E4F                     742      TRAP #15
000023FA                           743      
000023FA                           744      
000023FA  B7CA                     745      CMPA.L A2,A3
000023FC  6EA2                     746      BGT MDSPFUNCTION1L1
000023FE                           747      
000023FE                           748  
000023FE                           749      
000023FE  6000 FC00                750      BRA pSTART
00002402                           751  
00002402                           752  MDSPFUNCTION2 ;argument passed as D4, PRINT FROM D4 TO D5
00002402  6100 05F0                753      BSR ASCIITOHEX
00002406                           754      ;DISPLAY EVERYTHIGN FROM D4 TO D5\
00002406  2444                     755      MOVE.L D4,A2 ;BEGGINING
00002408  2805                     756      MOVE.L D5,D4
0000240A  6100 05E8                757      BSR ASCIITOHEX
0000240E  2644                     758      MOVE.L D4,A3 ;ENDING
00002410  528B                     759      ADD.L #1,A3
00002412                           760  MDSPFUNCTION2L1 
00002412                           761    ;PRINT MEMLOC
00002412  220A                     762      MOVE.L A2,D1
00002414  6100 050C                763      BSR HEXTOASCII 
00002418                           764       
00002418  4841                     765      SWAP D1
0000241A                           766      
0000241A  E159                     767      ROL #8,D1
0000241C  103C 0006                768      MOVE.B #6,D0
00002420  4E4F                     769      TRAP #15
00002422                           770      
00002422  E159                     771      ROL #8,D1
00002424  103C 0006                772      MOVE.B #6,D0
00002428  4E4F                     773      TRAP #15
0000242A                           774      
0000242A  4841                     775      SWAP D1
0000242C  E159                     776      ROL #8,D1
0000242E  103C 0006                777      MOVE.B #6,D0
00002432  4E4F                     778      TRAP #15
00002434                           779      
00002434  E159                     780      ROL #8,D1
00002436  103C 0006                781      MOVE.B #6,D0
0000243A  4E4F                     782      TRAP #15
0000243C                           783  
0000243C                           784      
0000243C                           785      ;PRINT SEMICOLON
0000243C  227C 00001060            786      MOVEA.L #SEMICOLONSEP,A1     
00002442  103C 000E                787      MOVE.B #14,D0
00002446  4E4F                     788      TRAP #15
00002448                           789      
00002448                           790      ;PRINT CONTENT
00002448  4281                     791      CLR.L D1
0000244A  121A                     792      MOVE.B (A2)+,D1
0000244C  6100 04D4                793      BSR HEXTOASCII 
00002450                           794       
00002450                           795      
00002450  E059                     796      ROR #8,D1
00002452  103C 0006                797      MOVE.B #6,D0
00002456  4E4F                     798      TRAP #15
00002458                           799      
00002458  E059                     800      ROR #8,D1
0000245A  103C 0006                801      MOVE.B #6,D0
0000245E  4E4F                     802      TRAP #15
00002460                           803      
00002460                           804      ;PRINT empty space
00002460  227C 00001064            805      MOVEA.L #SPACE,A1     
00002466  103C 000D                806      MOVE.B #13,D0
0000246A  4E4F                     807      TRAP #15
0000246C                           808      
0000246C                           809      
0000246C  B7CA                     810      CMPA.L A2,A3
0000246E  6EA2                     811      BGT MDSPFUNCTION2L1
00002470                           812      
00002470                           813  
00002470                           814      
00002470  6000 FB8E                815      BRA pSTART
00002474                           816  
00002474                           817  
00002474                           818  
00002474                           819  SORTWFUNCTION ;D4 IS BEGGINNG D5 IS END AND D6 IS A OR D
00002474  6100 057E                820      BSR ASCIITOHEX
00002478  2044                     821      MOVE.L D4,A0 ;BEGGINING
0000247A  2805                     822      MOVE.L D5,D4
0000247C  6100 0576                823      BSR ASCIITOHEX
00002480  2244                     824      MOVE.L D4,A1 ;END
00002482                           825      
00002482  5589                     826      SUB.L #2,A1
00002484                           827      
00002484  2448                     828      MOVE.L A0,A2
00002486                           829      
00002486  BC3C 0041                830      CMP.B #'A',D6
0000248A  6700 001A                831      BEQ SORTWLA3
0000248E                           832      
0000248E                           833  SORTWL3
0000248E  204A                     834      MOVE.L A2,A0
00002490                           835  SORTWL2
00002490  B148                     836      CMP.W (A0)+,(A0)+
00002492  620A                     837      BHI.S SORTWL1 ;RECHECK
00002494  5588                     838      SUBQ.L #2,A0
00002496  B3C8                     839      CMP.L A0,A1
00002498  6CF6                     840      BGE SORTWL2 ;RECHECK
0000249A  6000 FB64                841      BRA pSTART
0000249E                           842  SORTWL1
0000249E  2020                     843      MOVE.L -(A0),D0
000024A0  4840                     844      SWAP.W D0
000024A2  2080                     845      MOVE.L D0,(A0)
000024A4  60E8                     846      BRA SORTWL3
000024A6                           847      
000024A6                           848      
000024A6                           849  SORTWLA3
000024A6  204A                     850      MOVE.L A2,A0
000024A8                           851  SORTWLA2
000024A8  B148                     852      CMP.W (A0)+,(A0)+
000024AA  6D0A                     853      BLT.S SORTWLA1 ;RECHECK
000024AC  5588                     854      SUBQ.L #2,A0
000024AE  B3C8                     855      CMP.L A0,A1
000024B0  6CF6                     856      BGE SORTWLA2 ;RECHECK
000024B2  6000 FB4C                857      BRA pSTART
000024B6                           858  SORTWLA1
000024B6  2020                     859      MOVE.L -(A0),D0
000024B8  4840                     860      SWAP.W D0
000024BA  2080                     861      MOVE.L D0,(A0)
000024BC  60E8                     862      BRA SORTWLA3
000024BE                           863      
000024BE                           864  
000024BE                           865  MMFUNCTION ;argument passed as D4 AS MEMLOC AND d5 AS THE MODE
000024BE  6100 0534                866      BSR ASCIITOHEX
000024C2                           867      ;DISPLAY EVERYTHIGN FROM D4 TO D5\
000024C2  2444                     868      MOVE.L D4,A2 ;BEGGINING
000024C4                           869      ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
000024C4  BA3C 0042                870      CMP.B #'B',D5 
000024C8  6700 0012                871      BEQ MMFUNCTIONL1 ;FUNCTION 
000024CC  BA3C 0057                872      CMP.B #'W',D5 
000024D0  6700 0088                873      BEQ MMFUNCTIONL2 ;FUNCTION
000024D4  BA3C 004C                874      CMP.B #'L',D5  
000024D8  6700 0116                875      BEQ MMFUNCTIONL3 ;FUNCTION
000024DC                           876  MMFUNCTIONL1 
000024DC                           877    ;PRINT MEMLOC
000024DC  220A                     878      MOVE.L A2,D1
000024DE  6100 0442                879      BSR HEXTOASCII 
000024E2                           880       
000024E2  4841                     881      SWAP D1
000024E4                           882      
000024E4  E159                     883      ROL #8,D1
000024E6  103C 0006                884      MOVE.B #6,D0
000024EA  4E4F                     885      TRAP #15
000024EC  E159                     886      ROL #8,D1
000024EE  103C 0006                887      MOVE.B #6,D0
000024F2  4E4F                     888      TRAP #15
000024F4                           889      
000024F4  4841                     890      SWAP D1
000024F6  E159                     891      ROL #8,D1
000024F8  103C 0006                892      MOVE.B #6,D0
000024FC  4E4F                     893      TRAP #15
000024FE                           894      
000024FE  E159                     895      ROL #8,D1
00002500  103C 0006                896      MOVE.B #6,D0
00002504  4E4F                     897      TRAP #15
00002506                           898  
00002506                           899      
00002506                           900      ;PRINT SEMICOLON
00002506  227C 00001060            901      MOVEA.L #SEMICOLONSEP,A1     
0000250C  103C 000E                902      MOVE.B #14,D0
00002510  4E4F                     903      TRAP #15
00002512                           904      
00002512                           905      ;PRINT CONTENT
00002512  4281                     906      CLR.L D1
00002514  121A                     907      MOVE.B (A2)+,D1
00002516  6100 040A                908      BSR HEXTOASCII 
0000251A                           909       
0000251A                           910      
0000251A  E059                     911      ROR #8,D1
0000251C  103C 0006                912      MOVE.B #6,D0
00002520  4E4F                     913      TRAP #15
00002522                           914      
00002522  E059                     915      ROR #8,D1
00002524  103C 0006                916      MOVE.B #6,D0
00002528  4E4F                     917      TRAP #15
0000252A                           918      
0000252A                           919      ;PRINT LINEPROMPT,
0000252A  227C 00001066            920      MOVEA.L #LINEPROMPT,A1     
00002530  103C 000E                921      MOVE.B #14,D0
00002534  4E4F                     922      TRAP #15
00002536                           923      
00002536                           924      
00002536                           925      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
00002536  43F8 5000                926      LEA $5000,A1
0000253A  103C 0002                927      MOVE.B #2,D0
0000253E  4E4F                     928      TRAP #15
00002540                           929      
00002540                           930      
00002540                           931      *COMPARING INPUT TO THE MENU ITEMS*
00002540                           932      ;COMPARING TO DOT
00002540  0C11 002E                933      CMP.B #$2E,(A1) ;2E IS THE DOT
00002544  6700 FABA                934      BEQ pSTART ;if input is dot exit
00002548                           935      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
00002548  0C11 0000                936      CMP.B #00,(A1)
0000254C  678E                     937      BEQ MMFUNCTIONL1
0000254E                           938      
0000254E                           939      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
0000254E  3811                     940      MOVE.W (A1),D4
00002550  6100 04A2                941      BSR ASCIITOHEX
00002554  1544 FFFF                942      MOVE.B D4,-1(A2)
00002558  6082                     943      BRA MMFUNCTIONL1
0000255A                           944  
0000255A                           945  MMFUNCTIONL2 ;FOR WORD OPERATION MM
0000255A                           946      ;PRINT MEMLOC
0000255A  220A                     947      MOVE.L A2,D1
0000255C  6100 03C4                948      BSR HEXTOASCII 
00002560                           949       
00002560  4841                     950      SWAP D1
00002562                           951      
00002562  E159                     952      ROL #8,D1
00002564  103C 0006                953      MOVE.B #6,D0
00002568  4E4F                     954      TRAP #15
0000256A  E159                     955      ROL #8,D1
0000256C  103C 0006                956      MOVE.B #6,D0
00002570  4E4F                     957      TRAP #15
00002572                           958      
00002572  4841                     959      SWAP D1
00002574  E159                     960      ROL #8,D1
00002576  103C 0006                961      MOVE.B #6,D0
0000257A  4E4F                     962      TRAP #15
0000257C                           963      
0000257C  E159                     964      ROL #8,D1
0000257E  103C 0006                965      MOVE.B #6,D0
00002582  4E4F                     966      TRAP #15
00002584                           967  
00002584                           968      
00002584                           969      ;PRINT SEMICOLON
00002584  227C 00001060            970      MOVEA.L #SEMICOLONSEP,A1     
0000258A  103C 000E                971      MOVE.B #14,D0
0000258E  4E4F                     972      TRAP #15
00002590                           973      
00002590                           974      ;PRINT CONTENT
00002590  4281                     975      CLR.L D1
00002592  321A                     976      MOVE.W (A2)+,D1
00002594  6100 038C                977      BSR HEXTOASCII 
00002598                           978       
00002598                           979      
00002598  4841                     980      SWAP D1
0000259A                           981      
0000259A  E159                     982      ROL #8,D1
0000259C  103C 0006                983      MOVE.B #6,D0
000025A0  4E4F                     984      TRAP #15
000025A2  E159                     985      ROL #8,D1
000025A4  103C 0006                986      MOVE.B #6,D0
000025A8  4E4F                     987      TRAP #15
000025AA                           988      
000025AA  4841                     989      SWAP D1
000025AC  E159                     990      ROL #8,D1
000025AE  103C 0006                991      MOVE.B #6,D0
000025B2  4E4F                     992      TRAP #15
000025B4                           993      
000025B4  E159                     994      ROL #8,D1
000025B6  103C 0006                995      MOVE.B #6,D0
000025BA  4E4F                     996      TRAP #15
000025BC                           997      
000025BC                           998      ;PRINT LINEPROMPT,
000025BC  227C 00001066            999      MOVEA.L #LINEPROMPT,A1     
000025C2  103C 000E               1000      MOVE.B #14,D0
000025C6  4E4F                    1001      TRAP #15
000025C8                          1002      
000025C8                          1003      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
000025C8  43F8 5000               1004      LEA $5000,A1
000025CC  103C 0002               1005      MOVE.B #2,D0
000025D0  4E4F                    1006      TRAP #15
000025D2                          1007      
000025D2                          1008      *COMPARING INPUT TO THE MENU ITEMS*
000025D2                          1009      ;COMPARING TO DOT
000025D2  0C11 002E               1010      CMP.B #$2E,(A1) ;2E IS THE DOT
000025D6  6700 FA28               1011      BEQ pSTART ;if input is dot exit
000025DA                          1012      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
000025DA  0C11 0000               1013      CMP.B #00,(A1)
000025DE  6700 FF7A               1014      BEQ MMFUNCTIONL2
000025E2                          1015      
000025E2                          1016      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
000025E2  2811                    1017      MOVE.L (A1),D4
000025E4  6100 040E               1018      BSR ASCIITOHEX
000025E8  3544 FFFE               1019      MOVE.W D4,-2(A2)
000025EC  6000 FF6C               1020      BRA MMFUNCTIONL2
000025F0                          1021  
000025F0                          1022  
000025F0                          1023  
000025F0                          1024  MMFUNCTIONL3 ;FOR LONG WORD MM OPERATION
000025F0                          1025      ;PRINT MEMLOC
000025F0  220A                    1026      MOVE.L A2,D1
000025F2  6100 032E               1027      BSR HEXTOASCII 
000025F6                          1028       
000025F6  4841                    1029      SWAP D1
000025F8                          1030      
000025F8  E159                    1031      ROL #8,D1
000025FA  103C 0006               1032      MOVE.B #6,D0
000025FE  4E4F                    1033      TRAP #15
00002600  E159                    1034      ROL #8,D1
00002602  103C 0006               1035      MOVE.B #6,D0
00002606  4E4F                    1036      TRAP #15
00002608                          1037      
00002608  4841                    1038      SWAP D1
0000260A  E159                    1039      ROL #8,D1
0000260C  103C 0006               1040      MOVE.B #6,D0
00002610  4E4F                    1041      TRAP #15
00002612                          1042      
00002612  E159                    1043      ROL #8,D1
00002614  103C 0006               1044      MOVE.B #6,D0
00002618  4E4F                    1045      TRAP #15
0000261A                          1046  
0000261A                          1047      
0000261A                          1048      ;PRINT SEMICOLON
0000261A  227C 00001060           1049      MOVEA.L #SEMICOLONSEP,A1     
00002620  103C 000E               1050      MOVE.B #14,D0
00002624  4E4F                    1051      TRAP #15
00002626                          1052      
00002626                          1053      ;PRINT CONTENT
00002626  4281                    1054      CLR.L D1
00002628  321A                    1055      MOVE.W (A2)+,D1
0000262A  6100 02F6               1056      BSR HEXTOASCII 
0000262E                          1057       
0000262E                          1058      
0000262E  4841                    1059      SWAP D1
00002630                          1060      
00002630  E159                    1061      ROL #8,D1
00002632  103C 0006               1062      MOVE.B #6,D0
00002636  4E4F                    1063      TRAP #15
00002638  E159                    1064      ROL #8,D1
0000263A  103C 0006               1065      MOVE.B #6,D0
0000263E  4E4F                    1066      TRAP #15
00002640                          1067      
00002640  4841                    1068      SWAP D1
00002642  E159                    1069      ROL #8,D1
00002644  103C 0006               1070      MOVE.B #6,D0
00002648  4E4F                    1071      TRAP #15
0000264A                          1072      
0000264A  E159                    1073      ROL #8,D1
0000264C  103C 0006               1074      MOVE.B #6,D0
00002650  4E4F                    1075      TRAP #15
00002652                          1076      
00002652                          1077      ;PRINT SECOND WORD
00002652                          1078      ;PRINT CONTENT
00002652  4281                    1079      CLR.L D1
00002654  321A                    1080      MOVE.W (A2)+,D1
00002656  6100 02CA               1081      BSR HEXTOASCII 
0000265A                          1082       
0000265A                          1083      
0000265A  4841                    1084      SWAP D1
0000265C                          1085      
0000265C  E159                    1086      ROL #8,D1
0000265E  103C 0006               1087      MOVE.B #6,D0
00002662  4E4F                    1088      TRAP #15
00002664  E159                    1089      ROL #8,D1
00002666  103C 0006               1090      MOVE.B #6,D0
0000266A  4E4F                    1091      TRAP #15
0000266C                          1092      
0000266C  4841                    1093      SWAP D1
0000266E  E159                    1094      ROL #8,D1
00002670  103C 0006               1095      MOVE.B #6,D0
00002674  4E4F                    1096      TRAP #15
00002676                          1097      
00002676  E159                    1098      ROL #8,D1
00002678  103C 0006               1099      MOVE.B #6,D0
0000267C  4E4F                    1100      TRAP #15
0000267E                          1101  
0000267E                          1102      
0000267E                          1103      
0000267E                          1104      ;PRINT LINEPROMPT,
0000267E  227C 00001066           1105      MOVEA.L #LINEPROMPT,A1     
00002684  103C 000E               1106      MOVE.B #14,D0
00002688  4E4F                    1107      TRAP #15
0000268A                          1108      
0000268A                          1109      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
0000268A  43F8 5000               1110      LEA $5000,A1
0000268E  103C 0002               1111      MOVE.B #2,D0
00002692  4E4F                    1112      TRAP #15
00002694                          1113      
00002694                          1114      *COMPARING INPUT TO THE MENU ITEMS*
00002694                          1115      ;COMPARING TO DOT
00002694  0C11 002E               1116      CMP.B #$2E,(A1) ;2E IS THE DOT
00002698  6700 F966               1117      BEQ pSTART ;if input is dot exit
0000269C                          1118      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
0000269C  0C11 0000               1119      CMP.B #00,(A1)
000026A0  6700 FF4E               1120      BEQ MMFUNCTIONL3
000026A4                          1121      
000026A4                          1122      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
000026A4  2819                    1123      MOVE.L (A1)+,D4
000026A6  6100 034C               1124      BSR ASCIITOHEX
000026AA  3544 FFFC               1125      MOVE.W D4,-4(A2)
000026AE                          1126      ;PRINT SECOND WORD
000026AE  2811                    1127      MOVE.L (A1),D4
000026B0  6100 0342               1128      BSR ASCIITOHEX
000026B4  3544 FFFE               1129      MOVE.W D4,-2(A2)
000026B8                          1130      
000026B8  6000 FF36               1131      BRA MMFUNCTIONL3
000026BC                          1132  
000026BC                          1133  
000026BC                          1134  
000026BC                          1135      
000026BC                          1136  
000026BC                          1137  MSFUNCTION   ;D4 IS ADDRESS, D5 IS DATA, D6 IS ASCII OR HEX, WORD OPERATIONS ONLY
000026BC  6100 0336               1138      BSR ASCIITOHEX
000026C0  2444                    1139      MOVE.L D4,A2 ;MEMLOC FOR DATA TO BE STORED
000026C2                          1140      ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
000026C2  BC3C 0048               1141      CMP.B #'H',D6 
000026C6  6700 000A               1142      BEQ MSFUNCTIONL1 ;FUNCTION FOR WHEN THE NUM GIVEN IS HEX
000026CA  BC3C 0041               1143      CMP.B #'A',D6
000026CE  6700 000E               1144      BEQ MSFUNCTIONL2 ;FUNCTION FOR WHE THE NUM GIVEN IS ASCII
000026D2                          1145      
000026D2                          1146  MSFUNCTIONL1
000026D2  2805                    1147      MOVE.L D5,D4 
000026D4  6100 031E               1148      BSR ASCIITOHEX
000026D8  3484                    1149      MOVE.W D4,(A2)
000026DA  6000 F924               1150      BRA pSTART
000026DE                          1151  MSFUNCTIONL2
000026DE  2485                    1152      MOVE.L D5,(A2)
000026E0  6000 F91E               1153      BRA pSTART
000026E4                          1154      
000026E4                          1155      
000026E4                          1156  BFFUNCTION ;D4 IS THE START, D5 IS THE END, D6 IS THE NUMBER TO BE WRITTEN
000026E4                          1157        ;FILL EVERYTHIGN FROM D4 TO D5 WITH D6    
000026E4  6100 030E               1158      BSR ASCIITOHEX
000026E8  2444                    1159      MOVE.L D4,A2 ;BEGGINING
000026EA  2805                    1160      MOVE.L D5,D4
000026EC  6100 0306               1161      BSR ASCIITOHEX
000026F0  2644                    1162      MOVE.L D4,A3 ;ENDING
000026F2  528B                    1163      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
000026F4  2806                    1164      MOVE.L D6,D4
000026F6  6100 02FC               1165      BSR ASCIITOHEX
000026FA  2C04                    1166      MOVE.L D4,D6 ;THE VALUE TO BE ENTERED IN THE MEMORY BLOCK
000026FC                          1167  BFFUNCTIONL1 
000026FC                          1168      ;MOVE THE WORD INTO THE ADDRESS
000026FC  34C6                    1169      MOVE.W D6,(A2)+
000026FE  B7CA                    1170      CMPA.L A2,A3
00002700  6EFA                    1171      BGT BFFUNCTIONL1
00002702                          1172    ;WHEN DONE  
00002702  6000 F8FC               1173      BRA pSTART
00002706                          1174  
00002706                          1175  BMOVFUNCTION ;D4 IS THE START,D5 IS THE END, D6 IS THE LOCATION WE ARE WRITING TO 
00002706  6100 02EC               1176      BSR ASCIITOHEX
0000270A  2444                    1177      MOVE.L D4,A2 ;BEGGINING
0000270C  2805                    1178      MOVE.L D5,D4
0000270E  6100 02E4               1179      BSR ASCIITOHEX
00002712  2644                    1180      MOVE.L D4,A3 ;ENDING
00002714  528B                    1181      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
00002716  2806                    1182      MOVE.L D6,D4
00002718  6100 02DA               1183      BSR ASCIITOHEX
0000271C  2844                    1184      MOVE.L D4,A4 ;THE DESTINATION
0000271E                          1185  BMOVFUNCTIONL1 
0000271E                          1186      ;MOVE THE WORD INTO THE ADDRESS
0000271E  18DA                    1187      MOVE.B (A2)+,(A4)+
00002720  B7CA                    1188      CMPA.L A2,A3
00002722  6EFA                    1189      BGT BMOVFUNCTIONL1
00002724                          1190      ;WHEN DONE  
00002724  6000 F8DA               1191      BRA pSTART
00002728                          1192  
00002728                          1193  BTSTFUNCTION
00002728  6100 02CA               1194      BSR ASCIITOHEX
0000272C  2444                    1195      MOVE.L D4,A2 ;BEGGINING
0000272E  2805                    1196      MOVE.L D5,D4
00002730  6100 02C2               1197      BSR ASCIITOHEX
00002734  2644                    1198      MOVE.L D4,A3 ;ENDING
00002736  528B                    1199      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
00002738  283C 0000A5A5           1200      MOVE.L #$A5A5,D4
0000273E                          1201      ;DESTRUCTIVE PART SEARCH IS AT D4
0000273E                          1202  BTSTFUNCTIONL1 
0000273E  3484                    1203      MOVE.W D4,(A2)  ;MOVE THE WORD TO START
00002740  3A1A                    1204      MOVE.W (A2)+,D5  ;READ THE WORD
00002742  BA44                    1205      CMP.W D4,D5      
00002744  6600 0016               1206      BNE BTSTERROR   ;IF NOT EQUAL GO TO SUBROUTINE 
00002748  B7CA                    1207      CMPA.L A2,A3
0000274A  6EF2                    1208      BGT BTSTFUNCTIONL1
0000274C  227C 000010A7           1209      MOVEA.L #BTSTSUCCESS,A1     
00002752  103C 000D               1210      MOVE.B #13,D0
00002756  4E4F                    1211      TRAP #15
00002758  6000 F8A6               1212      BRA pSTART
0000275C                          1213  BTSTERROR
0000275C  227C 000010B6           1214      MOVEA.L #BTSTFAIL,A1     
00002762  103C 000D               1215      MOVE.B #13,D0
00002766  4E4F                    1216      TRAP #15
00002768                          1217  
00002768                          1218      ;PRINT ADDRESSS
00002768  227C 00001087           1219      MOVEA.L #ADDRESS,A1     
0000276E  103C 000E               1220      MOVE.B #14,D0
00002772  4E4F                    1221      TRAP #15
00002774                          1222      
00002774  558A                    1223      SUB.L #2,A2 
00002776                          1224      
00002776  320A                    1225      MOVE.W A2,D1
00002778                          1226      
00002778  6100 01A8               1227      BSR HEXTOASCII 
0000277C                          1228       
0000277C  4841                    1229      SWAP D1
0000277E                          1230      
0000277E  E159                    1231      ROL #8,D1
00002780  103C 0006               1232      MOVE.B #6,D0
00002784  4E4F                    1233      TRAP #15
00002786                          1234      
00002786  E159                    1235      ROL #8,D1
00002788  103C 0006               1236      MOVE.B #6,D0
0000278C  4E4F                    1237      TRAP #15
0000278E                          1238      
0000278E  4841                    1239      SWAP D1
00002790  E159                    1240      ROL #8,D1
00002792  103C 0006               1241      MOVE.B #6,D0
00002796  4E4F                    1242      TRAP #15
00002798                          1243      
00002798  E159                    1244      ROL #8,D1
0000279A  103C 0006               1245      MOVE.B #6,D0
0000279E  4E4F                    1246      TRAP #15
000027A0                          1247      
000027A0                          1248      
000027A0  227C 00001064           1249      MOVEA.L #SPACE,A1     
000027A6  103C 000D               1250      MOVE.B #13,D0
000027AA  4E4F                    1251      TRAP #15
000027AC                          1252  
000027AC                          1253      ;PRINT WRITTEN DATA 
000027AC  227C 000010CE           1254      MOVEA.L #DATASTORED,A1     
000027B2  103C 000E               1255      MOVE.B #14,D0
000027B6  4E4F                    1256      TRAP #15
000027B8                          1257      
000027B8  3204                    1258      MOVE.W D4,D1
000027BA                          1259      
000027BA  6100 0166               1260      BSR HEXTOASCII 
000027BE                          1261       
000027BE  4841                    1262      SWAP D1
000027C0                          1263      
000027C0  E159                    1264      ROL #8,D1
000027C2  103C 0006               1265      MOVE.B #6,D0
000027C6  4E4F                    1266      TRAP #15
000027C8                          1267      
000027C8  E159                    1268      ROL #8,D1
000027CA  103C 0006               1269      MOVE.B #6,D0
000027CE  4E4F                    1270      TRAP #15
000027D0                          1271      
000027D0  4841                    1272      SWAP D1
000027D2  E159                    1273      ROL #8,D1
000027D4  103C 0006               1274      MOVE.B #6,D0
000027D8  4E4F                    1275      TRAP #15
000027DA                          1276      
000027DA  E159                    1277      ROL #8,D1
000027DC  103C 0006               1278      MOVE.B #6,D0
000027E0  4E4F                    1279      TRAP #15
000027E2                          1280      
000027E2                          1281      
000027E2  227C 00001064           1282      MOVEA.L #SPACE,A1     
000027E8  103C 000D               1283      MOVE.B #13,D0
000027EC  4E4F                    1284      TRAP #15
000027EE                          1285  
000027EE                          1286      ;PRINT DATA READ 
000027EE  227C 000010C2           1287      MOVEA.L #DATAREAD,A1     
000027F4  103C 000E               1288      MOVE.B #14,D0
000027F8  4E4F                    1289      TRAP #15
000027FA                          1290      
000027FA  3205                    1291      MOVE.W D5,D1
000027FC                          1292      
000027FC  6100 0124               1293      BSR HEXTOASCII 
00002800                          1294       
00002800  4841                    1295      SWAP D1
00002802                          1296      
00002802  E159                    1297      ROL #8,D1
00002804  103C 0006               1298      MOVE.B #6,D0
00002808  4E4F                    1299      TRAP #15
0000280A                          1300      
0000280A  E159                    1301      ROL #8,D1
0000280C  103C 0006               1302      MOVE.B #6,D0
00002810  4E4F                    1303      TRAP #15
00002812                          1304      
00002812  4841                    1305      SWAP D1
00002814  E159                    1306      ROL #8,D1
00002816  103C 0006               1307      MOVE.B #6,D0
0000281A  4E4F                    1308      TRAP #15
0000281C                          1309      
0000281C  E159                    1310      ROL #8,D1
0000281E  103C 0006               1311      MOVE.B #6,D0
00002822  4E4F                    1312      TRAP #15
00002824                          1313      
00002824  227C 00001064           1314      MOVEA.L #SPACE,A1     
0000282A  103C 000D               1315      MOVE.B #13,D0
0000282E  4E4F                    1316      TRAP #15
00002830                          1317      
00002830  6000 F7CE               1318      BRA pSTART
00002834                          1319  
00002834                          1320  
00002834                          1321  
00002834                          1322  BSCHFUNCTION ;D4 IS START ADDRESS, D5 IS END ANDRESS AND D6 IS THE ITEM WE ARE LOOKING FOR
00002834  6100 01BE               1323      BSR ASCIITOHEX
00002838  2444                    1324      MOVE.L D4,A2 ;BEGGINING
0000283A  2805                    1325      MOVE.L D5,D4
0000283C  6100 01B6               1326      BSR ASCIITOHEX
00002840  2644                    1327      MOVE.L D4,A3 ;ENDING
00002842  528B                    1328      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
00002844  2806                    1329      MOVE.L D6,D4
00002846  6100 01AC               1330      BSR ASCIITOHEX
0000284A                          1331      ;SEARCH IS AT D4
0000284A                          1332  BSCHFUNCTIONL1 
0000284A                          1333      ;LOOK FOR WORD IN THE ADDRESS RANGE
0000284A  3A1A                    1334      MOVE.W (A2)+,D5
0000284C  BA44                    1335      CMP.W D4,D5
0000284E  6700 0016               1336      BEQ BSCHEQUAL
00002852  B7CA                    1337      CMPA.L A2,A3
00002854  6EF4                    1338      BGT BSCHFUNCTIONL1
00002856  227C 00001099           1339      MOVEA.L #SEARCHFAIL,A1     
0000285C  103C 000D               1340      MOVE.B #13,D0
00002860  4E4F                    1341      TRAP #15
00002862  6000 F79C               1342      BRA pSTART
00002866                          1343  BSCHEQUAL
00002866  227C 0000106C           1344      MOVEA.L #SEARCHSUCCESS,A1     
0000286C  103C 000D               1345      MOVE.B #13,D0
00002870  4E4F                    1346      TRAP #15
00002872                          1347      ;PRINT ADDRESSS
00002872  227C 00001087           1348      MOVEA.L #ADDRESS,A1     
00002878  103C 000E               1349      MOVE.B #14,D0
0000287C  4E4F                    1350      TRAP #15
0000287E                          1351      
0000287E  558A                    1352      SUB.L #2,A2 
00002880                          1353      
00002880  320A                    1354      MOVE.W A2,D1
00002882                          1355      
00002882  6100 009E               1356      BSR HEXTOASCII 
00002886                          1357       
00002886  4841                    1358      SWAP D1
00002888                          1359      
00002888  E159                    1360      ROL #8,D1
0000288A  103C 0006               1361      MOVE.B #6,D0
0000288E  4E4F                    1362      TRAP #15
00002890                          1363      
00002890  E159                    1364      ROL #8,D1
00002892  103C 0006               1365      MOVE.B #6,D0
00002896  4E4F                    1366      TRAP #15
00002898                          1367      
00002898  4841                    1368      SWAP D1
0000289A  E159                    1369      ROL #8,D1
0000289C  103C 0006               1370      MOVE.B #6,D0
000028A0  4E4F                    1371      TRAP #15
000028A2                          1372      
000028A2  E159                    1373      ROL #8,D1
000028A4  103C 0006               1374      MOVE.B #6,D0
000028A8  4E4F                    1375      TRAP #15
000028AA                          1376      
000028AA                          1377      
000028AA  227C 00001064           1378      MOVEA.L #SPACE,A1     
000028B0  103C 000D               1379      MOVE.B #13,D0
000028B4  4E4F                    1380      TRAP #15
000028B6                          1381  
000028B6                          1382      ;PRINT DATA 
000028B6  227C 00001092           1383      MOVEA.L #DATA,A1     
000028BC  103C 000E               1384      MOVE.B #14,D0
000028C0  4E4F                    1385      TRAP #15
000028C2                          1386      
000028C2  3204                    1387      MOVE.W D4,D1
000028C4                          1388      
000028C4  6100 005C               1389      BSR HEXTOASCII 
000028C8                          1390       
000028C8  4841                    1391      SWAP D1
000028CA                          1392      
000028CA  E159                    1393      ROL #8,D1
000028CC  103C 0006               1394      MOVE.B #6,D0
000028D0  4E4F                    1395      TRAP #15
000028D2                          1396      
000028D2  E159                    1397      ROL #8,D1
000028D4  103C 0006               1398      MOVE.B #6,D0
000028D8  4E4F                    1399      TRAP #15
000028DA                          1400      
000028DA  4841                    1401      SWAP D1
000028DC  E159                    1402      ROL #8,D1
000028DE  103C 0006               1403      MOVE.B #6,D0
000028E2  4E4F                    1404      TRAP #15
000028E4                          1405      
000028E4  E159                    1406      ROL #8,D1
000028E6  103C 0006               1407      MOVE.B #6,D0
000028EA  4E4F                    1408      TRAP #15
000028EC                          1409      
000028EC                          1410      
000028EC  227C 00001064           1411      MOVEA.L #SPACE,A1     
000028F2  103C 000D               1412      MOVE.B #13,D0
000028F6  4E4F                    1413      TRAP #15
000028F8                          1414      
000028F8  6000 F706               1415      BRA pSTART
000028FC                          1416  
000028FC                          1417  
000028FC                          1418  
000028FC                          1419  GOFUNCTION ;D4 IS THE MEMLOC TO EXECUTE
000028FC  6100 00F6               1420      BSR ASCIITOHEX
00002900  48E7 FFFF               1421      MOVEM.L D0-D7/A0-A7,-(SP)
00002904  2244                    1422      MOVE.L D4,A1
00002906  4ED1                    1423      JMP (A1)    
00002908  6000 F6F6               1424      BRA pSTART
0000290C                          1425  
0000290C                          1426  DFFUNCTION
0000290C  227C 00001058           1427      MOVEA.L #DFPROMPT,A1     
00002912  103C 000D               1428      MOVE.B #13,D0
00002916  4E4F                    1429      TRAP #15
00002918  6000 F6E6               1430      BRA pSTART
0000291C                          1431  
0000291C                          1432  EXITFUNCTION
0000291C  103C 0009               1433      MOVE.B #9,D0
00002920  4E4F                    1434      TRAP #15
00002922                          1435      
00002922                          1436      
00002922                          1437  ********* HELPER FUNCTIONS **********
00002922                          1438  
00002922                          1439  HEXTOASCII
00002922                          1440  *-----------------------------------------------------------
00002922                          1441  * Title      : HEX to ASCII CONVERTER
00002922                          1442  * Written by : METE MORRIS
00002922                          1443  * Date       : 
00002922                          1444  * Description: CONVERTS HEX WORD READ TO ASCII, REGISTERS MODIFIED ARE D2,D3,D4,D5 RETURNS D1
00002922                          1445  *-----------------------------------------------------------
00002922                          1446       
00002922  48E7 3C00               1447       MOVEM.L D2-D5,-(SP)
00002926                          1448       
00002926  4282                    1449       CLR.L D2
00002928  4283                    1450       CLR.L D3
0000292A  4284                    1451       CLR.L D4
0000292C  4285                    1452       CLR.L D5
0000292E                          1453       
0000292E                          1454       ;FIRST NO
0000292E  1401                    1455       MOVE.B D1,D2
00002930  0882 0004               1456       BCLR #4,D2
00002934  0882 0005               1457       BCLR #5,D2
00002938  0882 0006               1458       BCLR #6,D2
0000293C  0882 0007               1459       BCLR #7,D2
00002940                          1460       
00002940                          1461       ;SECOND NO
00002940  E849                    1462       LSR #4,D1
00002942  1601                    1463       MOVE.B D1,D3
00002944  0883 0004               1464       BCLR #4,D3
00002948  0883 0005               1465       BCLR #5,D3
0000294C  0883 0006               1466       BCLR #6,D3
00002950  0883 0007               1467       BCLR #7,D3 
00002954                          1468       
00002954                          1469       ;THIRD NO
00002954  E849                    1470       LSR #4,D1
00002956  1801                    1471       MOVE.B D1,D4
00002958  0884 0004               1472       BCLR #4,D4
0000295C  0884 0005               1473       BCLR #5,D4
00002960  0884 0006               1474       BCLR #6,D4
00002964  0884 0007               1475       BCLR #7,D4 
00002968                          1476       
00002968                          1477       ;FOURTH NO
00002968  E849                    1478       LSR #4,D1
0000296A  1A01                    1479       MOVE.B D1,D5
0000296C  0885 0004               1480       BCLR #4,D5
00002970  0885 0005               1481       BCLR #5,D5
00002974  0885 0006               1482       BCLR #6,D5
00002978  0885 0007               1483       BCLR #7,D5 
0000297C                          1484      
0000297C                          1485      
0000297C                          1486      ;CONVERT FIRST NO TO ASCII
0000297C  B43C 0009               1487       CMP.B #9,D2
00002980  6E00 000C               1488       BGT LARGER1
00002984  0682 00000030           1489       ADD.L #$30,D2
0000298A  6000 0008               1490       BRA SECOND
0000298E                          1491  LARGER1
0000298E  0682 00000037           1492       ADD.L #$37,D2
00002994                          1493       
00002994                          1494  SECOND     
00002994                          1495      ;CONVERT SECOND NO TO ASCII
00002994  B63C 0009               1496       CMP.B #9,D3
00002998  6E00 000C               1497       BGT LARGER2
0000299C  0683 00000030           1498       ADD.L #$30,D3
000029A2  6000 0008               1499       BRA THIRD
000029A6                          1500  LARGER2
000029A6  0683 00000037           1501       ADD.L #$37,D3
000029AC                          1502  
000029AC                          1503  THIRD     
000029AC                          1504      ;CONVERT THIRD NO TO ASCII
000029AC  B83C 0009               1505       CMP.B #9,D4
000029B0  6E00 000C               1506       BGT LARGER3
000029B4  0684 00000030           1507       ADD.L #$30,D4
000029BA  6000 0008               1508       BRA FOURTH
000029BE                          1509  LARGER3
000029BE  0684 00000037           1510       ADD.L #$37,D4
000029C4                          1511  
000029C4                          1512  FOURTH    
000029C4                          1513      ;CONVERT FOURTH NO TO ASCII
000029C4  BA3C 0009               1514       CMP.B #9,D5
000029C8  6E00 000C               1515       BGT LARGER4
000029CC  0685 00000030           1516       ADD.L #$30,D5
000029D2  6000 0008               1517       BRA ADDFINISH
000029D6                          1518  LARGER4
000029D6  0685 00000037           1519       ADD.L #$37,D5
000029DC                          1520       
000029DC                          1521      
000029DC                          1522      ;ROTATE AND ADD THE NUMBERS     
000029DC                          1523  ADDFINISH
000029DC  4281                    1524       CLR.L D1
000029DE  D282                    1525       ADD.L D2,D1
000029E0                          1526       
000029E0  E14B                    1527       LSL #8,D3
000029E2  D283                    1528       ADD.L D3,D1
000029E4                          1529       
000029E4  4844                    1530       SWAP.W D4
000029E6  D284                    1531       ADD.L D4,D1
000029E8                          1532       
000029E8  E14D                    1533       LSL #8,D5
000029EA  4845                    1534       SWAP.W D5
000029EC  D285                    1535       ADD.L D5,D1
000029EE                          1536       
000029EE  4CDF 003C               1537       MOVEM.L (SP)+,D2-D5
000029F2                          1538       
000029F2  4E75                    1539       RTS    
000029F4                          1540  
000029F4                          1541  
000029F4                          1542  ASCIITOHEX
000029F4                          1543  *-----------------------------------------------------------
000029F4                          1544  * Title      : ASCII to HEX CONVERTER
000029F4                          1545  * Written by : METE MORRIS
000029F4                          1546  * Date       : 
000029F4                          1547  * Description: CONVERTS ASCII  LWORD READ TO HEX, REGISTERS MODIFIED ARE D3,D5,D6,D7 RETURNS RESUT IN D4
000029F4                          1548  *-----------------------------------------------------------
000029F4                          1549  
000029F4  48E7 1700               1550       MOVEM.L D3/D5-D7,-(SP)
000029F8  4283                    1551       CLR.L D3
000029FA  4285                    1552       CLR.L D5
000029FC  4286                    1553       CLR.L D6
000029FE  4287                    1554       CLR.L D7
00002A00                          1555  FIRSTBYTE
00002A00  1604                    1556       MOVE.B D4,D3
00002A02  B67C 0041               1557       CMP #$41,D3
00002A06  6C00 000A               1558       BGE ALP1
00002A0A  0403 0030               1559       SUB.B #$30,D3
00002A0E  6000 0006               1560       BRA SECONDBYTE
00002A12                          1561  ALP1 
00002A12  0403 0037               1562       SUB.B #$37,D3    
00002A16                          1563       
00002A16                          1564  SECONDBYTE
00002A16  E04C                    1565       LSR #8,D4
00002A18  1A04                    1566       MOVE.B D4,D5
00002A1A  BA7C 0041               1567       CMP #$41,D5
00002A1E  6C00 000A               1568       BGE ALP2
00002A22  0405 0030               1569       SUB.B #$30,D5
00002A26  6000 0006               1570       BRA THIRDBYTE
00002A2A                          1571  ALP2 
00002A2A  0405 0037               1572       SUB.B #$37,D5    
00002A2E                          1573       
00002A2E                          1574  THIRDBYTE
00002A2E  4844                    1575       SWAP D4
00002A30  1C04                    1576       MOVE.B D4,D6
00002A32  BC7C 0041               1577       CMP #$41,D6
00002A36  6C00 000A               1578       BGE ALP3
00002A3A  0406 0030               1579       SUB.B #$30,D6
00002A3E  6000 0006               1580       BRA FOURTHBYTE
00002A42                          1581  ALP3 
00002A42  0406 0037               1582       SUB.B #$37,D6    
00002A46                          1583       
00002A46                          1584       
00002A46                          1585  FOURTHBYTE
00002A46  E04C                    1586       LSR #8,D4
00002A48  1E04                    1587       MOVE.B D4,D7 
00002A4A  BE7C 0041               1588       CMP #$41,D7
00002A4E  6C00 000A               1589       BGE ALP4
00002A52  0407 0030               1590       SUB.B #$30,D7
00002A56  6000 0006               1591       BRA FINISH2
00002A5A                          1592  ALP4 
00002A5A  0407 0037               1593       SUB.B #$37,D7   
00002A5E                          1594          
00002A5E                          1595      
00002A5E                          1596      ;ROTATE AND ADD THE NUMBERS 
00002A5E                          1597  FINISH2    
00002A5E  4284                    1598       CLR.L D4
00002A60  D883                    1599       ADD.L D3,D4
00002A62                          1600       
00002A62  E94D                    1601       LSL #4,D5
00002A64  D885                    1602       ADD.L D5,D4
00002A66                          1603       
00002A66  E14E                    1604       LSL #8,D6
00002A68  D886                    1605       ADD.L D6,D4
00002A6A                          1606       
00002A6A  E14F                    1607       LSL #8,D7
00002A6C  E94F                    1608       LSL #4,D7
00002A6E  D887                    1609       ADD.L D7,D4
00002A70                          1610       
00002A70  4CDF 00E8               1611       MOVEM.L (SP)+,D3/D5-D7
00002A74                          1612       
00002A74                          1613       
00002A74  4E75                    1614       RTS
00002A76                          1615  
00002A76                          1616  
00002A76                          1617  
00002A76                          1618  
00002A76                          1619  
00002A76                          1620      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDFINISH           29DC
ADDRESS             1087
ALP1                2A12
ALP2                2A2A
ALP3                2A42
ALP4                2A5A
ASCIITOHEX          29F4
BFFUNCTION          26E4
BFFUNCTIONL1        26FC
BFPROMPT            1043
BMOVFUNCTION        2706
BMOVFUNCTIONL1      271E
BMOVPROMPT          1046
BSCHEQUAL           2866
BSCHFUNCTION        2834
BSCHFUNCTIONL1      284A
BSCHPROMPT          1050
BTSTERROR           275C
BTSTFAIL            10B6
BTSTFUNCTION        2728
BTSTFUNCTIONL1      273E
BTSTPROMPT          104B
BTSTSUCCESS         10A7
CMPBFL1             21B0
CMPBFL2             21C6
CMPBFL3             21DC
CMPBMOVL1           2212
CMPBMOVL2           2228
CMPBMOVL3           223E
CMPBSCHL1           22BE
CMPBSCHL2           22D4
CMPBSCHL3           22EA
CMPBTSTL1           2272
CMPBTSTL2           2288
CMPGOL1             2320
CMPMDSPL1           2050
CMPMDSPL2           2066
CMPMML1             20F6
CMPMML2             210C
CMPMSL1             214C
CMPMSL2             2162
CMPMSL3             2178
CMPSORTWL1          2094
CMPSORTWL2          20AA
CMPSORTWL3          20C0
COMPAREBF           2190
COMPAREBF2          219A
COMPAREBMOV         21F2
COMPAREBMOV2        21FC
COMPAREBSCH         229E
COMPAREBSCH2        22A8
COMPAREBTST         2254
COMPAREBTST2        225E
COMPAREDF           2336
COMPAREDF2          2340
COMPAREEXIT         2354
COMPAREEXIT2        235E
COMPAREGO           2300
COMPAREGO2          230A
COMPAREHELP         201E
COMPAREMDSP         2032
COMPAREMDSP2        203C
COMPAREMM           20D8
COMPAREMM2          20E2
COMPAREMS           212C
COMPAREMS2          2136
COMPARESORTW        2074
COMPARESORTW2       207E
DATA                1092
DATAREAD            10C2
DATASTORED          10CE
DFFUNCTION          290C
DFPROMPT            1058
DOT                 106B
EXITFUNCTION        291C
EXITPROMPT          105B
FAIL                2372
FINISH2             2A5E
FIRSTBYTE           2A00
FOURTH              29C4
FOURTHBYTE          2A46
GOFUNCTION          28FC
GOPROMPT            1055
HELP                10DC
HELPFUNCTION        2382
HELPPROMPT          102D
HEXTOASCII          2922
LARGER1             298E
LARGER2             29A6
LARGER3             29BE
LARGER4             29D6
LINEPROMPT          1066
MDSPFUNCTION1       2392
MDSPFUNCTION1L1     23A0
MDSPFUNCTION2       2402
MDSPFUNCTION2L1     2412
MDSPPROMPT          1032
MMFUNCTION          24BE
MMFUNCTIONL1        24DC
MMFUNCTIONL2        255A
MMFUNCTIONL3        25F0
MMPROMPT            103D
MSFUNCTION          26BC
MSFUNCTIONL1        26D2
MSFUNCTIONL2        26DE
MSPROMPT            1040
NOPROMPT            100D
PROMPT              1000
PSTART              2000
SEARCHFAIL          1099
SEARCHSUCCESS       106C
SECOND              2994
SECONDBYTE          2A16
SEMICOLONSEP        1060
SORTWFUNCTION       2474
SORTWL1             249E
SORTWL2             2490
SORTWL3             248E
SORTWLA1            24B6
SORTWLA2            24A8
SORTWLA3            24A6
SORTWPROMPT         1037
SPACE               1064
START               2000
THIRD               29AC
THIRDBYTE           2A2E
