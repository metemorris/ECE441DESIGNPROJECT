00002000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 4/11/2017 6:11:18 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Design Project v1
00000000                             3  * Written by : Mete Morris
00000000                             4  * Date       : 03.11.2017
00000000                             5  * Description: Prints out prompt, does help(not finished) and exit
00000000                             6  * To-Do      : exit prompt when null character read
00000000                             7  *-----------------------------------------------------------
00001000                             8      ORG    $1000
00001000                             9  *COMMAND LINE PROMPT*  
00001000                            10  PROMPT:   
00001000= 4D 4F 4E 49 54 4F ...     11      DC.B 'MONITOR441> '
0000100C= 00                        12      DC.B 0
0000100D                            13  
0000100D                            14  NOPROMPT:
0000100D= 57 52 4F 4E 47 20 ...     15      DC.B 'WRONG ENTRY. TYPE HELP FOR HELP'
0000102C= 00                        16      DC.B 0
0000102D                            17  
0000102D                            18  
0000102D                            19  *MENU OPTIONS LOOKUP*
0000102D                            20  HELPPROMPT:
0000102D= 48 45 4C 50               21      DC.B 'HELP'
00001031= 00                        22      DC.B 0    
00001032                            23  MDSPPROMPT:
00001032= 4D 44 53 50 20            24      DC.B 'MDSP '
00001037                            25  SORTWPROMPT:
00001037= 53 4F 52 54 57 20         26      DC.B 'SORTW '
0000103D                            27  MMPROMPT:
0000103D= 4D 4D 20                  28      DC.B 'MM '
00001040                            29  MSPROMPT:
00001040= 4D 53 20                  30      DC.B 'MS '
00001043                            31  BFPROMPT:
00001043= 42 46 20                  32      DC.B 'BF '
00001046                            33  BMOVPROMPT:
00001046= 42 4D 4F 56 20            34      DC.B 'BMOV '
0000104B                            35  BTSTPROMPT:
0000104B= 42 54 53 54 20            36      DC.B 'BTST '
00001050                            37  BSCHPROMPT:
00001050= 42 53 43 48 20            38      DC.B 'BSCH '
00001055                            39  GOPROMPT:
00001055= 47 4F 20                  40      DC.B 'GO '
00001058                            41  DFPROMPT:
00001058= 44 46                     42      DC.B 'DF'
0000105A= 00                        43      DC.B 0
0000105B                            44  EXITPROMPT:
0000105B= 45 58 49 54               45      DC.B 'EXIT'
0000105F= 00                        46      DC.B 0
00001060                            47      
00001060                            48      
00001060                            49  *EXTRA COMMAND LINE THINGS*
00001060                            50  SEMICOLONSEP:
00001060= 20 3A 20                  51      DC.B ' : '
00001063= 00                        52      DC.B 0
00001064                            53  SPACE:
00001064= 20                        54      DC.B ' '
00001065= 00                        55      DC.B 0
00001066                            56      
00001066                            57  LINEPROMPT: 
00001066= 20 2D 3E 20               58      DC.B ' -> '
0000106A= 00                        59      DC.B 0
0000106B                            60  DOT:
0000106B= 2E                        61      DC.B '.'
0000106C                            62      
0000106C                            63  SEARCHSUCCESS:
0000106C= 42 53 43 48 20 53 ...     64      DC.B 'BSCH SEARCH WAS SUCCESFUL!'
00001086= 00                        65      DC.B 0
00001087                            66  ADDRESS: 
00001087= 41 44 44 52 45 53 ...     67      DC.B 'ADDRESS-> '
00001091= 00                        68      DC.B 0
00001092                            69      
00001092                            70  DATA:
00001092= 44 41 54 41 2D 3E         71      DC.B 'DATA->'
00001098= 00                        72      DC.B 0
00001099                            73      
00001099                            74  SEARCHFAIL:
00001099= 53 45 41 52 43 48 ...     75      DC.B 'SEARCH FAILED'
000010A6= 00                        76      DC.B 0
000010A7                            77      
000010A7                            78      
000010A7                            79  BTSTSUCCESS
000010A7= 42 54 53 54 20 53 ...     80      DC.B 'BTST SUCCESFUL'
000010B5= 00                        81      DC.B 0 
000010B6                            82  BTSTFAIL
000010B6= 42 54 53 54 20 46 ...     83      DC.B 'BTST FAILED'
000010C1= 00                        84      DC.B 0 
000010C2                            85  DATAREAD
000010C2= 44 41 54 41 20 52 ...     86      DC.B 'DATA READ->'
000010CD= 00                        87      DC.B 0
000010CE                            88  DATASTORED
000010CE= 44 41 54 41 20 53 ...     89      DC.B 'DATA STORED->'
000010DB= 00                        90      DC.B 0
000010DC                            91      
000010DC                            92  
000010DC                            93  
000010DC                            94  *HELP LINE TO BE PRINTED OUT*  
000010DC                            95  HELP:
000010DC= 48 45 4C 50               96      DC.B 'HELP'
000010E0= 0A                        97      DC.B $A  ;NEW LINE
000010E1= 44 49 53 50 4C 41 ...     98      DC.B 'DISPLAYS ALL AVAILABE COMMANDS AND USAGE DESCRIPTION '
00001116= 0D                        99      DC.B $D  ;CARRIAGE RETURN
00001117= 0A                       100      DC.B $A
00001118= 0A                       101      DC.B $A
00001119= 4D 44 53 50              102      DC.B 'MDSP'
0000111D= 0D                       103      DC.B $D  
0000111E= 0A                       104      DC.B $A
0000111F= 09                       105      DC.B $9 ;TAB
00001120= 54 68 65 20 4D 44 ...    106      DC.B 'The MDSP(MemoryDisplay)command outputs the address and memory'
0000115D= 0D                       107      DC.B $D  
0000115E= 0A                       108      DC.B $A
0000115F= 09                       109      DC.B $9
00001160= 63 6F 6E 74 65 6E ...    110      DC.B 'contents from <address1> to <address2>. '
00001188= 0D                       111      DC.B $D  
00001189= 0A                       112      DC.B $A
0000118A= 09                       113      DC.B $9
0000118B= 54 68 65 20 4D 44 ...    114      DC.B 'The MDSP(Memory Display) command ALSO outputs the address and'
000011C8= 0D                       115      DC.B $D  
000011C9= 0A                       116      DC.B $A
000011CA= 09                       117      DC.B $9
000011CB= 6D 65 6D 6F 72 79 ...    118      DC.B 'memory contents from <address1> to <address1+16bytes>.' 
00001201= 0D                       119      DC.B $D  
00001202= 0A                       120      DC.B $A
00001203= 0A                       121      DC.B $A
00001204= 53 4F 52 54 57           122      DC.B 'SORTW'
00001209= 0D                       123      DC.B $D  
0000120A= 0A                       124      DC.B $A
0000120B= 09                       125      DC.B $9 
0000120C= 54 68 65 20 53 4F ...    126      DC.B 'The SORT command sorts a block of memory. The starting address and the'
00001252= 0D                       127      DC.B $D  
00001253= 0A                       128      DC.B $A
00001254= 09                       129      DC.B $9
00001255= 65 6E 64 69 6E 67 ...    130      DC.B 'ending address <address2> of the memory block are specified in the command.'
000012A0= 0D                       131      DC.B $D  
000012A1= 0A                       132      DC.B $A
000012A2= 09                       133      DC.B $9
000012A3= 54 68 65 20 6F 72 ...    134      DC.B 'The order(A or D) specifies whether the list is sorted in Ascending'
000012E6= 0D                       135      DC.B $D  
000012E7= 0A                       136      DC.B $A
000012E8= 09                       137      DC.B $9
000012E9= 6F 72 20 44 65 73 ...    138      DC.B 'or Descending order.(The size of the data to be sorted is a word)'
0000132A                           139      
0000132A                           140      
0000132A= 0D                       141      DC.B $D  
0000132B= 0A                       142      DC.B $A
0000132C= 0A                       143      DC.B $A
0000132D= 4D 4D                    144      DC.B 'MM'
0000132F= 0D                       145      DC.B $D  
00001330= 0A                       146      DC.B $A
00001331= 09                       147      DC.B $9 
00001332= 4D 4D 28 4D 45 4D ...    148      DC.B 'MM(MEMORY MODIFY)is used to display memory and,   as required, modify'
00001375= 0D                       149      DC.B $D  
00001376= 0A                       150      DC.B $A
00001377= 09                       151      DC.B $9
00001378= 64 61 74 61 20 6F ...    152      DC.B 'data or enter new data. The size (byte, word, long word) controls the'
000013BD= 0D                       153      DC.B $D  
000013BE= 0A                       154      DC.B $A
000013BF= 09                       155      DC.B $9
000013C0= 6E 75 6D 62 65 72 ...    156      DC.B 'number of bytes displayed for each address.'    
000013EB                           157      
000013EB= 0D                       158      DC.B $D  
000013EC= 0A                       159      DC.B $A
000013ED= 0A                       160      DC.B $A
000013EE= 4D 53                    161      DC.B 'MS'
000013F0= 0D                       162      DC.B $D  
000013F1= 0A                       163      DC.B $A
000013F2= 09                       164      DC.B $9 
000013F3= 54 68 65 20 4D 53 ...    165      DC.B 'The MS (Memory Set) command alters memmory by setting data into the'
00001436= 0D                       166      DC.B $D  
00001437= 0A                       167      DC.B $A
00001438= 09                       168      DC.B $9
00001439= 61 64 64 72 65 73 ...    169      DC.B 'address specified. The data can take the form of ASCII string or'
00001479= 0D                       170      DC.B $D  
0000147A= 0A                       171      DC.B $A
0000147B= 09                       172      DC.B $9
0000147C= 68 65 78 61 64 65 ...    173      DC.B 'hexadecimal data.'
0000148D                           174  
0000148D= 0D                       175      DC.B $D  
0000148E= 0A                       176      DC.B $A
0000148F= 0A                       177      DC.B $A
00001490= 42 46                    178      DC.B 'BF'
00001492= 0D                       179      DC.B $D  
00001493= 0A                       180      DC.B $A
00001494= 09                       181      DC.B $9 
00001495= 54 68 65 20 42 6C ...    182      DC.B 'The Block Fill (BF) command fills memory starting with the word'
000014D4= 0D                       183      DC.B $D  
000014D5= 0A                       184      DC.B $A
000014D6= 09                       185      DC.B $9
000014D7= 62 6F 75 6E 64 61 ...    186      DC.B 'boundary <address1> through <address2>. Both <address1> and <address2> must'
00001522= 0D                       187      DC.B $D  
00001523= 0A                       188      DC.B $A
00001524= 09                       189      DC.B $9
00001525= 62 65 20 65 76 65 ...    190      DC.B 'be even   addresses. This command only fills with a word-size (2 bytes) data'
0000156F= 0D                       191      DC.B $D  
00001570= 0A                       192      DC.B $A
00001571= 09                       193      DC.B $9
00001572= 70 61 74 74 65 72 ...    194      DC.B 'pattern. If an entire word-size data pattern is not entered, the pattern is '
000015BE= 0D                       195      DC.B $D  
000015BF= 0A                       196      DC.B $A
000015C0= 09                       197      DC.B $9
000015C1= 72 69 67 68 74 20 ...    198      DC.B 'right justified and leading zeros are inserted.'
000015F0                           199  
000015F0= 0D                       200      DC.B $D  
000015F1= 0A                       201      DC.B $A
000015F2= 0A                       202      DC.B $A
000015F3= 42 4D 4F 56              203      DC.B 'BMOV'
000015F7= 0D                       204      DC.B $D  
000015F8= 0A                       205      DC.B $A
000015F9= 09                       206      DC.B $9 
000015FA= 54 68 65 20 42 6C ...    207      DC.B 'The Block Move (BMOV) command is used to move (duplicate) blocks of'
0000163D= 0D                       208      DC.B $D  
0000163E= 0A                       209      DC.B $A
0000163F= 09                       210      DC.B $9
00001640= 6D 65 6D 6F 72 79 ...    211      DC.B 'memory from one area to another.'
00001660                           212  
00001660= 0D                       213      DC.B $D  
00001661= 0A                       214      DC.B $A
00001662= 0A                       215      DC.B $A
00001663= 42 54 53 54              216      DC.B 'BTST'
00001667= 0D                       217      DC.B $D  
00001668= 0A                       218      DC.B $A
00001669= 09                       219      DC.B $9 
0000166A= 54 68 65 20 42 6C ...    220      DC.B 'The Block Test (BT) command is a destructive test of a block of'
000016A9= 0D                       221      DC.B $D  
000016AA= 0A                       222      DC.B $A
000016AB= 09                       223      DC.B $9
000016AC= 6D 65 6D 6F 72 79 ...    224      DC.B 'memory beginning at <address1> through <address2>. If this test'
000016EB= 0D                       225      DC.B $D  
000016EC= 0A                       226      DC.B $A
000016ED= 09                       227      DC.B $9
000016EE= 72 75 6E 73 20 74 ...    228      DC.B 'runs to completion without detecting errors, and display a message'
00001730= 0D                       229      DC.B $D  
00001731= 0A                       230      DC.B $A
00001732= 09                       231      DC.B $9
00001733= 74 68 61 74 20 6E ...    232      DC.B 'that no error was detected. If memory problems are found, a message is'    
00001779= 0D                       233      DC.B $D  
0000177A= 0A                       234      DC.B $A
0000177B= 09                       235      DC.B $9
0000177C= 64 69 73 70 6C 61 ...    236      DC.B 'displayed indicating  the address, the data stored, and the data read'
000017C0= 0D                       237      DC.B $D  
000017C1= 0A                       238      DC.B $A
000017C2= 09                       239      DC.B $9
000017C3= 6F 66 20 74 68 65 ...    240      DC.B 'of the failing memory.'
000017D9                           241  
000017D9                           242   
000017D9                           243   
000017D9= 0D                       244      DC.B $D  
000017DA= 0A                       245      DC.B $A
000017DB= 0A                       246      DC.B $A
000017DC= 42 53 43 48              247      DC.B 'BSCH'
000017E0= 0D                       248      DC.B $D  
000017E1= 0A                       249      DC.B $A
000017E2= 09                       250      DC.B $9 
000017E3= 54 68 65 20 42 53 ...    251      DC.B 'The BSCH (Block   Search) command is used to search a literal string in'
00001828= 0D                       252      DC.B $D  
00001829= 0A                       253      DC.B $A
0000182A= 09                       254      DC.B $9
0000182B= 61 20 6D 65 6D 6F ...    255      DC.B 'a memory block starting at <address1> through <address2> both inclusive.'
00001873= 0D                       256      DC.B $D  
00001874= 0A                       257      DC.B $A
00001875= 09                       258      DC.B $9
00001876= 49 6E 20 42 53 43 ...    259      DC.B 'In BSCH command, if search finds matching data, the data and address(es)'
000018BE= 0D                       260      DC.B $D  
000018BF= 0A                       261      DC.B $A
000018C0= 09                       262      DC.B $9
000018C1= 6D 75 73 74 20 62 ...    263      DC.B 'must be displayed.' 
000018D3                           264  
000018D3                           265  
000018D3= 0D                       266      DC.B $D  
000018D4= 0A                       267      DC.B $A
000018D5= 0A                       268      DC.B $A
000018D6= 47 4F                    269      DC.B 'GO'
000018D8= 0D                       270      DC.B $D  
000018D9= 0A                       271      DC.B $A
000018DA= 09                       272      DC.B $9 
000018DB= 54 68 65 20 47 4F ...    273      DC.B 'The GO command is used to start execution from a given address.'
0000191A                           274  
0000191A= 0D                       275      DC.B $D  
0000191B= 0A                       276      DC.B $A
0000191C= 0A                       277      DC.B $A
0000191D= 44 46                    278      DC.B 'DF'
0000191F= 0D                       279      DC.B $D  
00001920= 0A                       280      DC.B $A
00001921= 09                       281      DC.B $9 
00001922= 54 68 65 20 44 69 ...    282      DC.B 'The Display Formatted Registers(DF) command is used to display'
00001960= 0D                       283      DC.B $D  
00001961= 0A                       284      DC.B $A
00001962= 09                       285      DC.B $9
00001963= 74 68 65 20 4D 43 ...    286      DC.B 'the MC68000 processor registers. This command should display current'
000019A7= 0D                       287      DC.B $D  
000019A8= 0A                       288      DC.B $A
000019A9= 09                       289      DC.B $9
000019AA= 50 43 2C 20 53 52 ...    290      DC.B 'PC, SR,   US, SS and D, A registers.'
000019CC                           291      
000019CC= 0D                       292      DC.B $D  
000019CD= 0A                       293      DC.B $A
000019CE= 0A                       294      DC.B $A
000019CF= 45 58 49 54              295      DC.B 'EXIT'
000019D3= 0D                       296      DC.B $D  
000019D4= 0A                       297      DC.B $A
000019D5= 09                       298      DC.B $9 
000019D6= 54 68 65 20 45 58 ...    299      DC.B 'The EXIT command terminates/exits your MONITOR program'
00001A0C                           300  
00001A0C                           301   
00001A0C= 00                       302      DC.B 0
00001A0D                           303  
00001A0D                           304  
00001A0D                           305      
00002000                           306      ORG    $2000
00002000                           307      
00002000                           308  START:                  ; first instruction of program
00002000                           309  
00002000                           310  
00002000                           311  pSTART   
00002000  227C 00001000            312      MOVEA.L #PROMPT,A1 
00002006  103C 000E                313      MOVE.B #14,D0
0000200A  4E4F                     314      TRAP #15
0000200C  43F8 4000                315      LEA $4000,A1
00002010  103C 0002                316      MOVE.B #2,D0
00002014  4E4F                     317      TRAP #15
00002016                           318      
00002016                           319      
00002016                           320      *COMPARING INPUT TO THE MENU ITEMS*
00002016  207C 0000102D            321      MOVE.L #HELPPROMPT,A0
0000201C  4283                     322      CLR.L D3 ;COUNTER FOR REVERSING A1 TO USER INPUT
0000201E                           323  COMPAREHELP
0000201E  5283                     324      ADD.L #1,D3
00002020  B308                     325      CMPM.B (A0)+,(A1)+
00002022  6600 000E                326      BNE COMPAREMDSP
00002026  0C28 0000 FFFF           327      CMPI.B #00,-1(A0)   ;CHECK IF THE BYTE JUST COMPARED WAS NULL TERMINATOR
0000202C  66F0                     328      BNE COMPAREHELP
0000202E  6100 0352                329      BSR HELPFUNCTION 
00002032                           330  
00002032                           331  COMPAREMDSP
00002032  93C3                     332      SUB.L D3,A1
00002034  4283                     333      CLR.L D3
00002036  207C 00001032            334      MOVE.L #MDSPPROMPT,A0
0000203C                           335  COMPAREMDSP2
0000203C  5283                     336      ADD.L #1,D3
0000203E  B308                     337      CMPM.B (A0)+,(A1)+
00002040  6600 0032                338      BNE COMPARESORTW
00002044  0C28 0020 FFFF           339      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000204A  66F0                     340      BNE COMPAREMDSP2
0000204C                           341      ;CHECK FOR THE ARGUMENTS
0000204C  4284                     342      CLR.L D4 ;FIRST ARG
0000204E  4285                     343      CLR.L D5 ;SECOND ARG
00002050                           344  CMPMDSPL1
00002050  D819                     345      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002052  0C11 0000                346      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002056  6700 033A                347      BEQ MDSPFUNCTION1 ;FUNCTION FOR 1 ARG
0000205A  0C11 0020                348      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000205E  6700 0006                349      BEQ CMPMDSPL2
00002062  E18C                     350      LSL.L #8,D4
00002064  61EA                     351      BSR CMPMDSPL1
00002066                           352  CMPMDSPL2
00002066  DA19                     353      ADD.B (A1)+,D5   ; MOVE THE SECOND MEMORY LOCATION NUMBER TO D5
00002068  0C11 0000                354      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000206C  6700 0394                355      BEQ MDSPFUNCTION2 ;FUNCTION FOR 2 ARG
00002070  E18D                     356      LSL.L #8,D5
00002072  61F2                     357      BSR CMPMDSPL2
00002074                           358      
00002074                           359     
00002074                           360  COMPARESORTW   ;3 arguments, d4 is start,d5 is end, d6 is the ascending or descending
00002074  93C3                     361      SUB.L D3,A1
00002076  4283                     362      CLR.L D3
00002078  207C 00001037            363      MOVE.L #SORTWPROMPT,A0
0000207E                           364  COMPARESORTW2
0000207E  5283                     365      ADD.L #1,D3
00002080  B308                     366      CMPM.B (A0)+,(A1)+
00002082  6600 0054                367      BNE COMPAREMM
00002086  0C28 0020 FFFF           368      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000208C  66F0                     369      BNE COMPARESORTW2
0000208E                           370     ;CHECK FOR THE ARGUMENTS
0000208E  4284                     371      CLR.L D4 ;FIRST ARG
00002090  4285                     372      CLR.L D5 ;SECOND ARG
00002092  4286                     373      CLR.L D6 ;THIRD ARG
00002094                           374  CMPSORTWL1
00002094  D819                     375      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002096  0C11 0000                376      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000209A  6700 02D6                377      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000209E  0C11 0020                378      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000020A2  6700 0006                379      BEQ CMPSORTWL2
000020A6  E18C                     380      LSL.L #8,D4
000020A8  60EA                     381      BRA CMPSORTWL1
000020AA                           382  CMPSORTWL2
000020AA  DA19                     383      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000020AC  0C11 0000                384      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000020B0  6700 02C0                385      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000020B4  0C11 0020                386      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000020B8  6700 0006                387      BEQ CMPSORTWL3
000020BC  E18D                     388      LSL.L #8,D5
000020BE  60EA                     389      BRA CMPSORTWL2
000020C0                           390  CMPSORTWL3
000020C0  DC29 0001                391      ADD.B 1(A1),D6   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
000020C4  BC3C 0041                392      CMP.B #'A',D6  ;COMPARING LAST PART TO a or l
000020C8  6700 03AA                393      BEQ SORTWFUNCTION ;FUNCTION 
000020CC  BC3C 0044                394      CMP.B #'D',D6 
000020D0  6700 03A2                395      BEQ SORTWFUNCTION ;FUNCTION
000020D4                           396      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
000020D4  6000 029C                397      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
000020D8                           398  
000020D8                           399  
000020D8                           400  COMPAREMM
000020D8  93C3                     401      SUB.L D3,A1
000020DA  4283                     402      CLR.L D3
000020DC  207C 0000103D            403      MOVE.L #MMPROMPT,A0
000020E2                           404  COMPAREMM2
000020E2  5283                     405      ADD.L #1,D3
000020E4  B308                     406      CMPM.B (A0)+,(A1)+
000020E6  6600 0044                407      BNE COMPAREMS
000020EA  0C28 0020 FFFF           408      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000020F0  66F0                     409      BNE COMPAREMM2
000020F2                           410     ;CHECK FOR THE ARGUMENTS
000020F2  4284                     411      CLR.L D4 ;FIRST ARG
000020F4  4285                     412      CLR.L D5 ;SECOND ARG
000020F6                           413  CMPMML1
000020F6  D819                     414      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
000020F8  0C11 0000                415      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000020FC  6700 0274                416      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002100  0C11 0020                417      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002104  6700 0006                418      BEQ CMPMML2
00002108  E18C                     419      LSL.L #8,D4
0000210A  61EA                     420      BSR CMPMML1
0000210C                           421  CMPMML2
0000210C  DA29 0001                422      ADD.B 1(A1),D5   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
00002110  BA3C 0042                423      CMP.B #'B',D5  ;COMPARING LAST PART TO B,W OR L
00002114  6700 036E                424      BEQ MMFUNCTION ;FUNCTION 
00002118  BA3C 0057                425      CMP.B #'W',D5 
0000211C  6700 0366                426      BEQ MMFUNCTION ;FUNCTION
00002120  BA3C 004C                427      CMP.B #'L',D5  
00002124  6700 035E                428      BEQ MMFUNCTION ;FUNCTION
00002128                           429      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
00002128  6000 0248                430      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
0000212C                           431  
0000212C                           432  
0000212C                           433  COMPAREMS ;SEND 3 ARGUMENTS, D4 IS MEMLOC, D5 IS DATA, D6 IS ASCII OR HEX
0000212C  93C3                     434      SUB.L D3,A1
0000212E  4283                     435      CLR.L D3
00002130  207C 00001040            436      MOVE.L #MSPROMPT,A0
00002136                           437  COMPAREMS2
00002136  5283                     438      ADD.L #1,D3
00002138  B308                     439      CMPM.B (A0)+,(A1)+
0000213A  6600 0054                440      BNE COMPAREBF
0000213E  0C28 0020 FFFF           441      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002144  66F0                     442      BNE COMPAREMS2
00002146                           443     ;CHECK FOR THE ARGUMENTS
00002146  4284                     444      CLR.L D4 ;FIRST ARG
00002148  4285                     445      CLR.L D5 ;SECOND ARG
0000214A  4286                     446      CLR.L D6 ;THIRD ARG
0000214C                           447  CMPMSL1
0000214C  D819                     448      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
0000214E  0C11 0000                449      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002152  6700 021E                450      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002156  0C11 0020                451      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000215A  6700 0006                452      BEQ CMPMSL2
0000215E  E18C                     453      LSL.L #8,D4
00002160  60EA                     454      BRA CMPMSL1
00002162                           455  CMPMSL2
00002162  DA19                     456      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002164  0C11 0000                457      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002168  6700 0208                458      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000216C  0C11 0020                459      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002170  6700 0006                460      BEQ CMPMSL3
00002174  E18D                     461      LSL.L #8,D5
00002176  60EA                     462      BRA CMPMSL2
00002178                           463  CMPMSL3
00002178  DC29 0001                464      ADD.B 1(A1),D6   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
0000217C  BC3C 0048                465      CMP.B #'H',D6  ;COMPARING LAST PART TO B,W OR L
00002180  6700 0500                466      BEQ MSFUNCTION ;FUNCTION 
00002184  BC3C 0041                467      CMP.B #'A',D6 
00002188  6700 04F8                468      BEQ MSFUNCTION ;FUNCTION
0000218C                           469      ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
0000218C  6000 01E4                470      BRA FAIL ;IF END IS NOT EQUAL FAIL AND EXIT
00002190                           471  
00002190                           472  
00002190                           473  COMPAREBF ;D4 IS BEGGINING ADDRESS, D5 IS END ADDRESS, D6 IS THE WORD DATA TO BE STORED
00002190  93C3                     474      SUB.L D3,A1
00002192  4283                     475      CLR.L D3
00002194  207C 00001043            476      MOVE.L #BFPROMPT,A0
0000219A                           477  COMPAREBF2
0000219A  5283                     478      ADD.L #1,D3
0000219C  B308                     479      CMPM.B (A0)+,(A1)+
0000219E  6600 0052                480      BNE COMPAREBMOV
000021A2  0C28 0020 FFFF           481      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000021A8  66F0                     482      BNE COMPAREBF2
000021AA                           483     ;CHECK FOR THE ARGUMENTS
000021AA  4284                     484      CLR.L D4 ;FIRST ARG
000021AC  4285                     485      CLR.L D5 ;SECOND ARG
000021AE  4286                     486      CLR.L D6 ;THIRD ARG
000021B0                           487  CMPBFL1
000021B0  D819                     488      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
000021B2  0C11 0000                489      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021B6  6700 01BA                490      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000021BA  0C11 0020                491      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021BE  6700 0006                492      BEQ CMPBFL2
000021C2  E18C                     493      LSL.L #8,D4
000021C4  60EA                     494      BRA CMPBFL1
000021C6                           495  CMPBFL2
000021C6  DA19                     496      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000021C8  0C11 0000                497      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021CC  6700 01A4                498      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
000021D0  0C11 0020                499      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021D4  6700 0006                500      BEQ CMPBFL3
000021D8  E18D                     501      LSL.L #8,D5
000021DA  60EA                     502      BRA CMPBFL2
000021DC                           503  CMPBFL3
000021DC  DC19                     504      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000021DE  0C11 0000                505      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000021E2  6700 04C6                506      BEQ BFFUNCTION ;FAILS IF NO MEM IS GIVEN
000021E6  0C11 0020                507      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000021EA  6700 0186                508      BEQ FAIL
000021EE  E18E                     509      LSL.L #8,D6
000021F0  60EA                     510      BRA CMPBFL3
000021F2                           511  
000021F2                           512  COMPAREBMOV ;D4 IS THE START OF MOV, D5 IS THE END OF MOV, D6 IS THE DESTINATION OF THE MOVE
000021F2  93C3                     513      SUB.L D3,A1
000021F4  4283                     514      CLR.L D3
000021F6  207C 00001046            515      MOVE.L #BMOVPROMPT,A0
000021FC                           516  COMPAREBMOV2
000021FC  5283                     517      ADD.L #1,D3
000021FE  B308                     518      CMPM.B (A0)+,(A1)+
00002200  6600 0052                519      BNE COMPAREBTST
00002204  0C28 0020 FFFF           520      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000220A  66F0                     521      BNE COMPAREBMOV2
0000220C                           522     ;CHECK FOR THE ARGUMENTS
0000220C  4284                     523      CLR.L D4 ;FIRST ARG
0000220E  4285                     524      CLR.L D5 ;SECOND ARG
00002210  4286                     525      CLR.L D6 ;THIRD ARG
00002212                           526  CMPBMOVL1
00002212  D819                     527      ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
00002214  0C11 0000                528      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002218  6700 0158                529      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
0000221C  0C11 0020                530      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002220  6700 0006                531      BEQ CMPBMOVL2
00002224  E18C                     532      LSL.L #8,D4
00002226  60EA                     533      BRA CMPBMOVL1
00002228                           534  CMPBMOVL2
00002228  DA19                     535      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
0000222A  0C11 0000                536      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
0000222E  6700 0142                537      BEQ FAIL ;FAILS IF NO MEM IS GIVEN
00002232  0C11 0020                538      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002236  6700 0006                539      BEQ CMPBMOVL3
0000223A  E18D                     540      LSL.L #8,D5
0000223C  60EA                     541      BRA CMPBMOVL2
0000223E                           542  CMPBMOVL3
0000223E  DC19                     543      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
00002240  0C11 0000                544      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002244  6700 0486                545      BEQ BMOVFUNCTION
00002248                           546   ;FAILS IF NO MEM IS GIVEN
00002248  0C11 0020                547      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000224C  6700 0124                548      BEQ FAIL
00002250  E18E                     549      LSL.L #8,D6
00002252  60EA                     550      BRA CMPBMOVL3
00002254                           551      
00002254                           552      
00002254                           553  COMPAREBTST  ;D4 IS START D5 IS END
00002254  93C3                     554      SUB.L D3,A1
00002256  4283                     555      CLR.L D3
00002258  207C 0000104B            556      MOVE.L #BTSTPROMPT,A0
0000225E                           557  COMPAREBTST2
0000225E  5283                     558      ADD.L #1,D3
00002260  B308                     559      CMPM.B (A0)+,(A1)+
00002262  6600 003A                560      BNE COMPAREBSCH
00002266  0C28 0020 FFFF           561      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
0000226C  66F0                     562      BNE COMPAREBTST2
0000226E                           563     ;CHECK FOR THE ARGUMENTS
0000226E  4284                     564      CLR.L D4 ;FIRST ARG
00002270  4285                     565      CLR.L D5 ;SECOND ARG
00002272                           566  
00002272                           567  CMPBTSTL1
00002272  D819                     568      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
00002274  0C11 0000                569      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002278  6700 00F8                570      BEQ FAIL        ;FAILS IF NO MEM IS GIVEN
0000227C  0C11 0020                571      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
00002280  6700 0006                572      BEQ CMPBTSTL2
00002284  E18C                     573      LSL.L #8,D4
00002286  60EA                     574      BRA CMPBTSTL1
00002288                           575  CMPBTSTL2
00002288  DA19                     576      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
0000228A  0C11 0000                577      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
0000228E  6700 045E                578      BEQ BTSTFUNCTION         ;FAILS IF NO MEM IS GIVEN
00002292  0C11 0020                579      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
00002296  6700 00DA                580      BEQ FAIL
0000229A  E18D                     581      LSL.L #8,D5
0000229C  60EA                     582      BRA CMPBTSTL2
0000229E                           583  
0000229E                           584  COMPAREBSCH  ;D4 GIVES START ADDRESS, D5 GIVES END ADDRESS, D6 GIVES THE WORD BEING SEARCHED
0000229E  93C3                     585      SUB.L D3,A1
000022A0  4283                     586      CLR.L D3
000022A2  207C 00001050            587      MOVE.L #BSCHPROMPT,A0
000022A8                           588  COMPAREBSCH2
000022A8  5283                     589      ADD.L #1,D3
000022AA  B308                     590      CMPM.B (A0)+,(A1)+
000022AC  6600 0052                591      BNE COMPAREGO
000022B0  0C28 0020 FFFF           592      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
000022B6  66F0                     593      BNE COMPAREBSCH2
000022B8                           594     ;CHECK FOR THE ARGUMENTS
000022B8  4284                     595      CLR.L D4 ;FIRST ARG
000022BA  4285                     596      CLR.L D5 ;SECOND ARG
000022BC  4286                     597      CLR.L D6 ;THIRD ARG
000022BE                           598  CMPBSCHL1
000022BE  D819                     599      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
000022C0  0C11 0000                600      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
000022C4  6700 00AC                601      BEQ FAIL        ;FAILS IF NO MEM IS GIVEN
000022C8  0C11 0020                602      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
000022CC  6700 0006                603      BEQ CMPBSCHL2
000022D0  E18C                     604      LSL.L #8,D4
000022D2  60EA                     605      BRA CMPBSCHL1
000022D4                           606  CMPBSCHL2
000022D4  DA19                     607      ADD.B (A1)+,D5   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000022D6  0C11 0000                608      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
000022DA  6700 0096                609      BEQ FAIL         ;FAILS IF NO MEM IS GIVEN
000022DE  0C11 0020                610      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
000022E2  6700 0006                611      BEQ CMPBSCHL3
000022E6  E18D                     612      LSL.L #8,D5
000022E8  60EA                     613      BRA CMPBSCHL2
000022EA                           614  CMPBSCHL3
000022EA  DC19                     615      ADD.B (A1)+,D6   ; MOVE THE MEMORY LOCATION NUMBER TO D5
000022EC  0C11 0000                616      CMPI.B #0,(A1)   ;COMPARING LAST PART TO EMPTY STRNG
000022F0  6700 0508                617      BEQ BSCHFUNCTION
000022F4                           618                       ;FAILS IF NO MEM IS GIVEN
000022F4  0C11 0020                619      CMPI.B #32,(A1)  ;COMPARING LAST PART TO SPACE
000022F8  6700 0078                620      BEQ FAIL
000022FC  E18E                     621      LSL.L #8,D6
000022FE  60EA                     622      BRA CMPBSCHL3
00002300                           623  
00002300                           624  COMPAREGO ;D4 IS THE ARGUMENT TO GET TO THE MEMLOC
00002300  93C3                     625      SUB.L D3,A1
00002302  4283                     626      CLR.L D3
00002304  207C 00001055            627      MOVE.L #GOPROMPT,A0
0000230A                           628  COMPAREGO2
0000230A  5283                     629      ADD.L #1,D3
0000230C  B308                     630      CMPM.B (A0)+,(A1)+
0000230E  6600 0026                631      BNE COMPAREDF
00002312  0C28 0020 FFFF           632      CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
00002318  66F0                     633      BNE COMPAREGO2
0000231A                           634     ;CHECK FOR THE ARGUMENTS
0000231A  4284                     635      CLR.L D4 ;FIRST ARG
0000231C  4285                     636      CLR.L D5 ;SECOND ARG
0000231E  4286                     637      CLR.L D6 ;THIRD ARG
00002320                           638  CMPGOL1
00002320  D819                     639      ADD.B (A1)+,D4  ; MOVE THE START MEMORY LOCATION NUMBER TO D4
00002322  0C11 0000                640      CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
00002326  6700 059A                641      BEQ GOFUNCTION  ;FAILS IF NO MEM IS GIVEN
0000232A  0C11 0020                642      CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
0000232E  6700 0042                643      BEQ FAIL
00002332  E18C                     644      LSL.L #8,D4
00002334  60EA                     645      BRA CMPGOL1
00002336                           646  
00002336                           647  COMPAREDF
00002336  93C3                     648      SUB.L D3,A1
00002338  4283                     649      CLR.L D3
0000233A  207C 00001058            650      MOVE.L #DFPROMPT,A0
00002340                           651  COMPAREDF2
00002340  5283                     652      ADD.L #1,D3
00002342  B308                     653      CMPM.B (A0)+,(A1)+
00002344  6600 000E                654      BNE COMPAREEXIT
00002348  0C28 0000 FFFF           655      CMPI.B #0,-1(A0)
0000234E  66F0                     656      BNE COMPAREDF2
00002350  6100 0580                657      BSR DFFUNCTION ;CHANGE THIS WHEN YOU IMPLEMENT THE FUNCTION
00002354                           658  
00002354                           659      
00002354                           660  COMPAREEXIT
00002354  93C3                     661      SUB.L D3,A1
00002356  4283                     662      CLR.L D3
00002358  207C 0000105B            663      MOVE.L #EXITPROMPT,A0
0000235E                           664  COMPAREEXIT2
0000235E  5283                     665      ADD.L #1,D3
00002360  B308                     666      CMPM.B (A0)+,(A1)+
00002362  6600 000E                667      BNE FAIL
00002366  0C28 0000 FFFF           668      CMPI.B #0,-1(A0)
0000236C  66F0                     669      BNE COMPAREEXIT2
0000236E  6100 0572                670      BSR EXITFUNCTION 
00002372                           671      
00002372                           672      
00002372                           673      
00002372                           674  *WHEN INPUT DOESNT FIT THE CRITERIA*    
00002372                           675  FAIL
00002372  227C 0000100D            676      MOVEA.L #NOPROMPT,A1     
00002378  103C 000D                677      MOVE.B #13,D0
0000237C  4E4F                     678      TRAP #15
0000237E  6000 FC80                679      BRA pSTART
00002382                           680        
00002382                           681  HELPFUNCTION
00002382  227C 000010DC            682      MOVEA.L #HELP,A1     
00002388  103C 000D                683      MOVE.B #13,D0
0000238C  4E4F                     684      TRAP #15
0000238E  6000 FC70                685      BRA pSTART
00002392                           686      
00002392                           687  MDSPFUNCTION1 ;argument passed as D4, PRINT FROM D4 TO D5
00002392                           688      ;MOVE.L #$2000,D4
00002392  6100 0626                689      BSR ASCIITOHEX
00002396                           690      ;DISPLAY EVERYTHIGN FROM D4 FOR NOW 2000 TO 2016\
00002396  2644                     691      MOVE.L D4,A3
00002398  D7FC 00000010            692      ADD.L #$10,A3 ;ENDING 
0000239E  2444                     693      MOVE.L D4,A2 ;BEGGINING
000023A0                           694  MDSPFUNCTION1L1 
000023A0                           695      ;PRINT MEMLOC
000023A0  220A                     696      MOVE.L A2,D1
000023A2  6100 0544                697      BSR HEXTOASCII 
000023A6                           698       
000023A6  4841                     699      SWAP D1
000023A8                           700      
000023A8  E159                     701      ROL #8,D1
000023AA  103C 0006                702      MOVE.B #6,D0
000023AE  4E4F                     703      TRAP #15
000023B0                           704      
000023B0  E159                     705      ROL #8,D1
000023B2  103C 0006                706      MOVE.B #6,D0
000023B6  4E4F                     707      TRAP #15
000023B8                           708      
000023B8  4841                     709      SWAP D1
000023BA  E159                     710      ROL #8,D1
000023BC  103C 0006                711      MOVE.B #6,D0
000023C0  4E4F                     712      TRAP #15
000023C2                           713      
000023C2  E159                     714      ROL #8,D1
000023C4  103C 0006                715      MOVE.B #6,D0
000023C8  4E4F                     716      TRAP #15
000023CA                           717  
000023CA                           718      
000023CA                           719      ;PRINT SEMICOLON
000023CA  227C 00001060            720      MOVEA.L #SEMICOLONSEP,A1     
000023D0  103C 000E                721      MOVE.B #14,D0
000023D4  4E4F                     722      TRAP #15
000023D6                           723      
000023D6                           724      ;PRINT CONTENT
000023D6  4281                     725      CLR.L D1
000023D8  121A                     726      MOVE.B (A2)+,D1
000023DA  6100 050C                727      BSR HEXTOASCII 
000023DE                           728       
000023DE                           729      
000023DE  E059                     730      ROR #8,D1
000023E0  103C 0006                731      MOVE.B #6,D0
000023E4  4E4F                     732      TRAP #15
000023E6                           733      
000023E6  E059                     734      ROR #8,D1
000023E8  103C 0006                735      MOVE.B #6,D0
000023EC  4E4F                     736      TRAP #15
000023EE                           737      
000023EE                           738      ;PRINT empty space
000023EE  227C 00001064            739      MOVEA.L #SPACE,A1     
000023F4  103C 000D                740      MOVE.B #13,D0
000023F8  4E4F                     741      TRAP #15
000023FA                           742      
000023FA                           743      
000023FA  B7CA                     744      CMPA.L A2,A3
000023FC  6EA2                     745      BGT MDSPFUNCTION1L1
000023FE                           746      
000023FE                           747  
000023FE                           748      
000023FE  6000 FC00                749      BRA pSTART
00002402                           750  
00002402                           751  MDSPFUNCTION2 ;argument passed as D4, PRINT FROM D4 TO D5
00002402  6100 05B6                752      BSR ASCIITOHEX
00002406                           753      ;DISPLAY EVERYTHIGN FROM D4 TO D5\
00002406  2444                     754      MOVE.L D4,A2 ;BEGGINING
00002408  2805                     755      MOVE.L D5,D4
0000240A  6100 05AE                756      BSR ASCIITOHEX
0000240E  2644                     757      MOVE.L D4,A3 ;ENDING
00002410  528B                     758      ADD.L #1,A3
00002412                           759  MDSPFUNCTION2L1 
00002412                           760    ;PRINT MEMLOC
00002412  220A                     761      MOVE.L A2,D1
00002414  6100 04D2                762      BSR HEXTOASCII 
00002418                           763       
00002418  4841                     764      SWAP D1
0000241A                           765      
0000241A  E159                     766      ROL #8,D1
0000241C  103C 0006                767      MOVE.B #6,D0
00002420  4E4F                     768      TRAP #15
00002422                           769      
00002422  E159                     770      ROL #8,D1
00002424  103C 0006                771      MOVE.B #6,D0
00002428  4E4F                     772      TRAP #15
0000242A                           773      
0000242A  4841                     774      SWAP D1
0000242C  E159                     775      ROL #8,D1
0000242E  103C 0006                776      MOVE.B #6,D0
00002432  4E4F                     777      TRAP #15
00002434                           778      
00002434  E159                     779      ROL #8,D1
00002436  103C 0006                780      MOVE.B #6,D0
0000243A  4E4F                     781      TRAP #15
0000243C                           782  
0000243C                           783      
0000243C                           784      ;PRINT SEMICOLON
0000243C  227C 00001060            785      MOVEA.L #SEMICOLONSEP,A1     
00002442  103C 000E                786      MOVE.B #14,D0
00002446  4E4F                     787      TRAP #15
00002448                           788      
00002448                           789      ;PRINT CONTENT
00002448  4281                     790      CLR.L D1
0000244A  121A                     791      MOVE.B (A2)+,D1
0000244C  6100 049A                792      BSR HEXTOASCII 
00002450                           793       
00002450                           794      
00002450  E059                     795      ROR #8,D1
00002452  103C 0006                796      MOVE.B #6,D0
00002456  4E4F                     797      TRAP #15
00002458                           798      
00002458  E059                     799      ROR #8,D1
0000245A  103C 0006                800      MOVE.B #6,D0
0000245E  4E4F                     801      TRAP #15
00002460                           802      
00002460                           803      ;PRINT empty space
00002460  227C 00001064            804      MOVEA.L #SPACE,A1     
00002466  103C 000D                805      MOVE.B #13,D0
0000246A  4E4F                     806      TRAP #15
0000246C                           807      
0000246C                           808      
0000246C  B7CA                     809      CMPA.L A2,A3
0000246E  6EA2                     810      BGT MDSPFUNCTION2L1
00002470                           811      
00002470                           812  
00002470                           813      
00002470  6000 FB8E                814      BRA pSTART
00002474                           815  
00002474                           816  
00002474                           817  
00002474                           818  SORTWFUNCTION ;argument passed as D4 AS MEMLOC AND d5 AS THE MODE
00002474  227C 00001037            819      MOVEA.L #SORTWPROMPT,A1     
0000247A  103C 000D                820      MOVE.B #13,D0
0000247E  4E4F                     821      TRAP #15
00002480  6000 FB7E                822      BRA pSTART
00002484                           823  
00002484                           824  ;CURRENTLY ONLY FOR W, WORK ON B AND L 
00002484                           825  MMFUNCTION ;argument passed as D4 AS MEMLOC AND d5 AS THE MODE
00002484  6100 0534                826      BSR ASCIITOHEX
00002488                           827      ;DISPLAY EVERYTHIGN FROM D4 TO D5\
00002488  2444                     828      MOVE.L D4,A2 ;BEGGINING
0000248A                           829      ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
0000248A  BA3C 0042                830      CMP.B #'B',D5 
0000248E  6700 0012                831      BEQ MMFUNCTIONL1 ;FUNCTION 
00002492  BA3C 0057                832      CMP.B #'W',D5 
00002496  6700 0088                833      BEQ MMFUNCTIONL2 ;FUNCTION
0000249A  BA3C 004C                834      CMP.B #'L',D5  
0000249E  6700 0116                835      BEQ MMFUNCTIONL3 ;FUNCTION
000024A2                           836  MMFUNCTIONL1 
000024A2                           837    ;PRINT MEMLOC
000024A2  220A                     838      MOVE.L A2,D1
000024A4  6100 0442                839      BSR HEXTOASCII 
000024A8                           840       
000024A8  4841                     841      SWAP D1
000024AA                           842      
000024AA  E159                     843      ROL #8,D1
000024AC  103C 0006                844      MOVE.B #6,D0
000024B0  4E4F                     845      TRAP #15
000024B2  E159                     846      ROL #8,D1
000024B4  103C 0006                847      MOVE.B #6,D0
000024B8  4E4F                     848      TRAP #15
000024BA                           849      
000024BA  4841                     850      SWAP D1
000024BC  E159                     851      ROL #8,D1
000024BE  103C 0006                852      MOVE.B #6,D0
000024C2  4E4F                     853      TRAP #15
000024C4                           854      
000024C4  E159                     855      ROL #8,D1
000024C6  103C 0006                856      MOVE.B #6,D0
000024CA  4E4F                     857      TRAP #15
000024CC                           858  
000024CC                           859      
000024CC                           860      ;PRINT SEMICOLON
000024CC  227C 00001060            861      MOVEA.L #SEMICOLONSEP,A1     
000024D2  103C 000E                862      MOVE.B #14,D0
000024D6  4E4F                     863      TRAP #15
000024D8                           864      
000024D8                           865      ;PRINT CONTENT
000024D8  4281                     866      CLR.L D1
000024DA  121A                     867      MOVE.B (A2)+,D1
000024DC  6100 040A                868      BSR HEXTOASCII 
000024E0                           869       
000024E0                           870      
000024E0  E059                     871      ROR #8,D1
000024E2  103C 0006                872      MOVE.B #6,D0
000024E6  4E4F                     873      TRAP #15
000024E8                           874      
000024E8  E059                     875      ROR #8,D1
000024EA  103C 0006                876      MOVE.B #6,D0
000024EE  4E4F                     877      TRAP #15
000024F0                           878      
000024F0                           879      ;PRINT LINEPROMPT,
000024F0  227C 00001066            880      MOVEA.L #LINEPROMPT,A1     
000024F6  103C 000E                881      MOVE.B #14,D0
000024FA  4E4F                     882      TRAP #15
000024FC                           883      
000024FC                           884      
000024FC                           885      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
000024FC  43F8 5000                886      LEA $5000,A1
00002500  103C 0002                887      MOVE.B #2,D0
00002504  4E4F                     888      TRAP #15
00002506                           889      
00002506                           890      
00002506                           891      *COMPARING INPUT TO THE MENU ITEMS*
00002506                           892      ;COMPARING TO DOT
00002506  0C11 002E                893      CMP.B #$2E,(A1) ;2E IS THE DOT
0000250A  6700 FAF4                894      BEQ pSTART ;if input is dot exit
0000250E                           895      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
0000250E  0C11 0000                896      CMP.B #00,(A1)
00002512  678E                     897      BEQ MMFUNCTIONL1
00002514                           898      
00002514                           899      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
00002514  3811                     900      MOVE.W (A1),D4
00002516  6100 04A2                901      BSR ASCIITOHEX
0000251A  1544 FFFF                902      MOVE.B D4,-1(A2)
0000251E  6082                     903      BRA MMFUNCTIONL1
00002520                           904  
00002520                           905  MMFUNCTIONL2 ;FOR WORD OPERATION MM
00002520                           906      ;PRINT MEMLOC
00002520  220A                     907      MOVE.L A2,D1
00002522  6100 03C4                908      BSR HEXTOASCII 
00002526                           909       
00002526  4841                     910      SWAP D1
00002528                           911      
00002528  E159                     912      ROL #8,D1
0000252A  103C 0006                913      MOVE.B #6,D0
0000252E  4E4F                     914      TRAP #15
00002530  E159                     915      ROL #8,D1
00002532  103C 0006                916      MOVE.B #6,D0
00002536  4E4F                     917      TRAP #15
00002538                           918      
00002538  4841                     919      SWAP D1
0000253A  E159                     920      ROL #8,D1
0000253C  103C 0006                921      MOVE.B #6,D0
00002540  4E4F                     922      TRAP #15
00002542                           923      
00002542  E159                     924      ROL #8,D1
00002544  103C 0006                925      MOVE.B #6,D0
00002548  4E4F                     926      TRAP #15
0000254A                           927  
0000254A                           928      
0000254A                           929      ;PRINT SEMICOLON
0000254A  227C 00001060            930      MOVEA.L #SEMICOLONSEP,A1     
00002550  103C 000E                931      MOVE.B #14,D0
00002554  4E4F                     932      TRAP #15
00002556                           933      
00002556                           934      ;PRINT CONTENT
00002556  4281                     935      CLR.L D1
00002558  321A                     936      MOVE.W (A2)+,D1
0000255A  6100 038C                937      BSR HEXTOASCII 
0000255E                           938       
0000255E                           939      
0000255E  4841                     940      SWAP D1
00002560                           941      
00002560  E159                     942      ROL #8,D1
00002562  103C 0006                943      MOVE.B #6,D0
00002566  4E4F                     944      TRAP #15
00002568  E159                     945      ROL #8,D1
0000256A  103C 0006                946      MOVE.B #6,D0
0000256E  4E4F                     947      TRAP #15
00002570                           948      
00002570  4841                     949      SWAP D1
00002572  E159                     950      ROL #8,D1
00002574  103C 0006                951      MOVE.B #6,D0
00002578  4E4F                     952      TRAP #15
0000257A                           953      
0000257A  E159                     954      ROL #8,D1
0000257C  103C 0006                955      MOVE.B #6,D0
00002580  4E4F                     956      TRAP #15
00002582                           957      
00002582                           958      ;PRINT LINEPROMPT,
00002582  227C 00001066            959      MOVEA.L #LINEPROMPT,A1     
00002588  103C 000E                960      MOVE.B #14,D0
0000258C  4E4F                     961      TRAP #15
0000258E                           962      
0000258E                           963      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
0000258E  43F8 5000                964      LEA $5000,A1
00002592  103C 0002                965      MOVE.B #2,D0
00002596  4E4F                     966      TRAP #15
00002598                           967      
00002598                           968      *COMPARING INPUT TO THE MENU ITEMS*
00002598                           969      ;COMPARING TO DOT
00002598  0C11 002E                970      CMP.B #$2E,(A1) ;2E IS THE DOT
0000259C  6700 FA62                971      BEQ pSTART ;if input is dot exit
000025A0                           972      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
000025A0  0C11 0000                973      CMP.B #00,(A1)
000025A4  6700 FF7A                974      BEQ MMFUNCTIONL2
000025A8                           975      
000025A8                           976      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
000025A8  2811                     977      MOVE.L (A1),D4
000025AA  6100 040E                978      BSR ASCIITOHEX
000025AE  3544 FFFE                979      MOVE.W D4,-2(A2)
000025B2  6000 FF6C                980      BRA MMFUNCTIONL2
000025B6                           981  
000025B6                           982  
000025B6                           983  
000025B6                           984  MMFUNCTIONL3 ;FOR LONG WORD MM OPERATION
000025B6                           985      ;PRINT MEMLOC
000025B6  220A                     986      MOVE.L A2,D1
000025B8  6100 032E                987      BSR HEXTOASCII 
000025BC                           988       
000025BC  4841                     989      SWAP D1
000025BE                           990      
000025BE  E159                     991      ROL #8,D1
000025C0  103C 0006                992      MOVE.B #6,D0
000025C4  4E4F                     993      TRAP #15
000025C6  E159                     994      ROL #8,D1
000025C8  103C 0006                995      MOVE.B #6,D0
000025CC  4E4F                     996      TRAP #15
000025CE                           997      
000025CE  4841                     998      SWAP D1
000025D0  E159                     999      ROL #8,D1
000025D2  103C 0006               1000      MOVE.B #6,D0
000025D6  4E4F                    1001      TRAP #15
000025D8                          1002      
000025D8  E159                    1003      ROL #8,D1
000025DA  103C 0006               1004      MOVE.B #6,D0
000025DE  4E4F                    1005      TRAP #15
000025E0                          1006  
000025E0                          1007      
000025E0                          1008      ;PRINT SEMICOLON
000025E0  227C 00001060           1009      MOVEA.L #SEMICOLONSEP,A1     
000025E6  103C 000E               1010      MOVE.B #14,D0
000025EA  4E4F                    1011      TRAP #15
000025EC                          1012      
000025EC                          1013      ;PRINT CONTENT
000025EC  4281                    1014      CLR.L D1
000025EE  321A                    1015      MOVE.W (A2)+,D1
000025F0  6100 02F6               1016      BSR HEXTOASCII 
000025F4                          1017       
000025F4                          1018      
000025F4  4841                    1019      SWAP D1
000025F6                          1020      
000025F6  E159                    1021      ROL #8,D1
000025F8  103C 0006               1022      MOVE.B #6,D0
000025FC  4E4F                    1023      TRAP #15
000025FE  E159                    1024      ROL #8,D1
00002600  103C 0006               1025      MOVE.B #6,D0
00002604  4E4F                    1026      TRAP #15
00002606                          1027      
00002606  4841                    1028      SWAP D1
00002608  E159                    1029      ROL #8,D1
0000260A  103C 0006               1030      MOVE.B #6,D0
0000260E  4E4F                    1031      TRAP #15
00002610                          1032      
00002610  E159                    1033      ROL #8,D1
00002612  103C 0006               1034      MOVE.B #6,D0
00002616  4E4F                    1035      TRAP #15
00002618                          1036      
00002618                          1037      ;PRINT SECOND WORD
00002618                          1038      ;PRINT CONTENT
00002618  4281                    1039      CLR.L D1
0000261A  321A                    1040      MOVE.W (A2)+,D1
0000261C  6100 02CA               1041      BSR HEXTOASCII 
00002620                          1042       
00002620                          1043      
00002620  4841                    1044      SWAP D1
00002622                          1045      
00002622  E159                    1046      ROL #8,D1
00002624  103C 0006               1047      MOVE.B #6,D0
00002628  4E4F                    1048      TRAP #15
0000262A  E159                    1049      ROL #8,D1
0000262C  103C 0006               1050      MOVE.B #6,D0
00002630  4E4F                    1051      TRAP #15
00002632                          1052      
00002632  4841                    1053      SWAP D1
00002634  E159                    1054      ROL #8,D1
00002636  103C 0006               1055      MOVE.B #6,D0
0000263A  4E4F                    1056      TRAP #15
0000263C                          1057      
0000263C  E159                    1058      ROL #8,D1
0000263E  103C 0006               1059      MOVE.B #6,D0
00002642  4E4F                    1060      TRAP #15
00002644                          1061  
00002644                          1062      
00002644                          1063      
00002644                          1064      ;PRINT LINEPROMPT,
00002644  227C 00001066           1065      MOVEA.L #LINEPROMPT,A1     
0000264A  103C 000E               1066      MOVE.B #14,D0
0000264E  4E4F                    1067      TRAP #15
00002650                          1068      
00002650                          1069      ;PROMPT FOR INPUT,CONTINUE UNLESS IT IS DOT
00002650  43F8 5000               1070      LEA $5000,A1
00002654  103C 0002               1071      MOVE.B #2,D0
00002658  4E4F                    1072      TRAP #15
0000265A                          1073      
0000265A                          1074      *COMPARING INPUT TO THE MENU ITEMS*
0000265A                          1075      ;COMPARING TO DOT
0000265A  0C11 002E               1076      CMP.B #$2E,(A1) ;2E IS THE DOT
0000265E  6700 F9A0               1077      BEQ pSTART ;if input is dot exit
00002662                          1078      ;IF INPUT IS EMPTY MOVE ON TO THE NEXT BIT
00002662  0C11 0000               1079      CMP.B #00,(A1)
00002666  6700 FF4E               1080      BEQ MMFUNCTIONL3
0000266A                          1081      
0000266A                          1082      ;IF INPUT ARE NEITHER READ THE ENTERED LINE CONVERT TO HEXT AND STORE
0000266A  2819                    1083      MOVE.L (A1)+,D4
0000266C  6100 034C               1084      BSR ASCIITOHEX
00002670  3544 FFFC               1085      MOVE.W D4,-4(A2)
00002674                          1086      ;PRINT SECOND WORD
00002674  2811                    1087      MOVE.L (A1),D4
00002676  6100 0342               1088      BSR ASCIITOHEX
0000267A  3544 FFFE               1089      MOVE.W D4,-2(A2)
0000267E                          1090      
0000267E  6000 FF36               1091      BRA MMFUNCTIONL3
00002682                          1092  
00002682                          1093  
00002682                          1094  
00002682                          1095      
00002682                          1096  
00002682                          1097  MSFUNCTION   ;D4 IS ADDRESS, D5 IS DATA, D6 IS ASCII OR HEX, WORD OPERATIONS ONLY
00002682  6100 0336               1098      BSR ASCIITOHEX
00002686  2444                    1099      MOVE.L D4,A2 ;MEMLOC FOR DATA TO BE STORED
00002688                          1100      ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
00002688  BC3C 0048               1101      CMP.B #'H',D6 
0000268C  6700 000A               1102      BEQ MSFUNCTIONL1 ;FUNCTION FOR WHEN THE NUM GIVEN IS HEX
00002690  BC3C 0041               1103      CMP.B #'A',D6
00002694  6700 000E               1104      BEQ MSFUNCTIONL2 ;FUNCTION FOR WHE THE NUM GIVEN IS ASCII
00002698                          1105      
00002698                          1106  MSFUNCTIONL1
00002698  2805                    1107      MOVE.L D5,D4 
0000269A  6100 031E               1108      BSR ASCIITOHEX
0000269E  3484                    1109      MOVE.W D4,(A2)
000026A0  6000 F95E               1110      BRA pSTART
000026A4                          1111  MSFUNCTIONL2
000026A4  2485                    1112      MOVE.L D5,(A2)
000026A6  6000 F958               1113      BRA pSTART
000026AA                          1114      
000026AA                          1115      
000026AA                          1116  BFFUNCTION ;D4 IS THE START, D5 IS THE END, D6 IS THE NUMBER TO BE WRITTEN
000026AA                          1117        ;FILL EVERYTHIGN FROM D4 TO D5 WITH D6    
000026AA  6100 030E               1118      BSR ASCIITOHEX
000026AE  2444                    1119      MOVE.L D4,A2 ;BEGGINING
000026B0  2805                    1120      MOVE.L D5,D4
000026B2  6100 0306               1121      BSR ASCIITOHEX
000026B6  2644                    1122      MOVE.L D4,A3 ;ENDING
000026B8  528B                    1123      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
000026BA  2806                    1124      MOVE.L D6,D4
000026BC  6100 02FC               1125      BSR ASCIITOHEX
000026C0  2C04                    1126      MOVE.L D4,D6 ;THE VALUE TO BE ENTERED IN THE MEMORY BLOCK
000026C2                          1127  BFFUNCTIONL1 
000026C2                          1128      ;MOVE THE WORD INTO THE ADDRESS
000026C2  34C6                    1129      MOVE.W D6,(A2)+
000026C4  B7CA                    1130      CMPA.L A2,A3
000026C6  6EFA                    1131      BGT BFFUNCTIONL1
000026C8                          1132    ;WHEN DONE  
000026C8  6000 F936               1133      BRA pSTART
000026CC                          1134  
000026CC                          1135  BMOVFUNCTION ;D4 IS THE START,D5 IS THE END, D6 IS THE LOCATION WE ARE WRITING TO 
000026CC  6100 02EC               1136      BSR ASCIITOHEX
000026D0  2444                    1137      MOVE.L D4,A2 ;BEGGINING
000026D2  2805                    1138      MOVE.L D5,D4
000026D4  6100 02E4               1139      BSR ASCIITOHEX
000026D8  2644                    1140      MOVE.L D4,A3 ;ENDING
000026DA  528B                    1141      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
000026DC  2806                    1142      MOVE.L D6,D4
000026DE  6100 02DA               1143      BSR ASCIITOHEX
000026E2  2844                    1144      MOVE.L D4,A4 ;THE DESTINATION
000026E4                          1145  BMOVFUNCTIONL1 
000026E4                          1146      ;MOVE THE WORD INTO THE ADDRESS
000026E4  18DA                    1147      MOVE.B (A2)+,(A4)+
000026E6  B7CA                    1148      CMPA.L A2,A3
000026E8  6EFA                    1149      BGT BMOVFUNCTIONL1
000026EA                          1150      ;WHEN DONE  
000026EA  6000 F914               1151      BRA pSTART
000026EE                          1152  
000026EE                          1153  BTSTFUNCTION
000026EE  6100 02CA               1154      BSR ASCIITOHEX
000026F2  2444                    1155      MOVE.L D4,A2 ;BEGGINING
000026F4  2805                    1156      MOVE.L D5,D4
000026F6  6100 02C2               1157      BSR ASCIITOHEX
000026FA  2644                    1158      MOVE.L D4,A3 ;ENDING
000026FC  528B                    1159      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
000026FE  283C 0000A5A5           1160      MOVE.L #$A5A5,D4
00002704                          1161      ;DESTRUCTIVE PART SEARCH IS AT D4
00002704                          1162  BTSTFUNCTIONL1 
00002704  3484                    1163      MOVE.W D4,(A2)  ;MOVE THE WORD TO START
00002706  3A1A                    1164      MOVE.W (A2)+,D5  ;READ THE WORD
00002708  BA44                    1165      CMP.W D4,D5      
0000270A  6600 0016               1166      BNE BTSTERROR   ;IF NOT EQUAL GO TO SUBROUTINE 
0000270E  B7CA                    1167      CMPA.L A2,A3
00002710  6EF2                    1168      BGT BTSTFUNCTIONL1
00002712  227C 000010A7           1169      MOVEA.L #BTSTSUCCESS,A1     
00002718  103C 000D               1170      MOVE.B #13,D0
0000271C  4E4F                    1171      TRAP #15
0000271E  6000 F8E0               1172      BRA pSTART
00002722                          1173  BTSTERROR
00002722  227C 000010B6           1174      MOVEA.L #BTSTFAIL,A1     
00002728  103C 000D               1175      MOVE.B #13,D0
0000272C  4E4F                    1176      TRAP #15
0000272E                          1177  
0000272E                          1178      ;PRINT ADDRESSS
0000272E  227C 00001087           1179      MOVEA.L #ADDRESS,A1     
00002734  103C 000E               1180      MOVE.B #14,D0
00002738  4E4F                    1181      TRAP #15
0000273A                          1182      
0000273A  558A                    1183      SUB.L #2,A2 
0000273C                          1184      
0000273C  320A                    1185      MOVE.W A2,D1
0000273E                          1186      
0000273E  6100 01A8               1187      BSR HEXTOASCII 
00002742                          1188       
00002742  4841                    1189      SWAP D1
00002744                          1190      
00002744  E159                    1191      ROL #8,D1
00002746  103C 0006               1192      MOVE.B #6,D0
0000274A  4E4F                    1193      TRAP #15
0000274C                          1194      
0000274C  E159                    1195      ROL #8,D1
0000274E  103C 0006               1196      MOVE.B #6,D0
00002752  4E4F                    1197      TRAP #15
00002754                          1198      
00002754  4841                    1199      SWAP D1
00002756  E159                    1200      ROL #8,D1
00002758  103C 0006               1201      MOVE.B #6,D0
0000275C  4E4F                    1202      TRAP #15
0000275E                          1203      
0000275E  E159                    1204      ROL #8,D1
00002760  103C 0006               1205      MOVE.B #6,D0
00002764  4E4F                    1206      TRAP #15
00002766                          1207      
00002766                          1208      
00002766  227C 00001064           1209      MOVEA.L #SPACE,A1     
0000276C  103C 000D               1210      MOVE.B #13,D0
00002770  4E4F                    1211      TRAP #15
00002772                          1212  
00002772                          1213      ;PRINT WRITTEN DATA 
00002772  227C 000010CE           1214      MOVEA.L #DATASTORED,A1     
00002778  103C 000E               1215      MOVE.B #14,D0
0000277C  4E4F                    1216      TRAP #15
0000277E                          1217      
0000277E  3204                    1218      MOVE.W D4,D1
00002780                          1219      
00002780  6100 0166               1220      BSR HEXTOASCII 
00002784                          1221       
00002784  4841                    1222      SWAP D1
00002786                          1223      
00002786  E159                    1224      ROL #8,D1
00002788  103C 0006               1225      MOVE.B #6,D0
0000278C  4E4F                    1226      TRAP #15
0000278E                          1227      
0000278E  E159                    1228      ROL #8,D1
00002790  103C 0006               1229      MOVE.B #6,D0
00002794  4E4F                    1230      TRAP #15
00002796                          1231      
00002796  4841                    1232      SWAP D1
00002798  E159                    1233      ROL #8,D1
0000279A  103C 0006               1234      MOVE.B #6,D0
0000279E  4E4F                    1235      TRAP #15
000027A0                          1236      
000027A0  E159                    1237      ROL #8,D1
000027A2  103C 0006               1238      MOVE.B #6,D0
000027A6  4E4F                    1239      TRAP #15
000027A8                          1240      
000027A8                          1241      
000027A8  227C 00001064           1242      MOVEA.L #SPACE,A1     
000027AE  103C 000D               1243      MOVE.B #13,D0
000027B2  4E4F                    1244      TRAP #15
000027B4                          1245  
000027B4                          1246      ;PRINT DATA READ 
000027B4  227C 000010C2           1247      MOVEA.L #DATAREAD,A1     
000027BA  103C 000E               1248      MOVE.B #14,D0
000027BE  4E4F                    1249      TRAP #15
000027C0                          1250      
000027C0  3205                    1251      MOVE.W D5,D1
000027C2                          1252      
000027C2  6100 0124               1253      BSR HEXTOASCII 
000027C6                          1254       
000027C6  4841                    1255      SWAP D1
000027C8                          1256      
000027C8  E159                    1257      ROL #8,D1
000027CA  103C 0006               1258      MOVE.B #6,D0
000027CE  4E4F                    1259      TRAP #15
000027D0                          1260      
000027D0  E159                    1261      ROL #8,D1
000027D2  103C 0006               1262      MOVE.B #6,D0
000027D6  4E4F                    1263      TRAP #15
000027D8                          1264      
000027D8  4841                    1265      SWAP D1
000027DA  E159                    1266      ROL #8,D1
000027DC  103C 0006               1267      MOVE.B #6,D0
000027E0  4E4F                    1268      TRAP #15
000027E2                          1269      
000027E2  E159                    1270      ROL #8,D1
000027E4  103C 0006               1271      MOVE.B #6,D0
000027E8  4E4F                    1272      TRAP #15
000027EA                          1273      
000027EA                          1274      
000027EA  227C 00001064           1275      MOVEA.L #SPACE,A1     
000027F0  103C 000D               1276      MOVE.B #13,D0
000027F4  4E4F                    1277      TRAP #15
000027F6                          1278  
000027F6                          1279      
000027F6  6000 F808               1280      BRA pSTART
000027FA                          1281  
000027FA                          1282  
000027FA                          1283  
000027FA                          1284  BSCHFUNCTION ;D4 IS START ADDRESS, D5 IS END ANDRESS AND D6 IS THE ITEM WE ARE LOOKING FOR
000027FA  6100 01BE               1285      BSR ASCIITOHEX
000027FE  2444                    1286      MOVE.L D4,A2 ;BEGGINING
00002800  2805                    1287      MOVE.L D5,D4
00002802  6100 01B6               1288      BSR ASCIITOHEX
00002806  2644                    1289      MOVE.L D4,A3 ;ENDING
00002808  528B                    1290      ADD.L #1,A3 ;MAKE SURE LAST ONE IS ENTERED
0000280A  2806                    1291      MOVE.L D6,D4
0000280C  6100 01AC               1292      BSR ASCIITOHEX
00002810                          1293      ;SEARCH IS AT D4
00002810                          1294  BSCHFUNCTIONL1 
00002810                          1295      ;LOOK FOR WORD IN THE ADDRESS RANGE
00002810  3A1A                    1296      MOVE.W (A2)+,D5
00002812  BA44                    1297      CMP.W D4,D5
00002814  6700 0016               1298      BEQ BSCHEQUAL
00002818  B7CA                    1299      CMPA.L A2,A3
0000281A  6EF4                    1300      BGT BSCHFUNCTIONL1
0000281C  227C 00001099           1301      MOVEA.L #SEARCHFAIL,A1     
00002822  103C 000D               1302      MOVE.B #13,D0
00002826  4E4F                    1303      TRAP #15
00002828  6000 F7D6               1304      BRA pSTART
0000282C                          1305  BSCHEQUAL
0000282C  227C 0000106C           1306      MOVEA.L #SEARCHSUCCESS,A1     
00002832  103C 000D               1307      MOVE.B #13,D0
00002836  4E4F                    1308      TRAP #15
00002838                          1309      ;PRINT ADDRESSS
00002838  227C 00001087           1310      MOVEA.L #ADDRESS,A1     
0000283E  103C 000E               1311      MOVE.B #14,D0
00002842  4E4F                    1312      TRAP #15
00002844                          1313      
00002844  558A                    1314      SUB.L #2,A2 
00002846                          1315      
00002846  320A                    1316      MOVE.W A2,D1
00002848                          1317      
00002848  6100 009E               1318      BSR HEXTOASCII 
0000284C                          1319       
0000284C  4841                    1320      SWAP D1
0000284E                          1321      
0000284E  E159                    1322      ROL #8,D1
00002850  103C 0006               1323      MOVE.B #6,D0
00002854  4E4F                    1324      TRAP #15
00002856                          1325      
00002856  E159                    1326      ROL #8,D1
00002858  103C 0006               1327      MOVE.B #6,D0
0000285C  4E4F                    1328      TRAP #15
0000285E                          1329      
0000285E  4841                    1330      SWAP D1
00002860  E159                    1331      ROL #8,D1
00002862  103C 0006               1332      MOVE.B #6,D0
00002866  4E4F                    1333      TRAP #15
00002868                          1334      
00002868  E159                    1335      ROL #8,D1
0000286A  103C 0006               1336      MOVE.B #6,D0
0000286E  4E4F                    1337      TRAP #15
00002870                          1338      
00002870                          1339      
00002870  227C 00001064           1340      MOVEA.L #SPACE,A1     
00002876  103C 000D               1341      MOVE.B #13,D0
0000287A  4E4F                    1342      TRAP #15
0000287C                          1343  
0000287C                          1344      ;PRINT DATA 
0000287C  227C 00001092           1345      MOVEA.L #DATA,A1     
00002882  103C 000E               1346      MOVE.B #14,D0
00002886  4E4F                    1347      TRAP #15
00002888                          1348      
00002888  3204                    1349      MOVE.W D4,D1
0000288A                          1350      
0000288A  6100 005C               1351      BSR HEXTOASCII 
0000288E                          1352       
0000288E  4841                    1353      SWAP D1
00002890                          1354      
00002890  E159                    1355      ROL #8,D1
00002892  103C 0006               1356      MOVE.B #6,D0
00002896  4E4F                    1357      TRAP #15
00002898                          1358      
00002898  E159                    1359      ROL #8,D1
0000289A  103C 0006               1360      MOVE.B #6,D0
0000289E  4E4F                    1361      TRAP #15
000028A0                          1362      
000028A0  4841                    1363      SWAP D1
000028A2  E159                    1364      ROL #8,D1
000028A4  103C 0006               1365      MOVE.B #6,D0
000028A8  4E4F                    1366      TRAP #15
000028AA                          1367      
000028AA  E159                    1368      ROL #8,D1
000028AC  103C 0006               1369      MOVE.B #6,D0
000028B0  4E4F                    1370      TRAP #15
000028B2                          1371      
000028B2                          1372      
000028B2  227C 00001064           1373      MOVEA.L #SPACE,A1     
000028B8  103C 000D               1374      MOVE.B #13,D0
000028BC  4E4F                    1375      TRAP #15
000028BE                          1376      
000028BE  6000 F740               1377      BRA pSTART
000028C2                          1378  
000028C2                          1379  
000028C2                          1380  
000028C2                          1381  GOFUNCTION ;D4 IS THE MEMLOC TO EXECUTE
000028C2  6100 00F6               1382      BSR ASCIITOHEX
000028C6  48E7 FFFF               1383      MOVEM.L D0-D7/A0-A7,-(SP)
000028CA  2244                    1384      MOVE.L D4,A1
000028CC  4ED1                    1385      JMP (A1)    
000028CE  6000 F730               1386      BRA pSTART
000028D2                          1387  
000028D2                          1388  DFFUNCTION
000028D2  227C 00001058           1389      MOVEA.L #DFPROMPT,A1     
000028D8  103C 000D               1390      MOVE.B #13,D0
000028DC  4E4F                    1391      TRAP #15
000028DE  6000 F720               1392      BRA pSTART
000028E2                          1393  
000028E2                          1394  EXITFUNCTION
000028E2  103C 0009               1395      MOVE.B #9,D0
000028E6  4E4F                    1396      TRAP #15
000028E8                          1397      
000028E8                          1398      
000028E8                          1399  ********* HELPER FUNCTIONS **********
000028E8                          1400  
000028E8                          1401  HEXTOASCII
000028E8                          1402  *-----------------------------------------------------------
000028E8                          1403  * Title      : HEX to ASCII CONVERTER
000028E8                          1404  * Written by : METE MORRIS
000028E8                          1405  * Date       : 
000028E8                          1406  * Description: CONVERTS HEX WORD READ TO ASCII, REGISTERS MODIFIED ARE D2,D3,D4,D5 RETURNS D1
000028E8                          1407  *-----------------------------------------------------------
000028E8                          1408       
000028E8  48E7 3C00               1409       MOVEM.L D2-D5,-(SP)
000028EC                          1410       
000028EC  4282                    1411       CLR.L D2
000028EE  4283                    1412       CLR.L D3
000028F0  4284                    1413       CLR.L D4
000028F2  4285                    1414       CLR.L D5
000028F4                          1415       
000028F4                          1416       ;FIRST NO
000028F4  1401                    1417       MOVE.B D1,D2
000028F6  0882 0004               1418       BCLR #4,D2
000028FA  0882 0005               1419       BCLR #5,D2
000028FE  0882 0006               1420       BCLR #6,D2
00002902  0882 0007               1421       BCLR #7,D2
00002906                          1422       
00002906                          1423       ;SECOND NO
00002906  E849                    1424       LSR #4,D1
00002908  1601                    1425       MOVE.B D1,D3
0000290A  0883 0004               1426       BCLR #4,D3
0000290E  0883 0005               1427       BCLR #5,D3
00002912  0883 0006               1428       BCLR #6,D3
00002916  0883 0007               1429       BCLR #7,D3 
0000291A                          1430       
0000291A                          1431       ;THIRD NO
0000291A  E849                    1432       LSR #4,D1
0000291C  1801                    1433       MOVE.B D1,D4
0000291E  0884 0004               1434       BCLR #4,D4
00002922  0884 0005               1435       BCLR #5,D4
00002926  0884 0006               1436       BCLR #6,D4
0000292A  0884 0007               1437       BCLR #7,D4 
0000292E                          1438       
0000292E                          1439       ;FOURTH NO
0000292E  E849                    1440       LSR #4,D1
00002930  1A01                    1441       MOVE.B D1,D5
00002932  0885 0004               1442       BCLR #4,D5
00002936  0885 0005               1443       BCLR #5,D5
0000293A  0885 0006               1444       BCLR #6,D5
0000293E  0885 0007               1445       BCLR #7,D5 
00002942                          1446      
00002942                          1447      
00002942                          1448      ;CONVERT FIRST NO TO ASCII
00002942  B43C 0009               1449       CMP.B #9,D2
00002946  6E00 000C               1450       BGT LARGER1
0000294A  0682 00000030           1451       ADD.L #$30,D2
00002950  6000 0008               1452       BRA SECOND
00002954                          1453  LARGER1
00002954  0682 00000037           1454       ADD.L #$37,D2
0000295A                          1455       
0000295A                          1456  SECOND     
0000295A                          1457      ;CONVERT SECOND NO TO ASCII
0000295A  B63C 0009               1458       CMP.B #9,D3
0000295E  6E00 000C               1459       BGT LARGER2
00002962  0683 00000030           1460       ADD.L #$30,D3
00002968  6000 0008               1461       BRA THIRD
0000296C                          1462  LARGER2
0000296C  0683 00000037           1463       ADD.L #$37,D3
00002972                          1464  
00002972                          1465  THIRD     
00002972                          1466      ;CONVERT THIRD NO TO ASCII
00002972  B83C 0009               1467       CMP.B #9,D4
00002976  6E00 000C               1468       BGT LARGER3
0000297A  0684 00000030           1469       ADD.L #$30,D4
00002980  6000 0008               1470       BRA FOURTH
00002984                          1471  LARGER3
00002984  0684 00000037           1472       ADD.L #$37,D4
0000298A                          1473  
0000298A                          1474  FOURTH    
0000298A                          1475      ;CONVERT FOURTH NO TO ASCII
0000298A  BA3C 0009               1476       CMP.B #9,D5
0000298E  6E00 000C               1477       BGT LARGER4
00002992  0685 00000030           1478       ADD.L #$30,D5
00002998  6000 0008               1479       BRA ADDFINISH
0000299C                          1480  LARGER4
0000299C  0685 00000037           1481       ADD.L #$37,D5
000029A2                          1482       
000029A2                          1483      
000029A2                          1484      ;ROTATE AND ADD THE NUMBERS     
000029A2                          1485  ADDFINISH
000029A2  4281                    1486       CLR.L D1
000029A4  D282                    1487       ADD.L D2,D1
000029A6                          1488       
000029A6  E14B                    1489       LSL #8,D3
000029A8  D283                    1490       ADD.L D3,D1
000029AA                          1491       
000029AA  4844                    1492       SWAP.W D4
000029AC  D284                    1493       ADD.L D4,D1
000029AE                          1494       
000029AE  E14D                    1495       LSL #8,D5
000029B0  4845                    1496       SWAP.W D5
000029B2  D285                    1497       ADD.L D5,D1
000029B4                          1498       
000029B4  4CDF 003C               1499       MOVEM.L (SP)+,D2-D5
000029B8                          1500       
000029B8  4E75                    1501       RTS    
000029BA                          1502  
000029BA                          1503  
000029BA                          1504  ASCIITOHEX
000029BA                          1505  *-----------------------------------------------------------
000029BA                          1506  * Title      : ASCII to HEX CONVERTER
000029BA                          1507  * Written by : METE MORRIS
000029BA                          1508  * Date       : 
000029BA                          1509  * Description: CONVERTS ASCII  LWORD READ TO HEX, REGISTERS MODIFIED ARE D3,D5,D6,D7 RETURNS RESUT IN D4
000029BA                          1510  *-----------------------------------------------------------
000029BA                          1511  
000029BA  48E7 1700               1512       MOVEM.L D3/D5-D7,-(SP)
000029BE  4283                    1513       CLR.L D3
000029C0  4285                    1514       CLR.L D5
000029C2  4286                    1515       CLR.L D6
000029C4  4287                    1516       CLR.L D7
000029C6                          1517  FIRSTBYTE
000029C6  1604                    1518       MOVE.B D4,D3
000029C8  B67C 0041               1519       CMP #$41,D3
000029CC  6C00 000A               1520       BGE ALP1
000029D0  0403 0030               1521       SUB.B #$30,D3
000029D4  6000 0006               1522       BRA SECONDBYTE
000029D8                          1523  ALP1 
000029D8  0403 0037               1524       SUB.B #$37,D3    
000029DC                          1525       
000029DC                          1526  SECONDBYTE
000029DC  E04C                    1527       LSR #8,D4
000029DE  1A04                    1528       MOVE.B D4,D5
000029E0  BA7C 0041               1529       CMP #$41,D5
000029E4  6C00 000A               1530       BGE ALP2
000029E8  0405 0030               1531       SUB.B #$30,D5
000029EC  6000 0006               1532       BRA THIRDBYTE
000029F0                          1533  ALP2 
000029F0  0405 0037               1534       SUB.B #$37,D5    
000029F4                          1535       
000029F4                          1536  THIRDBYTE
000029F4  4844                    1537       SWAP D4
000029F6  1C04                    1538       MOVE.B D4,D6
000029F8  BC7C 0041               1539       CMP #$41,D6
000029FC  6C00 000A               1540       BGE ALP3
00002A00  0406 0030               1541       SUB.B #$30,D6
00002A04  6000 0006               1542       BRA FOURTHBYTE
00002A08                          1543  ALP3 
00002A08  0406 0037               1544       SUB.B #$37,D6    
00002A0C                          1545       
00002A0C                          1546       
00002A0C                          1547  FOURTHBYTE
00002A0C  E04C                    1548       LSR #8,D4
00002A0E  1E04                    1549       MOVE.B D4,D7 
00002A10  BE7C 0041               1550       CMP #$41,D7
00002A14  6C00 000A               1551       BGE ALP4
00002A18  0407 0030               1552       SUB.B #$30,D7
00002A1C  6000 0006               1553       BRA FINISH2
00002A20                          1554  ALP4 
00002A20  0407 0037               1555       SUB.B #$37,D7   
00002A24                          1556          
00002A24                          1557      
00002A24                          1558      ;ROTATE AND ADD THE NUMBERS 
00002A24                          1559  FINISH2    
00002A24  4284                    1560       CLR.L D4
00002A26  D883                    1561       ADD.L D3,D4
00002A28                          1562       
00002A28  E94D                    1563       LSL #4,D5
00002A2A  D885                    1564       ADD.L D5,D4
00002A2C                          1565       
00002A2C  E14E                    1566       LSL #8,D6
00002A2E  D886                    1567       ADD.L D6,D4
00002A30                          1568       
00002A30  E14F                    1569       LSL #8,D7
00002A32  E94F                    1570       LSL #4,D7
00002A34  D887                    1571       ADD.L D7,D4
00002A36                          1572       
00002A36  4CDF 00E8               1573       MOVEM.L (SP)+,D3/D5-D7
00002A3A                          1574       
00002A3A                          1575       
00002A3A  4E75                    1576       RTS
00002A3C                          1577  
00002A3C                          1578  
00002A3C                          1579  
00002A3C                          1580  
00002A3C                          1581  
00002A3C                          1582      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDFINISH           29A2
ADDRESS             1087
ALP1                29D8
ALP2                29F0
ALP3                2A08
ALP4                2A20
ASCIITOHEX          29BA
BFFUNCTION          26AA
BFFUNCTIONL1        26C2
BFPROMPT            1043
BMOVFUNCTION        26CC
BMOVFUNCTIONL1      26E4
BMOVPROMPT          1046
BSCHEQUAL           282C
BSCHFUNCTION        27FA
BSCHFUNCTIONL1      2810
BSCHPROMPT          1050
BTSTERROR           2722
BTSTFAIL            10B6
BTSTFUNCTION        26EE
BTSTFUNCTIONL1      2704
BTSTPROMPT          104B
BTSTSUCCESS         10A7
CMPBFL1             21B0
CMPBFL2             21C6
CMPBFL3             21DC
CMPBMOVL1           2212
CMPBMOVL2           2228
CMPBMOVL3           223E
CMPBSCHL1           22BE
CMPBSCHL2           22D4
CMPBSCHL3           22EA
CMPBTSTL1           2272
CMPBTSTL2           2288
CMPGOL1             2320
CMPMDSPL1           2050
CMPMDSPL2           2066
CMPMML1             20F6
CMPMML2             210C
CMPMSL1             214C
CMPMSL2             2162
CMPMSL3             2178
CMPSORTWL1          2094
CMPSORTWL2          20AA
CMPSORTWL3          20C0
COMPAREBF           2190
COMPAREBF2          219A
COMPAREBMOV         21F2
COMPAREBMOV2        21FC
COMPAREBSCH         229E
COMPAREBSCH2        22A8
COMPAREBTST         2254
COMPAREBTST2        225E
COMPAREDF           2336
COMPAREDF2          2340
COMPAREEXIT         2354
COMPAREEXIT2        235E
COMPAREGO           2300
COMPAREGO2          230A
COMPAREHELP         201E
COMPAREMDSP         2032
COMPAREMDSP2        203C
COMPAREMM           20D8
COMPAREMM2          20E2
COMPAREMS           212C
COMPAREMS2          2136
COMPARESORTW        2074
COMPARESORTW2       207E
DATA                1092
DATAREAD            10C2
DATASTORED          10CE
DFFUNCTION          28D2
DFPROMPT            1058
DOT                 106B
EXITFUNCTION        28E2
EXITPROMPT          105B
FAIL                2372
FINISH2             2A24
FIRSTBYTE           29C6
FOURTH              298A
FOURTHBYTE          2A0C
GOFUNCTION          28C2
GOPROMPT            1055
HELP                10DC
HELPFUNCTION        2382
HELPPROMPT          102D
HEXTOASCII          28E8
LARGER1             2954
LARGER2             296C
LARGER3             2984
LARGER4             299C
LINEPROMPT          1066
MDSPFUNCTION1       2392
MDSPFUNCTION1L1     23A0
MDSPFUNCTION2       2402
MDSPFUNCTION2L1     2412
MDSPPROMPT          1032
MMFUNCTION          2484
MMFUNCTIONL1        24A2
MMFUNCTIONL2        2520
MMFUNCTIONL3        25B6
MMPROMPT            103D
MSFUNCTION          2682
MSFUNCTIONL1        2698
MSFUNCTIONL2        26A4
MSPROMPT            1040
NOPROMPT            100D
PROMPT              1000
PSTART              2000
SEARCHFAIL          1099
SEARCHSUCCESS       106C
SECOND              295A
SECONDBYTE          29DC
SEMICOLONSEP        1060
SORTWFUNCTION       2474
SORTWPROMPT         1037
SPACE               1064
START               2000
THIRD               2972
THIRDBYTE           29F4
