CONVERT
    DC.B 'CONVERT'    
REGCLRPROMPT:
    DC.B 'REGCLR'
    DC.B 0  



COMPARECONVERT
    SUB.L D3,A1
    CLR.L D3
    MOVE.L #CONVERT,A0
COMPARECONVERT2
    ADD.L #1,D3
    CMPM.B (A0)+,(A1)+
    BNE COMPAREREGCLR
    CMPI.B #32,-1(A0)  ;COMPARING LAST PART TO SPACE TO SEE IF THE STRING ENDS WITH A SPACE
    BNE COMPARECONVERT2
   ;CHECK FOR THE ARGUMENTS
    CLR.L D4 ;FIRST ARG
    CLR.L D5 ;SECOND ARG
CMPCONVERTL1
    ADD.B (A1)+,D4   ; MOVE THE MEMORY LOCATION NUMBER TO D4
    CMPI.B #0,(A1)  ;COMPARING LAST PART TO EMPTY STRNG
    BEQ CONVERTHELP ;FAILS IF NO MEM IS GIVEN
    CMPI.B #32,(A1) ;COMPARING LAST PART TO SPACE
    BEQ CMPCONVERTL2
    LSL.L #8,D4
    BSR CMPCONVERTL1
CMPCONVERTL2
    ADD.B 1(A1),D5   ; MOVE THE SECOND MEMORY LOCATION AFTER SPACE TO D5
    CMP.B #'B',D5  ;COMPARING LAST PART TO B,W OR L
    BEQ MMFUNCTION ;FUNCTION 
    CMP.B #'W',D5 
    BEQ MMFUNCTION ;FUNCTION
    CMP.B #'L',D5  
    BEQ MMFUNCTION ;FUNCTION
    ;D4 GIVES THE ADDRESS D5 GIVES THE MODE
    BRA MMHELP ;IF END IS NOT EQUAL FAIL AND EXIT



//////////////////////////////////////////////////////////////////

    DC.B $D  
    DC.B $A
    DC.B $A
    DC.B 'CV'
    DC.B $D  
    DC.B $A
    DC.B $9 
    DC.B 'CONVERTS hex WORD to ASCII or ASCII WORD to hex and DISPLAYS IT'


////////////////////////////////////////
MSFUNCTION   ;D4 IS ADDRESS, D5 IS DATA, D6 IS ASCII OR HEX, WORD OPERATIONS ONLY
    BSR ASCIITOHEX
    MOVE.L D4,A2 ;MEMLOC FOR DATA TO BE STORED
    ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
    CMP.B #'H',D6 
    BEQ MSFUNCTIONL1 ;FUNCTION FOR WHEN THE NUM GIVEN IS HEX
    CMP.B #'A',D6
    BEQ MSFUNCTIONL2 ;FUNCTION FOR WHE THE NUM GIVEN IS ASCII
    
MSFUNCTIONL1
    MOVE.L D5,D4 
    BSR ASCIITOHEX
    MOVE.W D4,(A2)
    MOVEM.L (SP)+,A0-A6/D0-D7
    BRA pSTART
MSFUNCTIONL2
    MOVE.L D5,(A2)
    MOVEM.L (SP)+, A0-A6/D0-D7
    BRA pSTART





CONVERTFUNCTION:  ;D4 IS THE DATA IN ASCII, D5 IS THE MODE, IF A, CONVERT IT TO ASCII AND STORE IN 8000, IF H CONVERT THE NUMBER TO HEX AND STORE IT 
    BSR ASCIITOHEX
    MOVE.L D4,A2 ;MEMLOC FOR DATA TO BE STORED
    ;IGNORING B,M,L BUSSINESS FOR NOW AND ASSUMING B
    CMP.B #'H',D5 
    BEQ CONVERTFUNCTIONL1 ;CONVERT TO HEX AND DISPLAY
    CMP.B #'A',D6
    BEQ CONVERTFUNCTIONL2 ;CONVERT TO ASCII AND DISPLAY
    
CONVERTFUNCTIONL1  ;CONVERTS ASCII TO HEX AND DISPLAYS
    BSR ASCIITOHEX
    SWAP.W D4
    ADD.W #$3030,D4 ;ADD 0 0 AS PRECURSOR
    SWAP.W D4 ;SWAP BACK TO NORMAL ORDER
    BSR ASCIITOHEX

    MOVE.L D4,D1 ; ALREADY HAVE IT IN ASCII
    
    ;PRINT NUMBER 1 BY 1
    SWAP D1
    
    ROL #8,D1
    MOVE.B #6,D0
    TRAP #15
    ROL #8,D1
    MOVE.B #6,D0
    TRAP #15
    
    SWAP D1
    ROL #8,D1
    MOVE.B #6,D0
    TRAP #15
    
    ROL #8,D1
    MOVE.B #6,D0
    TRAP #15

    MOVEM.L (SP)+,A0-A6/D0-D7
    BRA pSTART


CONVERTFUNCTIONL2   ;CONVERTS HEX TO ASCII AND DISPLAYS
    ;CONVERT HEX TO ASCII
    BSR ASCIITOHEX
    ;STORE IT IN A REGISTER
    MOVE.L D4,D1
    ;DISPLAY AS IS
    MOVE.B #16,D2
    MOVE.B #15,D0
    TRAP #15

    MOVEM.L (SP)+, A0-A6/D0-D7
    BRA pSTART