BERR_VECT:
    MOVEM.L A1/D0-D2, -(SP)
    MOVE.L #14,D0
    LEA BERRSTR,A1
    TRAP #15
                 
    MOVE.B #16,D2
    LEA MSG1,A1      ; PRINT BA=
    MOVE.L #14,D0
    TRAP #15
    MOVE.L (18,A7),D1     ; PRINT ACCESS ADDRESS
    MOVE.B #15, D0      
    TRAP #15
        
    MOVE.B #16,D2
    LEA MSG2,A1      ; PRINT IR=
    MOVE.L #14,D0
    TRAP #15
    CLR.L D1
    MOVE.W (22,A7),D1     ; PRINT ADDRESS
    MOVE.B #15, D0      
    TRAP #15

    MOVE.B #16,D2
    LEA MSG3,A1      ; PRINT SSW=
    MOVE.L #14,D0
    TRAP #15
    CLR.L D1
    MOVE.W (16,A7),D1     ; PRINT ADDRESS
    MOVE.B #15, D0      
    TRAP #15
    MOVE.L #13,D0
    LEA EMPTY,A1
    TRAP #15
    MOVE.L (26,A7),PCMEM
    MOVE.W (24,A7),REGDATA   ;SAVE STATUS REGISTER
    MOVEM.L (SP)+, A1/D0-D2
    BSR DF
    ADD.L #14,SP     ;CLEANUP STACK FRAME
    JMP ENTRY
    
AERR_VECT:
    MOVEM.L A1/D0-D2, -(SP)
    MOVE.L #14,D0
    LEA ADDRERR,A1
    TRAP #15
                 
    MOVE.B #16,D2
    LEA MSG1,A1      ; PRINT BA=
    MOVE.L #14,D0
    TRAP #15
    MOVE.L (18,A7),D1     ; PRINT ACCESS ADDRESS
    MOVE.B #15, D0      
    TRAP #15
        
    MOVE.B #16,D2
    LEA MSG2,A1      ; PRINT IR=
    MOVE.L #14,D0
    TRAP #15
    CLR.L D1
    MOVE.W (22,A7),D1     ; PRINT ADDRESS
    MOVE.B #15, D0      
    TRAP #15

    MOVE.B #16,D2
    LEA MSG3,A1      ; PRINT SSW=
    MOVE.L #14,D0
    TRAP #15
    CLR.L D1
    MOVE.W (16,A7),D1     ; PRINT ADDRESS
    MOVE.B #15, D0      
    TRAP #15
    MOVE.L #13,D0
    LEA EMPTY,A1
    TRAP #15
    MOVE.L (26,A7),PCMEM
    MOVE.W (24,A7),REGDATA   ;SAVE STATUS REGISTER
    MOVEM.L (SP)+, A1/D0-D2
    BSR DF
    ADD.L #14,SP     ;CLEANUP STACK FRAME
    JMP ENTRY

ILL_VECT:
    MOVEM.L A1/D0, -(SP)
    MOVE.L #13,D0
    LEA ILLERR,A1
    TRAP #15
    MOVEM.L (SP)+, A1/D0
    MOVE.W (A7),REGDATA   ;SAVE STATUS REGISTER
    MOVE.L (2,A7),PCMEM
    BSR DF          ;DISPLAY REGISTERS
    ADD.L #6,SP     ;CLEANUP STACK FRAME
    JMP ENTRY
    
PRIV_VECT:
    MOVEM.L A1/D0, -(SP)
    MOVE.L #13,D0
    LEA PRIVERR,A1
    TRAP #15
    MOVEM.L (SP)+, A1/D0
    MOVE.W (A7),REGDATA   ;SAVE STATUS REGISTER
    MOVE.L (2,A7),PCMEM
    BSR DF          ;DISPLAY REGISTERS
    ADD.L #6,SP     ;CLEANUP STACK FRAME
    JMP ENTRY

DZERO_VECT:
    MOVEM.L A1/D0, -(SP)
    MOVE.L #13,D0
    LEA DZEROERR,A1
    TRAP #15
    MOVEM.L (SP)+, A1/D0
    MOVE.W (A7),REGDATA   ;SAVE STATUS REGISTER
    MOVE.L (2,A7),PCMEM
    BSR DF          ;DISPLAY REGISTERS
    ADD.L #6,SP     ;CLEANUP STACK FRAME
    JMP ENTRY
    
CHK_VECT:
    MOVEM.L A1/D0, -(SP)
    MOVE.L #13,D0
    LEA CHKERR,A1
    TRAP #15
    MOVEM.L (SP)+, A1/D0
    MOVE.W (A7),REGDATA   ;SAVE STATUS REGISTER
    MOVE.L (2,A7),PCMEM
    BSR DF          ;DISPLAY REGISTERS
    ADD.L #6,SP     ;CLEANUP STACK FRAME
    JMP ENTRY
  
LINEA_VECT:
    MOVEM.L A1/D0, -(SP)
    MOVE.L #13,D0
    LEA LINEAERR,A1
    TRAP #15
    MOVEM.L (SP)+, A1/D0
    MOVE.W (A7),REGDATA   ;SAVE STATUS REGISTER
    MOVE.L (2,A7),PCMEM
    BSR DF          ;DISPLAY REGISTERS
    ADD.L #6,SP     ;CLEANUP STACK FRAME
    JMP ENTRY
    
LINEF_VECT:
    MOVEM.L A1/D0, -(SP)
    MOVE.L #13,D0
    LEA LINEFERR,A1
    TRAP #15
    MOVEM.L (SP)+, A1/D0
    MOVE.W (A7),REGDATA   ;SAVE STATUS REGISTER
    MOVE.L (2,A7),PCMEM
    BSR DF          ;DISPLAY REGISTERS
    ADD.L #6,SP     ;CLEANUP STACK FRAME
    JMP ENTRY

IDTINIT:
    MOVE.L #AERR_VECT,$0C
    MOVE.L #BERR_VECT,$08
    MOVE.L #ILL_VECT,$10
    MOVE.L #PRIV_VECT,$20
    MOVE.L #DZERO_VECT,$14
    MOVE.L #CHK_VECT,$18
    MOVE.L #LINEA_VECT,$28
    MOVE.L #LINEF_VECT,$2C
    MOVE.L #TRAPRET,$84
    MOVE.L #ENTRY, $88
    RTS
